{
	"id": "a2f6d2537309503c6bd353987646cbaf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"GymTokenSmartContracts/GymToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract GymToken is ERC20, Pausable, AccessControl {\n    uint8 public constant decimal = 2;\n    uint256 public constant INITIAL_SUPPLY = 1000000 * (10 ** decimal);\n\n    bytes32 public constant MANAGER_ROLE = keccak256(\"MANAGER_ROLE\");\n    bytes32 public constant STAFF_ROLE = keccak256(\"STAFF_ROLE\");\n    bytes32 public constant MEMBER_ROLE = keccak256(\"MEMBER_ROLE\");\n    bytes32 public constant TRAINER_ROLE = keccak256(\"TRAINER_ROLE\");\n\n    // Constant reward amount for referrals (e.g., 10 tokens for every referral)\n    uint256 public constant REFERRAL_REWARD = 10 * (10**decimal);\n\n\n    enum MEMBERSHIP_TYPE{\n        Monthly,\n        Quarterly,\n        Annual\n    }\n\n    mapping(MEMBERSHIP_TYPE => uint256) public membershipPrices; // Membership prices by type\n    mapping(address => uint256) public membershipExpiry;        // Track expiry timestamps for members\n    mapping(address => uint256) public referralBonuses;\n\n    event MembershipPurchased(address indexed member, MEMBERSHIP_TYPE membershipType, uint256 duration);\n    event ReferralRewarded(address indexed referrer, uint256 amount);\n    event StaffPaid(address indexed staff, uint256 amount);\n\n    constructor(address manager) ERC20(\"GymToken\", \"GYM\") {\n        // Assign the manager both admin and manager roles\n        _grantRole(DEFAULT_ADMIN_ROLE, manager);\n        _grantRole(MANAGER_ROLE, manager);\n        \n        // Initialize membership prices\n        membershipPrices[MEMBERSHIP_TYPE.Monthly] = 50 * (10**decimal);       // 50 GYM tokens\n        membershipPrices[MEMBERSHIP_TYPE.Quarterly] = 140 * (10**decimal);    // 140 GYM tokens\n        membershipPrices[MEMBERSHIP_TYPE.Annual] = 500 * (10**decimal);       // 500 GYM tokens\n\n        // Mint initial token supply to the manager\n        _mint(manager, INITIAL_SUPPLY);\n\n    }\n\n    // Modifier to check if the caller is a manager\n    modifier onlyManager() {\n        require(hasRole(MANAGER_ROLE, msg.sender), \"Caller is not a manager\");\n        _;\n    }\n\n    // Modifier to check if the caller is a member\n    modifier onlyMember() {\n        require(hasRole(MEMBER_ROLE, msg.sender), \"Caller is not a member\");\n        _;\n    }\n\n    // Allows managers to pause all token-related activities\n    function pause() public onlyRole(MANAGER_ROLE) {\n        _pause();\n    }\n\n    // Allows managers to unpause token activities\n    function unpause() public onlyRole(MANAGER_ROLE) {\n        _unpause();\n    }\n\n    // Allows managers to transfer wages to staff\n    function payStaff(address staff, uint256 amount) public whenNotPaused onlyRole(MANAGER_ROLE) {\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance\");\n        _transfer(msg.sender, staff, amount);\n    }\n\n    // Referral bonus reward mechanism\n    function rewardReferral(address referrer) public whenNotPaused onlyRole(MANAGER_ROLE) {\n        // Ensure that the referrer has an active membership\n        require(block.timestamp < membershipExpiry[referrer], \"Referrer membership expired\");\n\n        // Reward the referrer with the specified amount\n        referralBonuses[referrer] += REFERRAL_REWARD;\n        _mint(referrer, REFERRAL_REWARD);\n\n        emit ReferralRewarded(referrer, REFERRAL_REWARD);\n    }\n\n    // Members can purchase memberships by burning tokens\n    function purchaseMembership(MEMBERSHIP_TYPE membershipType) public whenNotPaused onlyMember {\n        uint256 price = membershipPrices[membershipType];\n        require(balanceOf(msg.sender) >= price, \"Insufficient balance\");\n\n        _burn(msg.sender, price);\n\n        uint256 duration;\n\n        // Set the duration based on membership type\n        if (membershipType == MEMBERSHIP_TYPE.Monthly) {\n            duration = 30 days;\n        } else if (membershipType == MEMBERSHIP_TYPE.Quarterly) {\n            duration = 90 days;\n        } else if (membershipType == MEMBERSHIP_TYPE.Annual) {\n            duration = 365 days;\n        } else {\n            revert(\"Invalid membership type\");\n        }\n\n        // If the member has an existing membership, extend it; otherwise, set a new expiration time\n        if (block.timestamp < membershipExpiry[msg.sender]) {\n            membershipExpiry[msg.sender] += duration;\n        } else {\n            membershipExpiry[msg.sender] = block.timestamp + duration;\n        }\n\n        emit MembershipPurchased(msg.sender, membershipType, duration);\n    }\n\n\n    // Check remaining membership time\n    function getRemainingMembershipTime(address member) public view returns (uint256) {\n        if (block.timestamp >= membershipExpiry[member]) {\n            return 0;\n        } else {\n            return membershipExpiry[member] - block.timestamp;\n        }\n    }\n}\n\n// examples:\n// staff address: 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2\n// example member address: 0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db\n// personal trainer address: 0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 533,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 646,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 652,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 654,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 656,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 658,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GymTokenSmartContracts/GymToken.sol": {
				"GymToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "manager",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "member",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum GymToken.MEMBERSHIP_TYPE",
									"name": "membershipType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "MembershipPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ReferralRewarded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staff",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StaffPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MEMBER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REFERRAL_REWARD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "STAFF_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TRAINER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimal",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "getRemainingMembershipTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "membershipExpiry",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum GymToken.MEMBERSHIP_TYPE",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "membershipPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staff",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "payStaff",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum GymToken.MEMBERSHIP_TYPE",
									"name": "membershipType",
									"type": "uint8"
								}
							],
							"name": "purchaseMembership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referralBonuses",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								}
							],
							"name": "rewardReferral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GymTokenSmartContracts/GymToken.sol\":230:4910  contract GymToken is ERC20, Pausable, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"GymTokenSmartContracts/GymToken.sol\":1398:2040  constructor(address manager) ERC20(\"GymToken\", \"GYM\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x47796d546f6b656e000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x47594d0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"GymTokenSmartContracts/GymToken.sol\":1521:1560  _grantRole(DEFAULT_ADMIN_ROLE, manager) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"GymTokenSmartContracts/GymToken.sol\":1532:1550  DEFAULT_ADMIN_ROLE */\n  0x00\n  shl\n    /* \"GymTokenSmartContracts/GymToken.sol\":1552:1559  manager */\n  dup3\n    /* \"GymTokenSmartContracts/GymToken.sol\":1521:1531  _grantRole */\n  shl(0x20, tag_14)\n    /* \"GymTokenSmartContracts/GymToken.sol\":1521:1560  _grantRole(DEFAULT_ADMIN_ROLE, manager) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"GymTokenSmartContracts/GymToken.sol\":1570:1603  _grantRole(MANAGER_ROLE, manager) */\n  tag_15\n    /* \"GymTokenSmartContracts/GymToken.sol\":439:464  keccak256(\"MANAGER_ROLE\") */\n  0x241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08\n    /* \"GymTokenSmartContracts/GymToken.sol\":1595:1602  manager */\n  dup3\n    /* \"GymTokenSmartContracts/GymToken.sol\":1570:1580  _grantRole */\n  shl(0x20, tag_14)\n    /* \"GymTokenSmartContracts/GymToken.sol\":1570:1603  _grantRole(MANAGER_ROLE, manager) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n  pop\n    /* \"GymTokenSmartContracts/GymToken.sol\":320:321  2 */\n  0x02\n    /* \"GymTokenSmartContracts/GymToken.sol\":1712:1714  10 */\n  0x0a\n    /* \"GymTokenSmartContracts/GymToken.sol\":1712:1723  10**decimal */\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"GymTokenSmartContracts/GymToken.sol\":1706:1708  50 */\n  0x32\n    /* \"GymTokenSmartContracts/GymToken.sol\":1706:1724  50 * (10**decimal) */\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"GymTokenSmartContracts/GymToken.sol\":1662:1678  membershipPrices */\n  0x07\n    /* \"GymTokenSmartContracts/GymToken.sol\":1662:1703  membershipPrices[MEMBERSHIP_TYPE.Monthly] */\n  0x00\n    /* \"GymTokenSmartContracts/GymToken.sol\":1679:1702  MEMBERSHIP_TYPE.Monthly */\n  0x00\n    /* \"GymTokenSmartContracts/GymToken.sol\":1662:1703  membershipPrices[MEMBERSHIP_TYPE.Monthly] */\n  0x02\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  tag_21\n  tag_22\n  jump\t// in\ntag_21:\ntag_20:\n  0x02\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  tag_24\n  tag_22\n  jump\t// in\ntag_24:\ntag_23:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"GymTokenSmartContracts/GymToken.sol\":1662:1724  membershipPrices[MEMBERSHIP_TYPE.Monthly] = 50 * (10**decimal) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"GymTokenSmartContracts/GymToken.sol\":320:321  2 */\n  0x02\n    /* \"GymTokenSmartContracts/GymToken.sol\":1810:1812  10 */\n  0x0a\n    /* \"GymTokenSmartContracts/GymToken.sol\":1810:1821  10**decimal */\n  tag_25\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"GymTokenSmartContracts/GymToken.sol\":1803:1806  140 */\n  0x8c\n    /* \"GymTokenSmartContracts/GymToken.sol\":1803:1822  140 * (10**decimal) */\n  tag_26\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_26:\n    /* \"GymTokenSmartContracts/GymToken.sol\":1757:1773  membershipPrices */\n  0x07\n    /* \"GymTokenSmartContracts/GymToken.sol\":1757:1800  membershipPrices[MEMBERSHIP_TYPE.Quarterly] */\n  0x00\n    /* \"GymTokenSmartContracts/GymToken.sol\":1774:1799  MEMBERSHIP_TYPE.Quarterly */\n  0x01\n    /* \"GymTokenSmartContracts/GymToken.sol\":1757:1800  membershipPrices[MEMBERSHIP_TYPE.Quarterly] */\n  0x02\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  tag_28\n  tag_22\n  jump\t// in\ntag_28:\ntag_27:\n  0x02\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  tag_30\n  tag_22\n  jump\t// in\ntag_30:\ntag_29:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"GymTokenSmartContracts/GymToken.sol\":1757:1822  membershipPrices[MEMBERSHIP_TYPE.Quarterly] = 140 * (10**decimal) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"GymTokenSmartContracts/GymToken.sol\":320:321  2 */\n  0x02\n    /* \"GymTokenSmartContracts/GymToken.sol\":1903:1905  10 */\n  0x0a\n    /* \"GymTokenSmartContracts/GymToken.sol\":1903:1914  10**decimal */\n  tag_31\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_31:\n    /* \"GymTokenSmartContracts/GymToken.sol\":1896:1899  500 */\n  0x01f4\n    /* \"GymTokenSmartContracts/GymToken.sol\":1896:1915  500 * (10**decimal) */\n  tag_32\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_32:\n    /* \"GymTokenSmartContracts/GymToken.sol\":1853:1869  membershipPrices */\n  0x07\n    /* \"GymTokenSmartContracts/GymToken.sol\":1853:1893  membershipPrices[MEMBERSHIP_TYPE.Annual] */\n  0x00\n    /* \"GymTokenSmartContracts/GymToken.sol\":1870:1892  MEMBERSHIP_TYPE.Annual */\n  0x02\n    /* \"GymTokenSmartContracts/GymToken.sol\":1853:1893  membershipPrices[MEMBERSHIP_TYPE.Annual] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  tag_34\n  tag_22\n  jump\t// in\ntag_34:\ntag_33:\n  0x02\n  dup2\n  gt\n  iszero\n  tag_35\n  jumpi\n  tag_36\n  tag_22\n  jump\t// in\ntag_36:\ntag_35:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"GymTokenSmartContracts/GymToken.sol\":1853:1915  membershipPrices[MEMBERSHIP_TYPE.Annual] = 500 * (10**decimal) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"GymTokenSmartContracts/GymToken.sol\":2002:2032  _mint(manager, INITIAL_SUPPLY) */\n  tag_37\n    /* \"GymTokenSmartContracts/GymToken.sol\":2008:2015  manager */\n  dup2\n    /* \"GymTokenSmartContracts/GymToken.sol\":320:321  2 */\n  0x02\n    /* \"GymTokenSmartContracts/GymToken.sol\":379:381  10 */\n  0x0a\n    /* \"GymTokenSmartContracts/GymToken.sol\":379:392  10 ** decimal */\n  tag_38\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_38:\n    /* \"GymTokenSmartContracts/GymToken.sol\":368:375  1000000 */\n  0x0f4240\n    /* \"GymTokenSmartContracts/GymToken.sol\":368:393  1000000 * (10 ** decimal) */\n  tag_39\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_39:\n    /* \"GymTokenSmartContracts/GymToken.sol\":2002:2007  _mint */\n  shl(0x20, tag_40)\n    /* \"GymTokenSmartContracts/GymToken.sol\":2002:2032  _mint(manager, INITIAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"GymTokenSmartContracts/GymToken.sol\":1398:2040  constructor(address manager) ERC20(\"GymToken\", \"GYM\") {... */\n  pop\n    /* \"GymTokenSmartContracts/GymToken.sol\":230:4910  contract GymToken is ERC20, Pausable, AccessControl {... */\n  jump(tag_41)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_43\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_44)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_43:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_46\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_47)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_46:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_42)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_45:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_42:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_50\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_51\n  swap2\n  swap1\n  tag_52\n  jump\t// in\ntag_51:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_50:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_53\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_54)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_47:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_54:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_58\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_59\n  swap2\n  swap1\n  tag_60\n  jump\t// in\ntag_59:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_61)\ntag_58:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_62\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_63\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_64\n  jump\t// in\ntag_63:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_62:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_61:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_65\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_66)\ntag_65:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_66:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_67\n  swap2\n  swap1\n  tag_68\n  jump\t// in\ntag_67:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_70:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_72:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_73:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_109\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_72\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_74:\n    /* \"#utility.yul\":641:665   */\n  tag_111\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_73\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_112\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_112:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_75:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_114\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_74\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_117\n  tag_70\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":932:1051   */\ntag_116:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_118\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_75\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_76:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_77:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_78:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_79:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_123\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_123:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_124\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_125\n  tag_78\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":1909:1993   */\ntag_124:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_80:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_81:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_82:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_83:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_130\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_82\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2624:2663   */\n  tag_131\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_82\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_84:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_85:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_86:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_135\n    /* \"#utility.yul\":3013:3047   */\n  tag_136\n    /* \"#utility.yul\":3022:3046   */\n  tag_137\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_84\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":3013:3047   */\n  tag_85\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":2995:3048   */\n  tag_84\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_87:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_88:\n    /* \"#utility.yul\":3251:3290   */\n  tag_140\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_86\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":3312:3403   */\n  tag_141\n    /* \"#utility.yul\":3361:3402   */\n  tag_142\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_87\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_83\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_89:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3482:3483   */\n  0x00\n    /* \"#utility.yul\":3475:3483   */\n  swap1\n  pop\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_90:\n    /* \"#utility.yul\":3572:3604   */\n  tag_145\n  tag_89\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":3613:3678   */\n  tag_146\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_88\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_91:\n    /* \"#utility.yul\":3750:3870   */\ntag_148:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_151\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_90\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_148)\ntag_150:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_92:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_154\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_80\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4101:4130   */\n  tag_155\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_81\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_156:\n    /* \"#utility.yul\":4328:4408   */\n  tag_157\n    /* \"#utility.yul\":4384:4406   */\n  tag_158\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_81\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_91\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_153:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_93:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_94:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_161\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_93\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_95:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_163\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_94\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_165\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_76\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_167\n  tag_77\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":5233:5289   */\ntag_166:\n    /* \"#utility.yul\":5313:5351   */\n  tag_168\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_79\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":5398:5465   */\n  tag_169\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_92\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_171\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_172:\n    /* \"#utility.yul\":6339:6406   */\n  tag_173\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_95\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_170)\n    /* \"#utility.yul\":5560:6178   */\ntag_171:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_174\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_80\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_175:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_175)\ntag_177:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_179\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_94\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_178:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_170:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6609   */\ntag_96:\n    /* \"#utility.yul\":6477:6554   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6474:6475   */\n  0x00\n    /* \"#utility.yul\":6467:6555   */\n  mstore\n    /* \"#utility.yul\":6574:6578   */\n  0x11\n    /* \"#utility.yul\":6571:6572   */\n  0x04\n    /* \"#utility.yul\":6564:6579   */\n  mstore\n    /* \"#utility.yul\":6598:6602   */\n  0x24\n    /* \"#utility.yul\":6595:6596   */\n  0x00\n    /* \"#utility.yul\":6588:6603   */\n  revert\n    /* \"#utility.yul\":6615:6717   */\ntag_97:\n    /* \"#utility.yul\":6657:6665   */\n  0x00\n    /* \"#utility.yul\":6704:6709   */\n  dup2\n    /* \"#utility.yul\":6701:6702   */\n  0x01\n    /* \"#utility.yul\":6697:6710   */\n  shr\n    /* \"#utility.yul\":6676:6710   */\n  swap1\n  pop\n    /* \"#utility.yul\":6615:6717   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6723:7571   */\ntag_98:\n    /* \"#utility.yul\":6784:6789   */\n  0x00\n    /* \"#utility.yul\":6791:6795   */\n  0x00\n    /* \"#utility.yul\":6815:6821   */\n  dup3\n    /* \"#utility.yul\":6806:6821   */\n  swap2\n  pop\n    /* \"#utility.yul\":6839:6844   */\n  dup4\n    /* \"#utility.yul\":6830:6844   */\n  swap1\n  pop\n    /* \"#utility.yul\":6853:7565   */\ntag_183:\n    /* \"#utility.yul\":6874:6875   */\n  0x01\n    /* \"#utility.yul\":6864:6872   */\n  dup6\n    /* \"#utility.yul\":6861:6876   */\n  gt\n    /* \"#utility.yul\":6853:7565   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":6969:6973   */\n  dup1\n    /* \"#utility.yul\":6964:6967   */\n  dup7\n    /* \"#utility.yul\":6960:6974   */\n  div\n    /* \"#utility.yul\":6954:6958   */\n  dup2\n    /* \"#utility.yul\":6951:6975   */\n  gt\n    /* \"#utility.yul\":6948:6998   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":6978:6996   */\n  tag_187\n  tag_96\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":6948:6998   */\ntag_186:\n    /* \"#utility.yul\":7028:7029   */\n  0x01\n    /* \"#utility.yul\":7018:7026   */\n  dup6\n    /* \"#utility.yul\":7014:7030   */\n  and\n    /* \"#utility.yul\":7011:7462   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":7443:7447   */\n  dup1\n    /* \"#utility.yul\":7436:7441   */\n  dup3\n    /* \"#utility.yul\":7432:7448   */\n  mul\n    /* \"#utility.yul\":7423:7448   */\n  swap2\n  pop\n    /* \"#utility.yul\":7011:7462   */\ntag_188:\n    /* \"#utility.yul\":7493:7497   */\n  dup1\n    /* \"#utility.yul\":7487:7491   */\n  dup2\n    /* \"#utility.yul\":7483:7498   */\n  mul\n    /* \"#utility.yul\":7475:7498   */\n  swap1\n  pop\n    /* \"#utility.yul\":7523:7555   */\n  tag_189\n    /* \"#utility.yul\":7546:7554   */\n  dup6\n    /* \"#utility.yul\":7523:7555   */\n  tag_97\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":7511:7555   */\n  swap5\n  pop\n    /* \"#utility.yul\":6853:7565   */\n  jump(tag_183)\ntag_185:\n    /* \"#utility.yul\":6723:7571   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7577:8650   */\ntag_99:\n    /* \"#utility.yul\":7631:7636   */\n  0x00\n    /* \"#utility.yul\":7822:7830   */\n  dup3\n    /* \"#utility.yul\":7812:7852   */\n  tag_191\n  jumpi\n    /* \"#utility.yul\":7843:7844   */\n  0x01\n    /* \"#utility.yul\":7834:7844   */\n  swap1\n  pop\n    /* \"#utility.yul\":7845:7850   */\n  jump(tag_190)\n    /* \"#utility.yul\":7812:7852   */\ntag_191:\n    /* \"#utility.yul\":7871:7875   */\n  dup2\n    /* \"#utility.yul\":7861:7897   */\n  tag_192\n  jumpi\n    /* \"#utility.yul\":7888:7889   */\n  0x00\n    /* \"#utility.yul\":7879:7889   */\n  swap1\n  pop\n    /* \"#utility.yul\":7890:7895   */\n  jump(tag_190)\n    /* \"#utility.yul\":7861:7897   */\ntag_192:\n    /* \"#utility.yul\":7957:7961   */\n  dup2\n    /* \"#utility.yul\":8005:8006   */\n  0x01\n    /* \"#utility.yul\":8000:8027   */\n  dup2\n  eq\n  tag_194\n  jumpi\n    /* \"#utility.yul\":8041:8042   */\n  0x02\n    /* \"#utility.yul\":8036:8227   */\n  dup2\n  eq\n  tag_195\n  jumpi\n    /* \"#utility.yul\":7950:8227   */\n  jump(tag_193)\n    /* \"#utility.yul\":8000:8027   */\ntag_194:\n    /* \"#utility.yul\":8018:8019   */\n  0x01\n    /* \"#utility.yul\":8009:8019   */\n  swap2\n  pop\n    /* \"#utility.yul\":8020:8025   */\n  pop\n  jump(tag_190)\n    /* \"#utility.yul\":8036:8227   */\ntag_195:\n    /* \"#utility.yul\":8081:8084   */\n  0xff\n    /* \"#utility.yul\":8071:8079   */\n  dup5\n    /* \"#utility.yul\":8068:8085   */\n  gt\n    /* \"#utility.yul\":8065:8108   */\n  iszero\n  tag_196\n  jumpi\n    /* \"#utility.yul\":8088:8106   */\n  tag_197\n  tag_96\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":8065:8108   */\ntag_196:\n    /* \"#utility.yul\":8137:8145   */\n  dup4\n    /* \"#utility.yul\":8134:8135   */\n  0x02\n    /* \"#utility.yul\":8130:8146   */\n  exp\n    /* \"#utility.yul\":8121:8146   */\n  swap2\n  pop\n    /* \"#utility.yul\":8172:8175   */\n  dup5\n    /* \"#utility.yul\":8165:8170   */\n  dup3\n    /* \"#utility.yul\":8162:8176   */\n  gt\n    /* \"#utility.yul\":8159:8199   */\n  iszero\n  tag_198\n  jumpi\n    /* \"#utility.yul\":8179:8197   */\n  tag_199\n  tag_96\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":8159:8199   */\ntag_198:\n    /* \"#utility.yul\":8212:8217   */\n  pop\n  jump(tag_190)\n    /* \"#utility.yul\":7950:8227   */\ntag_193:\n  pop\n    /* \"#utility.yul\":8336:8338   */\n  0x20\n    /* \"#utility.yul\":8326:8334   */\n  dup4\n    /* \"#utility.yul\":8323:8339   */\n  lt\n    /* \"#utility.yul\":8317:8320   */\n  0x0133\n    /* \"#utility.yul\":8311:8315   */\n  dup4\n    /* \"#utility.yul\":8308:8321   */\n  lt\n    /* \"#utility.yul\":8304:8340   */\n  and\n    /* \"#utility.yul\":8286:8288   */\n  0x4e\n    /* \"#utility.yul\":8276:8284   */\n  dup5\n    /* \"#utility.yul\":8273:8289   */\n  lt\n    /* \"#utility.yul\":8268:8270   */\n  0x0b\n    /* \"#utility.yul\":8262:8266   */\n  dup5\n    /* \"#utility.yul\":8259:8271   */\n  lt\n    /* \"#utility.yul\":8255:8290   */\n  and\n    /* \"#utility.yul\":8239:8350   */\n  or\n    /* \"#utility.yul\":8236:8482   */\n  iszero\n  tag_200\n  jumpi\n    /* \"#utility.yul\":8392:8400   */\n  dup3\n    /* \"#utility.yul\":8386:8390   */\n  dup3\n    /* \"#utility.yul\":8382:8401   */\n  exp\n    /* \"#utility.yul\":8373:8401   */\n  swap1\n  pop\n    /* \"#utility.yul\":8427:8430   */\n  dup4\n    /* \"#utility.yul\":8420:8425   */\n  dup2\n    /* \"#utility.yul\":8417:8431   */\n  gt\n    /* \"#utility.yul\":8414:8454   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":8434:8452   */\n  tag_202\n  tag_96\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":8414:8454   */\ntag_201:\n    /* \"#utility.yul\":8467:8472   */\n  jump(tag_190)\n    /* \"#utility.yul\":8236:8482   */\ntag_200:\n    /* \"#utility.yul\":8507:8549   */\n  tag_203\n    /* \"#utility.yul\":8545:8548   */\n  dup5\n    /* \"#utility.yul\":8535:8543   */\n  dup5\n    /* \"#utility.yul\":8529:8533   */\n  dup5\n    /* \"#utility.yul\":8526:8527   */\n  0x01\n    /* \"#utility.yul\":8507:8549   */\n  tag_98\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":8492:8549   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8581:8585   */\n  dup2\n    /* \"#utility.yul\":8576:8579   */\n  dup5\n    /* \"#utility.yul\":8572:8586   */\n  div\n    /* \"#utility.yul\":8565:8570   */\n  dup2\n    /* \"#utility.yul\":8562:8587   */\n  gt\n    /* \"#utility.yul\":8559:8610   */\n  iszero\n  tag_204\n  jumpi\n    /* \"#utility.yul\":8590:8608   */\n  tag_205\n  tag_96\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":8559:8610   */\ntag_204:\n    /* \"#utility.yul\":8639:8643   */\n  dup2\n    /* \"#utility.yul\":8632:8637   */\n  dup2\n    /* \"#utility.yul\":8628:8644   */\n  mul\n    /* \"#utility.yul\":8619:8644   */\n  swap1\n  pop\n    /* \"#utility.yul\":7577:8650   */\ntag_190:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8656:8742   */\ntag_100:\n    /* \"#utility.yul\":8691:8698   */\n  0x00\n    /* \"#utility.yul\":8731:8735   */\n  0xff\n    /* \"#utility.yul\":8724:8729   */\n  dup3\n    /* \"#utility.yul\":8720:8736   */\n  and\n    /* \"#utility.yul\":8709:8736   */\n  swap1\n  pop\n    /* \"#utility.yul\":8656:8742   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8748:9029   */\ntag_17:\n    /* \"#utility.yul\":8806:8811   */\n  0x00\n    /* \"#utility.yul\":8830:8853   */\n  tag_208\n    /* \"#utility.yul\":8848:8852   */\n  dup3\n    /* \"#utility.yul\":8830:8853   */\n  tag_84\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":8822:8853   */\n  swap2\n  pop\n    /* \"#utility.yul\":8874:8899   */\n  tag_209\n    /* \"#utility.yul\":8890:8898   */\n  dup4\n    /* \"#utility.yul\":8874:8899   */\n  tag_100\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":8862:8899   */\n  swap3\n  pop\n    /* \"#utility.yul\":8918:9022   */\n  tag_210\n    /* \"#utility.yul\":8955:9021   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8945:8953   */\n  dup5\n    /* \"#utility.yul\":8939:8943   */\n  dup5\n    /* \"#utility.yul\":8918:9022   */\n  tag_99\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":8909:9022   */\n  swap1\n  pop\n    /* \"#utility.yul\":8748:9029   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9035:9445   */\ntag_19:\n    /* \"#utility.yul\":9075:9082   */\n  0x00\n    /* \"#utility.yul\":9098:9118   */\n  tag_212\n    /* \"#utility.yul\":9116:9117   */\n  dup3\n    /* \"#utility.yul\":9098:9118   */\n  tag_84\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":9093:9118   */\n  swap2\n  pop\n    /* \"#utility.yul\":9132:9152   */\n  tag_213\n    /* \"#utility.yul\":9150:9151   */\n  dup4\n    /* \"#utility.yul\":9132:9152   */\n  tag_84\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":9127:9152   */\n  swap3\n  pop\n    /* \"#utility.yul\":9187:9188   */\n  dup3\n    /* \"#utility.yul\":9184:9185   */\n  dup3\n    /* \"#utility.yul\":9180:9189   */\n  mul\n    /* \"#utility.yul\":9209:9239   */\n  tag_214\n    /* \"#utility.yul\":9227:9238   */\n  dup2\n    /* \"#utility.yul\":9209:9239   */\n  tag_84\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":9198:9239   */\n  swap2\n  pop\n    /* \"#utility.yul\":9388:9389   */\n  dup3\n    /* \"#utility.yul\":9379:9386   */\n  dup3\n    /* \"#utility.yul\":9375:9390   */\n  div\n    /* \"#utility.yul\":9372:9373   */\n  dup5\n    /* \"#utility.yul\":9369:9391   */\n  eq\n    /* \"#utility.yul\":9349:9350   */\n  dup4\n    /* \"#utility.yul\":9342:9351   */\n  iszero\n    /* \"#utility.yul\":9322:9405   */\n  or\n    /* \"#utility.yul\":9299:9438   */\n  tag_215\n  jumpi\n    /* \"#utility.yul\":9418:9436   */\n  tag_216\n  tag_96\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":9299:9438   */\ntag_215:\n    /* \"#utility.yul\":9083:9445   */\n  pop\n    /* \"#utility.yul\":9035:9445   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9451:9631   */\ntag_22:\n    /* \"#utility.yul\":9499:9576   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9496:9497   */\n  0x00\n    /* \"#utility.yul\":9489:9577   */\n  mstore\n    /* \"#utility.yul\":9596:9600   */\n  0x21\n    /* \"#utility.yul\":9593:9594   */\n  0x04\n    /* \"#utility.yul\":9586:9601   */\n  mstore\n    /* \"#utility.yul\":9620:9624   */\n  0x24\n    /* \"#utility.yul\":9617:9618   */\n  0x00\n    /* \"#utility.yul\":9610:9625   */\n  revert\n    /* \"#utility.yul\":9637:9755   */\ntag_101:\n    /* \"#utility.yul\":9724:9748   */\n  tag_219\n    /* \"#utility.yul\":9742:9747   */\n  dup2\n    /* \"#utility.yul\":9724:9748   */\n  tag_73\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":9719:9722   */\n  dup3\n    /* \"#utility.yul\":9712:9749   */\n  mstore\n    /* \"#utility.yul\":9637:9755   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9761:9983   */\ntag_52:\n    /* \"#utility.yul\":9854:9858   */\n  0x00\n    /* \"#utility.yul\":9892:9894   */\n  0x20\n    /* \"#utility.yul\":9881:9890   */\n  dup3\n    /* \"#utility.yul\":9877:9895   */\n  add\n    /* \"#utility.yul\":9869:9895   */\n  swap1\n  pop\n    /* \"#utility.yul\":9905:9976   */\n  tag_221\n    /* \"#utility.yul\":9973:9974   */\n  0x00\n    /* \"#utility.yul\":9962:9971   */\n  dup4\n    /* \"#utility.yul\":9958:9975   */\n  add\n    /* \"#utility.yul\":9949:9955   */\n  dup5\n    /* \"#utility.yul\":9905:9976   */\n  tag_101\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":9761:9983   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9989:10180   */\ntag_60:\n    /* \"#utility.yul\":10029:10032   */\n  0x00\n    /* \"#utility.yul\":10048:10068   */\n  tag_223\n    /* \"#utility.yul\":10066:10067   */\n  dup3\n    /* \"#utility.yul\":10048:10068   */\n  tag_84\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":10043:10068   */\n  swap2\n  pop\n    /* \"#utility.yul\":10082:10102   */\n  tag_224\n    /* \"#utility.yul\":10100:10101   */\n  dup4\n    /* \"#utility.yul\":10082:10102   */\n  tag_84\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":10077:10102   */\n  swap3\n  pop\n    /* \"#utility.yul\":10125:10126   */\n  dup3\n    /* \"#utility.yul\":10122:10123   */\n  dup3\n    /* \"#utility.yul\":10118:10127   */\n  add\n    /* \"#utility.yul\":10111:10127   */\n  swap1\n  pop\n    /* \"#utility.yul\":10146:10149   */\n  dup1\n    /* \"#utility.yul\":10143:10144   */\n  dup3\n    /* \"#utility.yul\":10140:10150   */\n  gt\n    /* \"#utility.yul\":10137:10173   */\n  iszero\n  tag_225\n  jumpi\n    /* \"#utility.yul\":10153:10171   */\n  tag_226\n  tag_96\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":10137:10173   */\ntag_225:\n    /* \"#utility.yul\":9989:10180   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10186:10304   */\ntag_102:\n    /* \"#utility.yul\":10273:10297   */\n  tag_228\n    /* \"#utility.yul\":10291:10296   */\n  dup2\n    /* \"#utility.yul\":10273:10297   */\n  tag_84\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":10268:10271   */\n  dup3\n    /* \"#utility.yul\":10261:10298   */\n  mstore\n    /* \"#utility.yul\":10186:10304   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10310:10752   */\ntag_64:\n    /* \"#utility.yul\":10459:10463   */\n  0x00\n    /* \"#utility.yul\":10497:10499   */\n  0x60\n    /* \"#utility.yul\":10486:10495   */\n  dup3\n    /* \"#utility.yul\":10482:10500   */\n  add\n    /* \"#utility.yul\":10474:10500   */\n  swap1\n  pop\n    /* \"#utility.yul\":10510:10581   */\n  tag_230\n    /* \"#utility.yul\":10578:10579   */\n  0x00\n    /* \"#utility.yul\":10567:10576   */\n  dup4\n    /* \"#utility.yul\":10563:10580   */\n  add\n    /* \"#utility.yul\":10554:10560   */\n  dup7\n    /* \"#utility.yul\":10510:10581   */\n  tag_101\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":10591:10663   */\n  tag_231\n    /* \"#utility.yul\":10659:10661   */\n  0x20\n    /* \"#utility.yul\":10648:10657   */\n  dup4\n    /* \"#utility.yul\":10644:10662   */\n  add\n    /* \"#utility.yul\":10635:10641   */\n  dup6\n    /* \"#utility.yul\":10591:10663   */\n  tag_102\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":10673:10745   */\n  tag_232\n    /* \"#utility.yul\":10741:10743   */\n  0x40\n    /* \"#utility.yul\":10730:10739   */\n  dup4\n    /* \"#utility.yul\":10726:10744   */\n  add\n    /* \"#utility.yul\":10717:10723   */\n  dup5\n    /* \"#utility.yul\":10673:10745   */\n  tag_102\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":10310:10752   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10758:10980   */\ntag_68:\n    /* \"#utility.yul\":10851:10855   */\n  0x00\n    /* \"#utility.yul\":10889:10891   */\n  0x20\n    /* \"#utility.yul\":10878:10887   */\n  dup3\n    /* \"#utility.yul\":10874:10892   */\n  add\n    /* \"#utility.yul\":10866:10892   */\n  swap1\n  pop\n    /* \"#utility.yul\":10902:10973   */\n  tag_234\n    /* \"#utility.yul\":10970:10971   */\n  0x00\n    /* \"#utility.yul\":10959:10968   */\n  dup4\n    /* \"#utility.yul\":10955:10972   */\n  add\n    /* \"#utility.yul\":10946:10952   */\n  dup5\n    /* \"#utility.yul\":10902:10973   */\n  tag_102\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":10758:10980   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"GymTokenSmartContracts/GymToken.sol\":230:4910  contract GymToken is ERC20, Pausable, AccessControl {... */\ntag_41:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GymTokenSmartContracts/GymToken.sol\":230:4910  contract GymToken is ERC20, Pausable, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x76809ce3\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xb4694876\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xb4694876\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xea4bbaf4\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xec87621c\n      eq\n      tag_35\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0xa217fddf\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa61b93cc\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xa683dfab\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x8621026a\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x8621026a\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa10f469e\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x76809ce3\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x84a3a0f3\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x85290fa1\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x3f4ba83a\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4b6e2331\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x2f2ff15d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x18160ddd\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x265a5eea\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0ca2a400\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GymTokenSmartContracts/GymToken.sol\":2720:2940  function payStaff(address staff, uint256 amount) public whenNotPaused onlyRole(MANAGER_ROLE) {... */\n    tag_6:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GymTokenSmartContracts/GymToken.sol\":3510:4602  function purchaseMembership(MEMBERSHIP_TYPE membershipType) public whenNotPaused onlyMember {... */\n    tag_10:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_11:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"GymTokenSmartContracts/GymToken.sol\":327:393  uint256 public constant INITIAL_SUPPLY = 1000000 * (10 ** decimal) */\n    tag_12:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_13:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_14:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      stop\n        /* \"GymTokenSmartContracts/GymToken.sol\":2588:2664  function unpause() public onlyRole(MANAGER_ROLE) {... */\n    tag_15:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      stop\n        /* \"GymTokenSmartContracts/GymToken.sol\":908:967  mapping(MEMBERSHIP_TYPE => uint256) public membershipPrices */\n    tag_16:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_17:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GymTokenSmartContracts/GymToken.sol\":288:321  uint8 public constant decimal = 2 */\n    tag_19:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GymTokenSmartContracts/GymToken.sol\":2459:2531  function pause() public onlyRole(MANAGER_ROLE) {... */\n    tag_20:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      stop\n        /* \"GymTokenSmartContracts/GymToken.sol\":756:816  uint256 public constant REFERRAL_REWARD = 10 * (10**decimal) */\n    tag_21:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GymTokenSmartContracts/GymToken.sol\":470:530  bytes32 public constant STAFF_ROLE = keccak256(\"STAFF_ROLE\") */\n    tag_22:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GymTokenSmartContracts/GymToken.sol\":4648:4908  function getRemainingMembershipTime(address member) public view returns (uint256) {... */\n    tag_23:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_24:\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_25:\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GymTokenSmartContracts/GymToken.sol\":536:598  bytes32 public constant MEMBER_ROLE = keccak256(\"MEMBER_ROLE\") */\n    tag_26:\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_27:\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GymTokenSmartContracts/GymToken.sol\":604:668  bytes32 public constant TRAINER_ROLE = keccak256(\"TRAINER_ROLE\") */\n    tag_28:\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GymTokenSmartContracts/GymToken.sol\":2985:3446  function rewardReferral(address referrer) public whenNotPaused onlyRole(MANAGER_ROLE) {... */\n    tag_29:\n      tag_139\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n    tag_139:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GymTokenSmartContracts/GymToken.sol\":1105:1155  mapping(address => uint256) public referralBonuses */\n    tag_31:\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_32:\n      tag_150\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n    tag_150:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_33:\n      tag_153\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      tag_156\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GymTokenSmartContracts/GymToken.sol\":1002:1053  mapping(address => uint256) public membershipExpiry */\n    tag_34:\n      tag_158\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      tag_161\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GymTokenSmartContracts/GymToken.sol\":400:464  bytes32 public constant MANAGER_ROLE = keccak256(\"MANAGER_ROLE\") */\n    tag_35:\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_166\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_168\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_166:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_172\n      swap1\n      tag_171\n      jump\t// in\n    tag_172:\n      dup1\n      iszero\n      tag_173\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_174\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_173)\n    tag_174:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_175:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_175\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":2720:2940  function payStaff(address staff, uint256 amount) public whenNotPaused onlyRole(MANAGER_ROLE) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_182\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_183\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_182:\n        /* \"GymTokenSmartContracts/GymToken.sol\":439:464  keccak256(\"MANAGER_ROLE\") */\n      0x241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_185\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_186\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_185:\n        /* \"GymTokenSmartContracts/GymToken.sol\":2856:2862  amount */\n      dup2\n        /* \"GymTokenSmartContracts/GymToken.sol\":2831:2852  balanceOf(msg.sender) */\n      tag_188\n        /* \"GymTokenSmartContracts/GymToken.sol\":2841:2851  msg.sender */\n      caller\n        /* \"GymTokenSmartContracts/GymToken.sol\":2831:2840  balanceOf */\n      tag_106\n        /* \"GymTokenSmartContracts/GymToken.sol\":2831:2852  balanceOf(msg.sender) */\n      jump\t// in\n    tag_188:\n        /* \"GymTokenSmartContracts/GymToken.sol\":2831:2862  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"GymTokenSmartContracts/GymToken.sol\":2823:2887  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"GymTokenSmartContracts/GymToken.sol\":2897:2933  _transfer(msg.sender, staff, amount) */\n      tag_192\n        /* \"GymTokenSmartContracts/GymToken.sol\":2907:2917  msg.sender */\n      caller\n        /* \"GymTokenSmartContracts/GymToken.sol\":2919:2924  staff */\n      dup5\n        /* \"GymTokenSmartContracts/GymToken.sol\":2926:2932  amount */\n      dup5\n        /* \"GymTokenSmartContracts/GymToken.sol\":2897:2906  _transfer */\n      tag_193\n        /* \"GymTokenSmartContracts/GymToken.sol\":2897:2933  _transfer(msg.sender, staff, amount) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1268:1269  _ */\n      pop\n        /* \"GymTokenSmartContracts/GymToken.sol\":2720:2940  function payStaff(address staff, uint256 amount) public whenNotPaused onlyRole(MANAGER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":3510:4602  function purchaseMembership(MEMBERSHIP_TYPE membershipType) public whenNotPaused onlyMember {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_202\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_183\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_202:\n        /* \"GymTokenSmartContracts/GymToken.sol\":2315:2347  hasRole(MEMBER_ROLE, msg.sender) */\n      tag_204\n        /* \"GymTokenSmartContracts/GymToken.sol\":574:598  keccak256(\"MEMBER_ROLE\") */\n      0x829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d4636\n        /* \"GymTokenSmartContracts/GymToken.sol\":2336:2346  msg.sender */\n      caller\n        /* \"GymTokenSmartContracts/GymToken.sol\":2315:2322  hasRole */\n      tag_125\n        /* \"GymTokenSmartContracts/GymToken.sol\":2315:2347  hasRole(MEMBER_ROLE, msg.sender) */\n      jump\t// in\n    tag_204:\n        /* \"GymTokenSmartContracts/GymToken.sol\":2307:2374  require(hasRole(MEMBER_ROLE, msg.sender), \"Caller is not a member\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"GymTokenSmartContracts/GymToken.sol\":3612:3625  uint256 price */\n      0x00\n        /* \"GymTokenSmartContracts/GymToken.sol\":3628:3644  membershipPrices */\n      0x07\n        /* \"GymTokenSmartContracts/GymToken.sol\":3628:3660  membershipPrices[membershipType] */\n      0x00\n        /* \"GymTokenSmartContracts/GymToken.sol\":3645:3659  membershipType */\n      dup4\n        /* \"GymTokenSmartContracts/GymToken.sol\":3628:3660  membershipPrices[membershipType] */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_209\n      jumpi\n      tag_210\n      tag_211\n      jump\t// in\n    tag_210:\n    tag_209:\n      0x02\n      dup2\n      gt\n      iszero\n      tag_212\n      jumpi\n      tag_213\n      tag_211\n      jump\t// in\n    tag_213:\n    tag_212:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GymTokenSmartContracts/GymToken.sol\":3612:3660  uint256 price = membershipPrices[membershipType] */\n      swap1\n      pop\n        /* \"GymTokenSmartContracts/GymToken.sol\":3703:3708  price */\n      dup1\n        /* \"GymTokenSmartContracts/GymToken.sol\":3678:3699  balanceOf(msg.sender) */\n      tag_214\n        /* \"GymTokenSmartContracts/GymToken.sol\":3688:3698  msg.sender */\n      caller\n        /* \"GymTokenSmartContracts/GymToken.sol\":3678:3687  balanceOf */\n      tag_106\n        /* \"GymTokenSmartContracts/GymToken.sol\":3678:3699  balanceOf(msg.sender) */\n      jump\t// in\n    tag_214:\n        /* \"GymTokenSmartContracts/GymToken.sol\":3678:3708  balanceOf(msg.sender) >= price */\n      lt\n      iszero\n        /* \"GymTokenSmartContracts/GymToken.sol\":3670:3733  require(balanceOf(msg.sender) >= price, \"Insufficient balance\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_191\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"GymTokenSmartContracts/GymToken.sol\":3744:3768  _burn(msg.sender, price) */\n      tag_217\n        /* \"GymTokenSmartContracts/GymToken.sol\":3750:3760  msg.sender */\n      caller\n        /* \"GymTokenSmartContracts/GymToken.sol\":3762:3767  price */\n      dup3\n        /* \"GymTokenSmartContracts/GymToken.sol\":3744:3749  _burn */\n      tag_218\n        /* \"GymTokenSmartContracts/GymToken.sol\":3744:3768  _burn(msg.sender, price) */\n      jump\t// in\n    tag_217:\n        /* \"GymTokenSmartContracts/GymToken.sol\":3779:3795  uint256 duration */\n      0x00\n        /* \"GymTokenSmartContracts/GymToken.sol\":3881:3904  MEMBERSHIP_TYPE.Monthly */\n      0x00\n        /* \"GymTokenSmartContracts/GymToken.sol\":3863:3904  membershipType == MEMBERSHIP_TYPE.Monthly */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_219\n      jumpi\n      tag_220\n      tag_211\n      jump\t// in\n    tag_220:\n    tag_219:\n        /* \"GymTokenSmartContracts/GymToken.sol\":3863:3877  membershipType */\n      dup4\n        /* \"GymTokenSmartContracts/GymToken.sol\":3863:3904  membershipType == MEMBERSHIP_TYPE.Monthly */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_221\n      jumpi\n      tag_222\n      tag_211\n      jump\t// in\n    tag_222:\n    tag_221:\n      sub\n        /* \"GymTokenSmartContracts/GymToken.sol\":3859:4207  if (membershipType == MEMBERSHIP_TYPE.Monthly) {... */\n      tag_223\n      jumpi\n        /* \"GymTokenSmartContracts/GymToken.sol\":3931:3938  30 days */\n      0x278d00\n        /* \"GymTokenSmartContracts/GymToken.sol\":3920:3938  duration = 30 days */\n      swap1\n      pop\n        /* \"GymTokenSmartContracts/GymToken.sol\":3859:4207  if (membershipType == MEMBERSHIP_TYPE.Monthly) {... */\n      jump(tag_224)\n    tag_223:\n        /* \"GymTokenSmartContracts/GymToken.sol\":3977:4002  MEMBERSHIP_TYPE.Quarterly */\n      0x01\n        /* \"GymTokenSmartContracts/GymToken.sol\":3959:4002  membershipType == MEMBERSHIP_TYPE.Quarterly */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_225\n      jumpi\n      tag_226\n      tag_211\n      jump\t// in\n    tag_226:\n    tag_225:\n        /* \"GymTokenSmartContracts/GymToken.sol\":3959:3973  membershipType */\n      dup4\n        /* \"GymTokenSmartContracts/GymToken.sol\":3959:4002  membershipType == MEMBERSHIP_TYPE.Quarterly */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_227\n      jumpi\n      tag_228\n      tag_211\n      jump\t// in\n    tag_228:\n    tag_227:\n      sub\n        /* \"GymTokenSmartContracts/GymToken.sol\":3955:4207  if (membershipType == MEMBERSHIP_TYPE.Quarterly) {... */\n      tag_229\n      jumpi\n        /* \"GymTokenSmartContracts/GymToken.sol\":4029:4036  90 days */\n      0x76a700\n        /* \"GymTokenSmartContracts/GymToken.sol\":4018:4036  duration = 90 days */\n      swap1\n      pop\n        /* \"GymTokenSmartContracts/GymToken.sol\":3955:4207  if (membershipType == MEMBERSHIP_TYPE.Quarterly) {... */\n      jump(tag_230)\n    tag_229:\n        /* \"GymTokenSmartContracts/GymToken.sol\":4075:4097  MEMBERSHIP_TYPE.Annual */\n      0x02\n        /* \"GymTokenSmartContracts/GymToken.sol\":4057:4097  membershipType == MEMBERSHIP_TYPE.Annual */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_231\n      jumpi\n      tag_232\n      tag_211\n      jump\t// in\n    tag_232:\n    tag_231:\n        /* \"GymTokenSmartContracts/GymToken.sol\":4057:4071  membershipType */\n      dup4\n        /* \"GymTokenSmartContracts/GymToken.sol\":4057:4097  membershipType == MEMBERSHIP_TYPE.Annual */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_233\n      jumpi\n      tag_234\n      tag_211\n      jump\t// in\n    tag_234:\n    tag_233:\n      sub\n        /* \"GymTokenSmartContracts/GymToken.sol\":4053:4207  if (membershipType == MEMBERSHIP_TYPE.Annual) {... */\n      tag_235\n      jumpi\n        /* \"GymTokenSmartContracts/GymToken.sol\":4124:4132  365 days */\n      0x01e13380\n        /* \"GymTokenSmartContracts/GymToken.sol\":4113:4132  duration = 365 days */\n      swap1\n      pop\n        /* \"GymTokenSmartContracts/GymToken.sol\":4053:4207  if (membershipType == MEMBERSHIP_TYPE.Annual) {... */\n      jump(tag_236)\n    tag_235:\n        /* \"GymTokenSmartContracts/GymToken.sol\":4163:4196  revert(\"Invalid membership type\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"GymTokenSmartContracts/GymToken.sol\":4053:4207  if (membershipType == MEMBERSHIP_TYPE.Annual) {... */\n    tag_236:\n        /* \"GymTokenSmartContracts/GymToken.sol\":3955:4207  if (membershipType == MEMBERSHIP_TYPE.Quarterly) {... */\n    tag_230:\n        /* \"GymTokenSmartContracts/GymToken.sol\":3859:4207  if (membershipType == MEMBERSHIP_TYPE.Monthly) {... */\n    tag_224:\n        /* \"GymTokenSmartContracts/GymToken.sol\":4340:4356  membershipExpiry */\n      0x08\n        /* \"GymTokenSmartContracts/GymToken.sol\":4340:4368  membershipExpiry[msg.sender] */\n      0x00\n        /* \"GymTokenSmartContracts/GymToken.sol\":4357:4367  msg.sender */\n      caller\n        /* \"GymTokenSmartContracts/GymToken.sol\":4340:4368  membershipExpiry[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GymTokenSmartContracts/GymToken.sol\":4322:4337  block.timestamp */\n      timestamp\n        /* \"GymTokenSmartContracts/GymToken.sol\":4322:4368  block.timestamp < membershipExpiry[msg.sender] */\n      lt\n        /* \"GymTokenSmartContracts/GymToken.sol\":4318:4523  if (block.timestamp < membershipExpiry[msg.sender]) {... */\n      iszero\n      tag_239\n      jumpi\n        /* \"GymTokenSmartContracts/GymToken.sol\":4416:4424  duration */\n      dup1\n        /* \"GymTokenSmartContracts/GymToken.sol\":4384:4400  membershipExpiry */\n      0x08\n        /* \"GymTokenSmartContracts/GymToken.sol\":4384:4412  membershipExpiry[msg.sender] */\n      0x00\n        /* \"GymTokenSmartContracts/GymToken.sol\":4401:4411  msg.sender */\n      caller\n        /* \"GymTokenSmartContracts/GymToken.sol\":4384:4412  membershipExpiry[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"GymTokenSmartContracts/GymToken.sol\":4384:4424  membershipExpiry[msg.sender] += duration */\n      dup3\n      dup3\n      sload\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GymTokenSmartContracts/GymToken.sol\":4318:4523  if (block.timestamp < membershipExpiry[msg.sender]) {... */\n      jump(tag_242)\n    tag_239:\n        /* \"GymTokenSmartContracts/GymToken.sol\":4504:4512  duration */\n      dup1\n        /* \"GymTokenSmartContracts/GymToken.sol\":4486:4501  block.timestamp */\n      timestamp\n        /* \"GymTokenSmartContracts/GymToken.sol\":4486:4512  block.timestamp + duration */\n      tag_243\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_243:\n        /* \"GymTokenSmartContracts/GymToken.sol\":4455:4471  membershipExpiry */\n      0x08\n        /* \"GymTokenSmartContracts/GymToken.sol\":4455:4483  membershipExpiry[msg.sender] */\n      0x00\n        /* \"GymTokenSmartContracts/GymToken.sol\":4472:4482  msg.sender */\n      caller\n        /* \"GymTokenSmartContracts/GymToken.sol\":4455:4483  membershipExpiry[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GymTokenSmartContracts/GymToken.sol\":4455:4512  membershipExpiry[msg.sender] = block.timestamp + duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GymTokenSmartContracts/GymToken.sol\":4318:4523  if (block.timestamp < membershipExpiry[msg.sender]) {... */\n    tag_242:\n        /* \"GymTokenSmartContracts/GymToken.sol\":4558:4568  msg.sender */\n      caller\n        /* \"GymTokenSmartContracts/GymToken.sol\":4538:4595  MembershipPurchased(msg.sender, membershipType, duration) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2c5b6420b508a46b55a5cb55c7340a67492866d4f51461ee443958079fe8357\n        /* \"GymTokenSmartContracts/GymToken.sol\":4570:4584  membershipType */\n      dup5\n        /* \"GymTokenSmartContracts/GymToken.sol\":4586:4594  duration */\n      dup4\n        /* \"GymTokenSmartContracts/GymToken.sol\":4538:4595  MembershipPurchased(msg.sender, membershipType, duration) */\n      mload(0x40)\n      tag_244\n      swap3\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"GymTokenSmartContracts/GymToken.sol\":3602:4602  {... */\n      pop\n      pop\n        /* \"GymTokenSmartContracts/GymToken.sol\":3510:4602  function purchaseMembership(MEMBERSHIP_TYPE membershipType) public whenNotPaused onlyMember {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_246\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_73\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_248\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_186\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_251\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_250:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":327:393  uint256 public constant INITIAL_SUPPLY = 1000000 * (10 ** decimal) */\n    tag_85:\n        /* \"GymTokenSmartContracts/GymToken.sol\":320:321  2 */\n      0x02\n        /* \"GymTokenSmartContracts/GymToken.sol\":379:381  10 */\n      0x0a\n        /* \"GymTokenSmartContracts/GymToken.sol\":379:392  10 ** decimal */\n      tag_252\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"GymTokenSmartContracts/GymToken.sol\":368:375  1000000 */\n      0x0f4240\n        /* \"GymTokenSmartContracts/GymToken.sol\":368:393  1000000 * (10 ** decimal) */\n      tag_254\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"GymTokenSmartContracts/GymToken.sol\":327:393  uint256 public constant INITIAL_SUPPLY = 1000000 * (10 ** decimal) */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_258\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_178\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_260\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_261\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_260:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":2588:2664  function unpause() public onlyRole(MANAGER_ROLE) {... */\n    tag_95:\n        /* \"GymTokenSmartContracts/GymToken.sol\":439:464  keccak256(\"MANAGER_ROLE\") */\n      0x241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_263\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_186\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_263:\n        /* \"GymTokenSmartContracts/GymToken.sol\":2647:2657  _unpause() */\n      tag_265\n        /* \"GymTokenSmartContracts/GymToken.sol\":2647:2655  _unpause */\n      tag_266\n        /* \"GymTokenSmartContracts/GymToken.sol\":2647:2657  _unpause() */\n      jump\t// in\n    tag_265:\n        /* \"GymTokenSmartContracts/GymToken.sol\":2588:2664  function unpause() public onlyRole(MANAGER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":908:967  mapping(MEMBERSHIP_TYPE => uint256) public membershipPrices */\n    tag_98:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":288:321  uint8 public constant decimal = 2 */\n    tag_109:\n        /* \"GymTokenSmartContracts/GymToken.sol\":320:321  2 */\n      0x02\n        /* \"GymTokenSmartContracts/GymToken.sol\":288:321  uint8 public constant decimal = 2 */\n      dup2\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":2459:2531  function pause() public onlyRole(MANAGER_ROLE) {... */\n    tag_112:\n        /* \"GymTokenSmartContracts/GymToken.sol\":439:464  keccak256(\"MANAGER_ROLE\") */\n      0x241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_270\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_186\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_270:\n        /* \"GymTokenSmartContracts/GymToken.sol\":2516:2524  _pause() */\n      tag_272\n        /* \"GymTokenSmartContracts/GymToken.sol\":2516:2522  _pause */\n      tag_273\n        /* \"GymTokenSmartContracts/GymToken.sol\":2516:2524  _pause() */\n      jump\t// in\n    tag_272:\n        /* \"GymTokenSmartContracts/GymToken.sol\":2459:2531  function pause() public onlyRole(MANAGER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":756:816  uint256 public constant REFERRAL_REWARD = 10 * (10**decimal) */\n    tag_114:\n        /* \"GymTokenSmartContracts/GymToken.sol\":320:321  2 */\n      0x02\n        /* \"GymTokenSmartContracts/GymToken.sol\":804:806  10 */\n      0x0a\n        /* \"GymTokenSmartContracts/GymToken.sol\":804:815  10**decimal */\n      tag_274\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_274:\n        /* \"GymTokenSmartContracts/GymToken.sol\":798:800  10 */\n      0x0a\n        /* \"GymTokenSmartContracts/GymToken.sol\":798:816  10 * (10**decimal) */\n      tag_275\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_275:\n        /* \"GymTokenSmartContracts/GymToken.sol\":756:816  uint256 public constant REFERRAL_REWARD = 10 * (10**decimal) */\n      dup2\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":470:530  bytes32 public constant STAFF_ROLE = keccak256(\"STAFF_ROLE\") */\n    tag_117:\n        /* \"GymTokenSmartContracts/GymToken.sol\":507:530  keccak256(\"STAFF_ROLE\") */\n      0x5620a1113a72b02a617976b3f6b15600dd7a8b3a916a9ca01e23119d989a0543\n        /* \"GymTokenSmartContracts/GymToken.sol\":470:530  bytes32 public constant STAFF_ROLE = keccak256(\"STAFF_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":4648:4908  function getRemainingMembershipTime(address member) public view returns (uint256) {... */\n    tag_121:\n        /* \"GymTokenSmartContracts/GymToken.sol\":4721:4728  uint256 */\n      0x00\n        /* \"GymTokenSmartContracts/GymToken.sol\":4763:4779  membershipExpiry */\n      0x08\n        /* \"GymTokenSmartContracts/GymToken.sol\":4763:4787  membershipExpiry[member] */\n      0x00\n        /* \"GymTokenSmartContracts/GymToken.sol\":4780:4786  member */\n      dup4\n        /* \"GymTokenSmartContracts/GymToken.sol\":4763:4787  membershipExpiry[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GymTokenSmartContracts/GymToken.sol\":4744:4759  block.timestamp */\n      timestamp\n        /* \"GymTokenSmartContracts/GymToken.sol\":4744:4787  block.timestamp >= membershipExpiry[member] */\n      lt\n        /* \"GymTokenSmartContracts/GymToken.sol\":4740:4902  if (block.timestamp >= membershipExpiry[member]) {... */\n      tag_277\n      jumpi\n        /* \"GymTokenSmartContracts/GymToken.sol\":4810:4811  0 */\n      0x00\n        /* \"GymTokenSmartContracts/GymToken.sol\":4803:4811  return 0 */\n      swap1\n      pop\n      jump(tag_276)\n        /* \"GymTokenSmartContracts/GymToken.sol\":4740:4902  if (block.timestamp >= membershipExpiry[member]) {... */\n    tag_277:\n        /* \"GymTokenSmartContracts/GymToken.sol\":4876:4891  block.timestamp */\n      timestamp\n        /* \"GymTokenSmartContracts/GymToken.sol\":4849:4865  membershipExpiry */\n      0x08\n        /* \"GymTokenSmartContracts/GymToken.sol\":4849:4873  membershipExpiry[member] */\n      0x00\n        /* \"GymTokenSmartContracts/GymToken.sol\":4866:4872  member */\n      dup5\n        /* \"GymTokenSmartContracts/GymToken.sol\":4849:4873  membershipExpiry[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GymTokenSmartContracts/GymToken.sol\":4849:4891  membershipExpiry[member] - block.timestamp */\n      tag_279\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"GymTokenSmartContracts/GymToken.sol\":4842:4891  return membershipExpiry[member] - block.timestamp */\n      swap1\n      pop\n        /* \"GymTokenSmartContracts/GymToken.sol\":4648:4908  function getRemainingMembershipTime(address member) public view returns (uint256) {... */\n    tag_276:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_283\n      swap1\n      tag_171\n      jump\t// in\n    tag_283:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_284\n      swap1\n      tag_171\n      jump\t// in\n    tag_284:\n      dup1\n      iszero\n      tag_285\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_286\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_285)\n    tag_286:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_287:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_287\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_285:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":536:598  bytes32 public constant MEMBER_ROLE = keccak256(\"MEMBER_ROLE\") */\n    tag_131:\n        /* \"GymTokenSmartContracts/GymToken.sol\":574:598  keccak256(\"MEMBER_ROLE\") */\n      0x829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d4636\n        /* \"GymTokenSmartContracts/GymToken.sol\":536:598  bytes32 public constant MEMBER_ROLE = keccak256(\"MEMBER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":604:668  bytes32 public constant TRAINER_ROLE = keccak256(\"TRAINER_ROLE\") */\n    tag_137:\n        /* \"GymTokenSmartContracts/GymToken.sol\":643:668  keccak256(\"TRAINER_ROLE\") */\n      0x123c69cc12368838cca6d46b7505bec842d9e85a26aff07e23aa57ad59dac6ba\n        /* \"GymTokenSmartContracts/GymToken.sol\":604:668  bytes32 public constant TRAINER_ROLE = keccak256(\"TRAINER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":2985:3446  function rewardReferral(address referrer) public whenNotPaused onlyRole(MANAGER_ROLE) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_289\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_183\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_289:\n        /* \"GymTokenSmartContracts/GymToken.sol\":439:464  keccak256(\"MANAGER_ROLE\") */\n      0x241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_291\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_186\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_291:\n        /* \"GymTokenSmartContracts/GymToken.sol\":3168:3184  membershipExpiry */\n      0x08\n        /* \"GymTokenSmartContracts/GymToken.sol\":3168:3194  membershipExpiry[referrer] */\n      0x00\n        /* \"GymTokenSmartContracts/GymToken.sol\":3185:3193  referrer */\n      dup4\n        /* \"GymTokenSmartContracts/GymToken.sol\":3168:3194  membershipExpiry[referrer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GymTokenSmartContracts/GymToken.sol\":3150:3165  block.timestamp */\n      timestamp\n        /* \"GymTokenSmartContracts/GymToken.sol\":3150:3194  block.timestamp < membershipExpiry[referrer] */\n      lt\n        /* \"GymTokenSmartContracts/GymToken.sol\":3142:3226  require(block.timestamp < membershipExpiry[referrer], \"Referrer membership expired\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_293:\n        /* \"GymTokenSmartContracts/GymToken.sol\":320:321  2 */\n      0x02\n        /* \"GymTokenSmartContracts/GymToken.sol\":804:806  10 */\n      0x0a\n        /* \"GymTokenSmartContracts/GymToken.sol\":804:815  10**decimal */\n      tag_296\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_296:\n        /* \"GymTokenSmartContracts/GymToken.sol\":798:800  10 */\n      0x0a\n        /* \"GymTokenSmartContracts/GymToken.sol\":798:816  10 * (10**decimal) */\n      tag_297\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_297:\n        /* \"GymTokenSmartContracts/GymToken.sol\":3294:3309  referralBonuses */\n      0x09\n        /* \"GymTokenSmartContracts/GymToken.sol\":3294:3319  referralBonuses[referrer] */\n      0x00\n        /* \"GymTokenSmartContracts/GymToken.sol\":3310:3318  referrer */\n      dup5\n        /* \"GymTokenSmartContracts/GymToken.sol\":3294:3319  referralBonuses[referrer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"GymTokenSmartContracts/GymToken.sol\":3294:3338  referralBonuses[referrer] += REFERRAL_REWARD */\n      dup3\n      dup3\n      sload\n      tag_298\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_298:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GymTokenSmartContracts/GymToken.sol\":3348:3380  _mint(referrer, REFERRAL_REWARD) */\n      tag_299\n        /* \"GymTokenSmartContracts/GymToken.sol\":3354:3362  referrer */\n      dup3\n        /* \"GymTokenSmartContracts/GymToken.sol\":320:321  2 */\n      0x02\n        /* \"GymTokenSmartContracts/GymToken.sol\":804:806  10 */\n      0x0a\n        /* \"GymTokenSmartContracts/GymToken.sol\":804:815  10**decimal */\n      tag_300\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_300:\n        /* \"GymTokenSmartContracts/GymToken.sol\":798:800  10 */\n      0x0a\n        /* \"GymTokenSmartContracts/GymToken.sol\":798:816  10 * (10**decimal) */\n      tag_301\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_301:\n        /* \"GymTokenSmartContracts/GymToken.sol\":3348:3353  _mint */\n      tag_302\n        /* \"GymTokenSmartContracts/GymToken.sol\":3348:3380  _mint(referrer, REFERRAL_REWARD) */\n      jump\t// in\n    tag_299:\n        /* \"GymTokenSmartContracts/GymToken.sol\":3413:3421  referrer */\n      dup2\n        /* \"GymTokenSmartContracts/GymToken.sol\":3396:3439  ReferralRewarded(referrer, REFERRAL_REWARD) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe02a129f98418d04669038a9874f706689ba7726c0c0e82c67319ec8ca9001ea\n        /* \"GymTokenSmartContracts/GymToken.sol\":320:321  2 */\n      0x02\n        /* \"GymTokenSmartContracts/GymToken.sol\":804:806  10 */\n      0x0a\n        /* \"GymTokenSmartContracts/GymToken.sol\":804:815  10**decimal */\n      tag_303\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_303:\n        /* \"GymTokenSmartContracts/GymToken.sol\":798:800  10 */\n      0x0a\n        /* \"GymTokenSmartContracts/GymToken.sol\":798:816  10 * (10**decimal) */\n      tag_304\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_304:\n        /* \"GymTokenSmartContracts/GymToken.sol\":3396:3439  ReferralRewarded(referrer, REFERRAL_REWARD) */\n      mload(0x40)\n      tag_305\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1268:1269  _ */\n      pop\n        /* \"GymTokenSmartContracts/GymToken.sol\":2985:3446  function rewardReferral(address referrer) public whenNotPaused onlyRole(MANAGER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_307\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_308\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":1105:1155  mapping(address => uint256) public referralBonuses */\n    tag_148:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_309\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_73\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_311\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_186\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_313\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_261\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_313:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":1002:1053  mapping(address => uint256) public membershipExpiry */\n    tag_160:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"GymTokenSmartContracts/GymToken.sol\":400:464  bytes32 public constant MANAGER_ROLE = keccak256(\"MANAGER_ROLE\") */\n    tag_163:\n        /* \"GymTokenSmartContracts/GymToken.sol\":439:464  keccak256(\"MANAGER_ROLE\") */\n      0x241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08\n        /* \"GymTokenSmartContracts/GymToken.sol\":400:464  bytes32 public constant MANAGER_ROLE = keccak256(\"MANAGER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_318\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_319\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_321\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_101\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap1\n      tag_324\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_326\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_327\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_178\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_328\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap2\n      swap1\n      tag_332\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap2\n      swap1\n      tag_332\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_336\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_338\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_341\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_342\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_343\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_319\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_346\n      swap2\n      swap1\n      tag_332\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_347\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_336\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_349\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_125\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_351\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_178\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_348)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_348:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_354\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_125\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_356\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_178\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_353)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_353:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_359\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_360\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_362\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_178\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_362:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_363\n      swap2\n      swap1\n      tag_332\n      jump\t// in\n    tag_363:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_365\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_183\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_367\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_178\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_367:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_368\n      swap2\n      swap1\n      tag_332\n      jump\t// in\n    tag_368:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_371\n      swap2\n      swap1\n      tag_332\n      jump\t// in\n    tag_371:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_372\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_336\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_374\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_375\n      swap2\n      swap1\n      tag_332\n      jump\t// in\n    tag_375:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_374:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_376\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_377\n      swap2\n      swap1\n      tag_332\n      jump\t// in\n    tag_377:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_376:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_378\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_379\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_379:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_378:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_381\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_125\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_381:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_382\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_383\n      swap3\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_383:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_382:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_386\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_387\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_387:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_388)\n    tag_386:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_389\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_390\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_342\n      jump\t// in\n    tag_390:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_389:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_388:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_391\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_392)\n    tag_391:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_392:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_393\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_393:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_395\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_101\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_395:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_396\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_397\n      swap1\n      tag_398\n      jump\t// in\n    tag_397:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_396:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_400:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_402:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_403:\n        /* \"#utility.yul\":561:584   */\n      tag_456\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_402\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_457:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_404:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_459\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_403\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_45:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_462\n      tag_400\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":833:952   */\n    tag_461:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_463\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_404\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_405:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_406:\n        /* \"#utility.yul\":1268:1289   */\n      tag_466\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_405\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_48:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_468\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_406\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_407:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_408:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_409:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_410:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_411:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_474\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_407\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":2222:2293   */\n      tag_475\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_408\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_476\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_409\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":2392:2421   */\n      tag_477\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_410\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_52:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_479\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_411\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_412:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_413:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_482\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_412\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_414:\n        /* \"#utility.yul\":3060:3084   */\n      tag_484\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_413\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      0x00\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_485:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_415:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_487\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_414\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_416:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_417:\n        /* \"#utility.yul\":3416:3440   */\n      tag_490\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_416\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      0x00\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_491:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_418:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_493\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_417\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_55:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      0x00\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_496\n      tag_400\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":3709:3828   */\n    tag_495:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_497\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_415\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_498\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_418\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4214   */\n    tag_419:\n        /* \"#utility.yul\":4183:4207   */\n      tag_500\n        /* \"#utility.yul\":4201:4206   */\n      dup2\n        /* \"#utility.yul\":4183:4207   */\n      tag_416\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":4178:4181   */\n      dup3\n        /* \"#utility.yul\":4171:4208   */\n      mstore\n        /* \"#utility.yul\":4096:4214   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4220:4442   */\n    tag_64:\n        /* \"#utility.yul\":4313:4317   */\n      0x00\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4340:4349   */\n      dup3\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"#utility.yul\":4328:4354   */\n      swap1\n      pop\n        /* \"#utility.yul\":4364:4435   */\n      tag_502\n        /* \"#utility.yul\":4432:4433   */\n      0x00\n        /* \"#utility.yul\":4421:4430   */\n      dup4\n        /* \"#utility.yul\":4417:4434   */\n      add\n        /* \"#utility.yul\":4408:4414   */\n      dup5\n        /* \"#utility.yul\":4364:4435   */\n      tag_419\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":4220:4442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:5067   */\n    tag_67:\n        /* \"#utility.yul\":4525:4531   */\n      0x00\n        /* \"#utility.yul\":4533:4539   */\n      0x00\n        /* \"#utility.yul\":4541:4547   */\n      0x00\n        /* \"#utility.yul\":4590:4592   */\n      0x60\n        /* \"#utility.yul\":4578:4587   */\n      dup5\n        /* \"#utility.yul\":4569:4576   */\n      dup7\n        /* \"#utility.yul\":4565:4588   */\n      sub\n        /* \"#utility.yul\":4561:4593   */\n      slt\n        /* \"#utility.yul\":4558:4677   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":4596:4675   */\n      tag_505\n      tag_400\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":4558:4677   */\n    tag_504:\n        /* \"#utility.yul\":4716:4717   */\n      0x00\n        /* \"#utility.yul\":4741:4794   */\n      tag_506\n        /* \"#utility.yul\":4786:4793   */\n      dup7\n        /* \"#utility.yul\":4777:4783   */\n      dup3\n        /* \"#utility.yul\":4766:4775   */\n      dup8\n        /* \"#utility.yul\":4762:4784   */\n      add\n        /* \"#utility.yul\":4741:4794   */\n      tag_415\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":4731:4794   */\n      swap4\n      pop\n        /* \"#utility.yul\":4687:4804   */\n      pop\n        /* \"#utility.yul\":4843:4845   */\n      0x20\n        /* \"#utility.yul\":4869:4922   */\n      tag_507\n        /* \"#utility.yul\":4914:4921   */\n      dup7\n        /* \"#utility.yul\":4905:4911   */\n      dup3\n        /* \"#utility.yul\":4894:4903   */\n      dup8\n        /* \"#utility.yul\":4890:4912   */\n      add\n        /* \"#utility.yul\":4869:4922   */\n      tag_415\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":4859:4922   */\n      swap3\n      pop\n        /* \"#utility.yul\":4814:4932   */\n      pop\n        /* \"#utility.yul\":4971:4973   */\n      0x40\n        /* \"#utility.yul\":4997:5050   */\n      tag_508\n        /* \"#utility.yul\":5042:5049   */\n      dup7\n        /* \"#utility.yul\":5033:5039   */\n      dup3\n        /* \"#utility.yul\":5022:5031   */\n      dup8\n        /* \"#utility.yul\":5018:5040   */\n      add\n        /* \"#utility.yul\":4997:5050   */\n      tag_418\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":4987:5050   */\n      swap2\n      pop\n        /* \"#utility.yul\":4942:5060   */\n      pop\n        /* \"#utility.yul\":4448:5067   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5073:5150   */\n    tag_420:\n        /* \"#utility.yul\":5110:5117   */\n      0x00\n        /* \"#utility.yul\":5139:5144   */\n      dup2\n        /* \"#utility.yul\":5128:5144   */\n      swap1\n      pop\n        /* \"#utility.yul\":5073:5150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5156:5278   */\n    tag_421:\n        /* \"#utility.yul\":5229:5253   */\n      tag_511\n        /* \"#utility.yul\":5247:5252   */\n      dup2\n        /* \"#utility.yul\":5229:5253   */\n      tag_420\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":5222:5227   */\n      dup2\n        /* \"#utility.yul\":5219:5254   */\n      eq\n        /* \"#utility.yul\":5209:5272   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":5268:5269   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      0x00\n        /* \"#utility.yul\":5258:5270   */\n      revert\n        /* \"#utility.yul\":5209:5272   */\n    tag_512:\n        /* \"#utility.yul\":5156:5278   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5284:5423   */\n    tag_422:\n        /* \"#utility.yul\":5330:5335   */\n      0x00\n        /* \"#utility.yul\":5368:5374   */\n      dup2\n        /* \"#utility.yul\":5355:5375   */\n      calldataload\n        /* \"#utility.yul\":5346:5375   */\n      swap1\n      pop\n        /* \"#utility.yul\":5384:5417   */\n      tag_514\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5384:5417   */\n      tag_421\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":5284:5423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5429:5758   */\n    tag_72:\n        /* \"#utility.yul\":5488:5494   */\n      0x00\n        /* \"#utility.yul\":5537:5539   */\n      0x20\n        /* \"#utility.yul\":5525:5534   */\n      dup3\n        /* \"#utility.yul\":5516:5523   */\n      dup5\n        /* \"#utility.yul\":5512:5535   */\n      sub\n        /* \"#utility.yul\":5508:5540   */\n      slt\n        /* \"#utility.yul\":5505:5624   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":5543:5622   */\n      tag_517\n      tag_400\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":5505:5624   */\n    tag_516:\n        /* \"#utility.yul\":5663:5664   */\n      0x00\n        /* \"#utility.yul\":5688:5741   */\n      tag_518\n        /* \"#utility.yul\":5733:5740   */\n      dup5\n        /* \"#utility.yul\":5724:5730   */\n      dup3\n        /* \"#utility.yul\":5713:5722   */\n      dup6\n        /* \"#utility.yul\":5709:5731   */\n      add\n        /* \"#utility.yul\":5688:5741   */\n      tag_422\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":5678:5741   */\n      swap2\n      pop\n        /* \"#utility.yul\":5634:5751   */\n      pop\n        /* \"#utility.yul\":5429:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:5882   */\n    tag_423:\n        /* \"#utility.yul\":5851:5875   */\n      tag_520\n        /* \"#utility.yul\":5869:5874   */\n      dup2\n        /* \"#utility.yul\":5851:5875   */\n      tag_420\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":5846:5849   */\n      dup3\n        /* \"#utility.yul\":5839:5876   */\n      mstore\n        /* \"#utility.yul\":5764:5882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6110   */\n    tag_75:\n        /* \"#utility.yul\":5981:5985   */\n      0x00\n        /* \"#utility.yul\":6019:6021   */\n      0x20\n        /* \"#utility.yul\":6008:6017   */\n      dup3\n        /* \"#utility.yul\":6004:6022   */\n      add\n        /* \"#utility.yul\":5996:6022   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6103   */\n      tag_522\n        /* \"#utility.yul\":6100:6101   */\n      0x00\n        /* \"#utility.yul\":6089:6098   */\n      dup4\n        /* \"#utility.yul\":6085:6102   */\n      add\n        /* \"#utility.yul\":6076:6082   */\n      dup5\n        /* \"#utility.yul\":6032:6103   */\n      tag_423\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":5888:6110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6116:6235   */\n    tag_424:\n        /* \"#utility.yul\":6209:6210   */\n      0x03\n        /* \"#utility.yul\":6202:6207   */\n      dup2\n        /* \"#utility.yul\":6199:6211   */\n      lt\n        /* \"#utility.yul\":6189:6229   */\n      tag_524\n      jumpi\n        /* \"#utility.yul\":6225:6226   */\n      0x00\n        /* \"#utility.yul\":6222:6223   */\n      0x00\n        /* \"#utility.yul\":6215:6227   */\n      revert\n        /* \"#utility.yul\":6189:6229   */\n    tag_524:\n        /* \"#utility.yul\":6116:6235   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6241:6420   */\n    tag_425:\n        /* \"#utility.yul\":6307:6312   */\n      0x00\n        /* \"#utility.yul\":6345:6351   */\n      dup2\n        /* \"#utility.yul\":6332:6352   */\n      calldataload\n        /* \"#utility.yul\":6323:6352   */\n      swap1\n      pop\n        /* \"#utility.yul\":6361:6414   */\n      tag_526\n        /* \"#utility.yul\":6408:6413   */\n      dup2\n        /* \"#utility.yul\":6361:6414   */\n      tag_424\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":6241:6420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6426:6795   */\n    tag_78:\n        /* \"#utility.yul\":6505:6511   */\n      0x00\n        /* \"#utility.yul\":6554:6556   */\n      0x20\n        /* \"#utility.yul\":6542:6551   */\n      dup3\n        /* \"#utility.yul\":6533:6540   */\n      dup5\n        /* \"#utility.yul\":6529:6552   */\n      sub\n        /* \"#utility.yul\":6525:6557   */\n      slt\n        /* \"#utility.yul\":6522:6641   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":6560:6639   */\n      tag_529\n      tag_400\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":6522:6641   */\n    tag_528:\n        /* \"#utility.yul\":6680:6681   */\n      0x00\n        /* \"#utility.yul\":6705:6778   */\n      tag_530\n        /* \"#utility.yul\":6770:6777   */\n      dup5\n        /* \"#utility.yul\":6761:6767   */\n      dup3\n        /* \"#utility.yul\":6750:6759   */\n      dup6\n        /* \"#utility.yul\":6746:6768   */\n      add\n        /* \"#utility.yul\":6705:6778   */\n      tag_425\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":6695:6778   */\n      swap2\n      pop\n        /* \"#utility.yul\":6651:6788   */\n      pop\n        /* \"#utility.yul\":6426:6795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6801:7275   */\n    tag_82:\n        /* \"#utility.yul\":6869:6875   */\n      0x00\n        /* \"#utility.yul\":6877:6883   */\n      0x00\n        /* \"#utility.yul\":6926:6928   */\n      0x40\n        /* \"#utility.yul\":6914:6923   */\n      dup4\n        /* \"#utility.yul\":6905:6912   */\n      dup6\n        /* \"#utility.yul\":6901:6924   */\n      sub\n        /* \"#utility.yul\":6897:6929   */\n      slt\n        /* \"#utility.yul\":6894:7013   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":6932:7011   */\n      tag_533\n      tag_400\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":6894:7013   */\n    tag_532:\n        /* \"#utility.yul\":7052:7053   */\n      0x00\n        /* \"#utility.yul\":7077:7130   */\n      tag_534\n        /* \"#utility.yul\":7122:7129   */\n      dup6\n        /* \"#utility.yul\":7113:7119   */\n      dup3\n        /* \"#utility.yul\":7102:7111   */\n      dup7\n        /* \"#utility.yul\":7098:7120   */\n      add\n        /* \"#utility.yul\":7077:7130   */\n      tag_422\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":7067:7130   */\n      swap3\n      pop\n        /* \"#utility.yul\":7023:7140   */\n      pop\n        /* \"#utility.yul\":7179:7181   */\n      0x20\n        /* \"#utility.yul\":7205:7258   */\n      tag_535\n        /* \"#utility.yul\":7250:7257   */\n      dup6\n        /* \"#utility.yul\":7241:7247   */\n      dup3\n        /* \"#utility.yul\":7230:7239   */\n      dup7\n        /* \"#utility.yul\":7226:7248   */\n      add\n        /* \"#utility.yul\":7205:7258   */\n      tag_415\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":7195:7258   */\n      swap2\n      pop\n        /* \"#utility.yul\":7150:7268   */\n      pop\n        /* \"#utility.yul\":6801:7275   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7281:7367   */\n    tag_426:\n        /* \"#utility.yul\":7316:7323   */\n      0x00\n        /* \"#utility.yul\":7356:7360   */\n      0xff\n        /* \"#utility.yul\":7349:7354   */\n      dup3\n        /* \"#utility.yul\":7345:7361   */\n      and\n        /* \"#utility.yul\":7334:7361   */\n      swap1\n      pop\n        /* \"#utility.yul\":7281:7367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7373:7485   */\n    tag_427:\n        /* \"#utility.yul\":7456:7478   */\n      tag_538\n        /* \"#utility.yul\":7472:7477   */\n      dup2\n        /* \"#utility.yul\":7456:7478   */\n      tag_426\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":7451:7454   */\n      dup3\n        /* \"#utility.yul\":7444:7479   */\n      mstore\n        /* \"#utility.yul\":7373:7485   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7491:7705   */\n    tag_90:\n        /* \"#utility.yul\":7580:7584   */\n      0x00\n        /* \"#utility.yul\":7618:7620   */\n      0x20\n        /* \"#utility.yul\":7607:7616   */\n      dup3\n        /* \"#utility.yul\":7603:7621   */\n      add\n        /* \"#utility.yul\":7595:7621   */\n      swap1\n      pop\n        /* \"#utility.yul\":7631:7698   */\n      tag_540\n        /* \"#utility.yul\":7695:7696   */\n      0x00\n        /* \"#utility.yul\":7684:7693   */\n      dup4\n        /* \"#utility.yul\":7680:7697   */\n      add\n        /* \"#utility.yul\":7671:7677   */\n      dup5\n        /* \"#utility.yul\":7631:7698   */\n      tag_427\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":7491:7705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7711:8040   */\n    tag_105:\n        /* \"#utility.yul\":7770:7776   */\n      0x00\n        /* \"#utility.yul\":7819:7821   */\n      0x20\n        /* \"#utility.yul\":7807:7816   */\n      dup3\n        /* \"#utility.yul\":7798:7805   */\n      dup5\n        /* \"#utility.yul\":7794:7817   */\n      sub\n        /* \"#utility.yul\":7790:7822   */\n      slt\n        /* \"#utility.yul\":7787:7906   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":7825:7904   */\n      tag_543\n      tag_400\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":7787:7906   */\n    tag_542:\n        /* \"#utility.yul\":7945:7946   */\n      0x00\n        /* \"#utility.yul\":7970:8023   */\n      tag_544\n        /* \"#utility.yul\":8015:8022   */\n      dup5\n        /* \"#utility.yul\":8006:8012   */\n      dup3\n        /* \"#utility.yul\":7995:8004   */\n      dup6\n        /* \"#utility.yul\":7991:8013   */\n      add\n        /* \"#utility.yul\":7970:8023   */\n      tag_415\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":7960:8023   */\n      swap2\n      pop\n        /* \"#utility.yul\":7916:8033   */\n      pop\n        /* \"#utility.yul\":7711:8040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8046:8520   */\n    tag_155:\n        /* \"#utility.yul\":8114:8120   */\n      0x00\n        /* \"#utility.yul\":8122:8128   */\n      0x00\n        /* \"#utility.yul\":8171:8173   */\n      0x40\n        /* \"#utility.yul\":8159:8168   */\n      dup4\n        /* \"#utility.yul\":8150:8157   */\n      dup6\n        /* \"#utility.yul\":8146:8169   */\n      sub\n        /* \"#utility.yul\":8142:8174   */\n      slt\n        /* \"#utility.yul\":8139:8258   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":8177:8256   */\n      tag_547\n      tag_400\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":8139:8258   */\n    tag_546:\n        /* \"#utility.yul\":8297:8298   */\n      0x00\n        /* \"#utility.yul\":8322:8375   */\n      tag_548\n        /* \"#utility.yul\":8367:8374   */\n      dup6\n        /* \"#utility.yul\":8358:8364   */\n      dup3\n        /* \"#utility.yul\":8347:8356   */\n      dup7\n        /* \"#utility.yul\":8343:8365   */\n      add\n        /* \"#utility.yul\":8322:8375   */\n      tag_415\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":8312:8375   */\n      swap3\n      pop\n        /* \"#utility.yul\":8268:8385   */\n      pop\n        /* \"#utility.yul\":8424:8426   */\n      0x20\n        /* \"#utility.yul\":8450:8503   */\n      tag_549\n        /* \"#utility.yul\":8495:8502   */\n      dup6\n        /* \"#utility.yul\":8486:8492   */\n      dup3\n        /* \"#utility.yul\":8475:8484   */\n      dup7\n        /* \"#utility.yul\":8471:8493   */\n      add\n        /* \"#utility.yul\":8450:8503   */\n      tag_415\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":8440:8503   */\n      swap2\n      pop\n        /* \"#utility.yul\":8395:8513   */\n      pop\n        /* \"#utility.yul\":8046:8520   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8526:8706   */\n    tag_428:\n        /* \"#utility.yul\":8574:8651   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8571:8572   */\n      0x00\n        /* \"#utility.yul\":8564:8652   */\n      mstore\n        /* \"#utility.yul\":8671:8675   */\n      0x22\n        /* \"#utility.yul\":8668:8669   */\n      0x04\n        /* \"#utility.yul\":8661:8676   */\n      mstore\n        /* \"#utility.yul\":8695:8699   */\n      0x24\n        /* \"#utility.yul\":8692:8693   */\n      0x00\n        /* \"#utility.yul\":8685:8700   */\n      revert\n        /* \"#utility.yul\":8712:9032   */\n    tag_171:\n        /* \"#utility.yul\":8756:8762   */\n      0x00\n        /* \"#utility.yul\":8793:8794   */\n      0x02\n        /* \"#utility.yul\":8787:8791   */\n      dup3\n        /* \"#utility.yul\":8783:8795   */\n      div\n        /* \"#utility.yul\":8773:8795   */\n      swap1\n      pop\n        /* \"#utility.yul\":8840:8841   */\n      0x01\n        /* \"#utility.yul\":8834:8838   */\n      dup3\n        /* \"#utility.yul\":8830:8842   */\n      and\n        /* \"#utility.yul\":8861:8879   */\n      dup1\n        /* \"#utility.yul\":8851:8932   */\n      tag_552\n      jumpi\n        /* \"#utility.yul\":8917:8921   */\n      0x7f\n        /* \"#utility.yul\":8909:8915   */\n      dup3\n        /* \"#utility.yul\":8905:8922   */\n      and\n        /* \"#utility.yul\":8895:8922   */\n      swap2\n      pop\n        /* \"#utility.yul\":8851:8932   */\n    tag_552:\n        /* \"#utility.yul\":8979:8981   */\n      0x20\n        /* \"#utility.yul\":8971:8977   */\n      dup3\n        /* \"#utility.yul\":8968:8982   */\n      lt\n        /* \"#utility.yul\":8948:8966   */\n      dup2\n        /* \"#utility.yul\":8945:8983   */\n      sub\n        /* \"#utility.yul\":8942:9026   */\n      tag_553\n      jumpi\n        /* \"#utility.yul\":8998:9016   */\n      tag_554\n      tag_428\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":8942:9026   */\n    tag_553:\n        /* \"#utility.yul\":8763:9032   */\n      pop\n        /* \"#utility.yul\":8712:9032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9038:9208   */\n    tag_429:\n        /* \"#utility.yul\":9178:9200   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":9174:9175   */\n      0x00\n        /* \"#utility.yul\":9166:9172   */\n      dup3\n        /* \"#utility.yul\":9162:9176   */\n      add\n        /* \"#utility.yul\":9155:9201   */\n      mstore\n        /* \"#utility.yul\":9038:9208   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9214:9580   */\n    tag_430:\n        /* \"#utility.yul\":9356:9359   */\n      0x00\n        /* \"#utility.yul\":9377:9444   */\n      tag_557\n        /* \"#utility.yul\":9441:9443   */\n      0x14\n        /* \"#utility.yul\":9436:9439   */\n      dup4\n        /* \"#utility.yul\":9377:9444   */\n      tag_408\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":9370:9444   */\n      swap2\n      pop\n        /* \"#utility.yul\":9453:9546   */\n      tag_558\n        /* \"#utility.yul\":9542:9545   */\n      dup3\n        /* \"#utility.yul\":9453:9546   */\n      tag_429\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":9571:9573   */\n      0x20\n        /* \"#utility.yul\":9566:9569   */\n      dup3\n        /* \"#utility.yul\":9562:9574   */\n      add\n        /* \"#utility.yul\":9555:9574   */\n      swap1\n      pop\n        /* \"#utility.yul\":9214:9580   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9586:10005   */\n    tag_191:\n        /* \"#utility.yul\":9752:9756   */\n      0x00\n        /* \"#utility.yul\":9790:9792   */\n      0x20\n        /* \"#utility.yul\":9779:9788   */\n      dup3\n        /* \"#utility.yul\":9775:9793   */\n      add\n        /* \"#utility.yul\":9767:9793   */\n      swap1\n      pop\n        /* \"#utility.yul\":9839:9848   */\n      dup2\n        /* \"#utility.yul\":9833:9837   */\n      dup2\n        /* \"#utility.yul\":9829:9849   */\n      sub\n        /* \"#utility.yul\":9825:9826   */\n      0x00\n        /* \"#utility.yul\":9814:9823   */\n      dup4\n        /* \"#utility.yul\":9810:9827   */\n      add\n        /* \"#utility.yul\":9803:9850   */\n      mstore\n        /* \"#utility.yul\":9867:9998   */\n      tag_560\n        /* \"#utility.yul\":9993:9997   */\n      dup2\n        /* \"#utility.yul\":9867:9998   */\n      tag_430\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":9859:9998   */\n      swap1\n      pop\n        /* \"#utility.yul\":9586:10005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10011:10183   */\n    tag_431:\n        /* \"#utility.yul\":10151:10175   */\n      0x43616c6c6572206973206e6f742061206d656d62657200000000000000000000\n        /* \"#utility.yul\":10147:10148   */\n      0x00\n        /* \"#utility.yul\":10139:10145   */\n      dup3\n        /* \"#utility.yul\":10135:10149   */\n      add\n        /* \"#utility.yul\":10128:10176   */\n      mstore\n        /* \"#utility.yul\":10011:10183   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10189:10555   */\n    tag_432:\n        /* \"#utility.yul\":10331:10334   */\n      0x00\n        /* \"#utility.yul\":10352:10419   */\n      tag_563\n        /* \"#utility.yul\":10416:10418   */\n      0x16\n        /* \"#utility.yul\":10411:10414   */\n      dup4\n        /* \"#utility.yul\":10352:10419   */\n      tag_408\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":10345:10419   */\n      swap2\n      pop\n        /* \"#utility.yul\":10428:10521   */\n      tag_564\n        /* \"#utility.yul\":10517:10520   */\n      dup3\n        /* \"#utility.yul\":10428:10521   */\n      tag_431\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":10546:10548   */\n      0x20\n        /* \"#utility.yul\":10541:10544   */\n      dup3\n        /* \"#utility.yul\":10537:10549   */\n      add\n        /* \"#utility.yul\":10530:10549   */\n      swap1\n      pop\n        /* \"#utility.yul\":10189:10555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10561:10980   */\n    tag_207:\n        /* \"#utility.yul\":10727:10731   */\n      0x00\n        /* \"#utility.yul\":10765:10767   */\n      0x20\n        /* \"#utility.yul\":10754:10763   */\n      dup3\n        /* \"#utility.yul\":10750:10768   */\n      add\n        /* \"#utility.yul\":10742:10768   */\n      swap1\n      pop\n        /* \"#utility.yul\":10814:10823   */\n      dup2\n        /* \"#utility.yul\":10808:10812   */\n      dup2\n        /* \"#utility.yul\":10804:10824   */\n      sub\n        /* \"#utility.yul\":10800:10801   */\n      0x00\n        /* \"#utility.yul\":10789:10798   */\n      dup4\n        /* \"#utility.yul\":10785:10802   */\n      add\n        /* \"#utility.yul\":10778:10825   */\n      mstore\n        /* \"#utility.yul\":10842:10973   */\n      tag_566\n        /* \"#utility.yul\":10968:10972   */\n      dup2\n        /* \"#utility.yul\":10842:10973   */\n      tag_432\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":10834:10973   */\n      swap1\n      pop\n        /* \"#utility.yul\":10561:10980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10986:11166   */\n    tag_211:\n        /* \"#utility.yul\":11034:11111   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11031:11032   */\n      0x00\n        /* \"#utility.yul\":11024:11112   */\n      mstore\n        /* \"#utility.yul\":11131:11135   */\n      0x21\n        /* \"#utility.yul\":11128:11129   */\n      0x04\n        /* \"#utility.yul\":11121:11136   */\n      mstore\n        /* \"#utility.yul\":11155:11159   */\n      0x24\n        /* \"#utility.yul\":11152:11153   */\n      0x00\n        /* \"#utility.yul\":11145:11160   */\n      revert\n        /* \"#utility.yul\":11172:11345   */\n    tag_433:\n        /* \"#utility.yul\":11312:11337   */\n      0x496e76616c6964206d656d626572736869702074797065000000000000000000\n        /* \"#utility.yul\":11308:11309   */\n      0x00\n        /* \"#utility.yul\":11300:11306   */\n      dup3\n        /* \"#utility.yul\":11296:11310   */\n      add\n        /* \"#utility.yul\":11289:11338   */\n      mstore\n        /* \"#utility.yul\":11172:11345   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11351:11717   */\n    tag_434:\n        /* \"#utility.yul\":11493:11496   */\n      0x00\n        /* \"#utility.yul\":11514:11581   */\n      tag_570\n        /* \"#utility.yul\":11578:11580   */\n      0x17\n        /* \"#utility.yul\":11573:11576   */\n      dup4\n        /* \"#utility.yul\":11514:11581   */\n      tag_408\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":11507:11581   */\n      swap2\n      pop\n        /* \"#utility.yul\":11590:11683   */\n      tag_571\n        /* \"#utility.yul\":11679:11682   */\n      dup3\n        /* \"#utility.yul\":11590:11683   */\n      tag_433\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":11708:11710   */\n      0x20\n        /* \"#utility.yul\":11703:11706   */\n      dup3\n        /* \"#utility.yul\":11699:11711   */\n      add\n        /* \"#utility.yul\":11692:11711   */\n      swap1\n      pop\n        /* \"#utility.yul\":11351:11717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11723:12142   */\n    tag_238:\n        /* \"#utility.yul\":11889:11893   */\n      0x00\n        /* \"#utility.yul\":11927:11929   */\n      0x20\n        /* \"#utility.yul\":11916:11925   */\n      dup3\n        /* \"#utility.yul\":11912:11930   */\n      add\n        /* \"#utility.yul\":11904:11930   */\n      swap1\n      pop\n        /* \"#utility.yul\":11976:11985   */\n      dup2\n        /* \"#utility.yul\":11970:11974   */\n      dup2\n        /* \"#utility.yul\":11966:11986   */\n      sub\n        /* \"#utility.yul\":11962:11963   */\n      0x00\n        /* \"#utility.yul\":11951:11960   */\n      dup4\n        /* \"#utility.yul\":11947:11964   */\n      add\n        /* \"#utility.yul\":11940:11987   */\n      mstore\n        /* \"#utility.yul\":12004:12135   */\n      tag_573\n        /* \"#utility.yul\":12130:12134   */\n      dup2\n        /* \"#utility.yul\":12004:12135   */\n      tag_434\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":11996:12135   */\n      swap1\n      pop\n        /* \"#utility.yul\":11723:12142   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12148:12328   */\n    tag_435:\n        /* \"#utility.yul\":12196:12273   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12193:12194   */\n      0x00\n        /* \"#utility.yul\":12186:12274   */\n      mstore\n        /* \"#utility.yul\":12293:12297   */\n      0x11\n        /* \"#utility.yul\":12290:12291   */\n      0x04\n        /* \"#utility.yul\":12283:12298   */\n      mstore\n        /* \"#utility.yul\":12317:12321   */\n      0x24\n        /* \"#utility.yul\":12314:12315   */\n      0x00\n        /* \"#utility.yul\":12307:12322   */\n      revert\n        /* \"#utility.yul\":12334:12525   */\n    tag_241:\n        /* \"#utility.yul\":12374:12377   */\n      0x00\n        /* \"#utility.yul\":12393:12413   */\n      tag_576\n        /* \"#utility.yul\":12411:12412   */\n      dup3\n        /* \"#utility.yul\":12393:12413   */\n      tag_416\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":12388:12413   */\n      swap2\n      pop\n        /* \"#utility.yul\":12427:12447   */\n      tag_577\n        /* \"#utility.yul\":12445:12446   */\n      dup4\n        /* \"#utility.yul\":12427:12447   */\n      tag_416\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":12422:12447   */\n      swap3\n      pop\n        /* \"#utility.yul\":12470:12471   */\n      dup3\n        /* \"#utility.yul\":12467:12468   */\n      dup3\n        /* \"#utility.yul\":12463:12472   */\n      add\n        /* \"#utility.yul\":12456:12472   */\n      swap1\n      pop\n        /* \"#utility.yul\":12491:12494   */\n      dup1\n        /* \"#utility.yul\":12488:12489   */\n      dup3\n        /* \"#utility.yul\":12485:12495   */\n      gt\n        /* \"#utility.yul\":12482:12518   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":12498:12516   */\n      tag_579\n      tag_435\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":12482:12518   */\n    tag_578:\n        /* \"#utility.yul\":12334:12525   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12531:12656   */\n    tag_436:\n        /* \"#utility.yul\":12624:12625   */\n      0x03\n        /* \"#utility.yul\":12617:12622   */\n      dup2\n        /* \"#utility.yul\":12614:12626   */\n      lt\n        /* \"#utility.yul\":12604:12650   */\n      tag_581\n      jumpi\n        /* \"#utility.yul\":12630:12648   */\n      tag_582\n      tag_211\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":12604:12650   */\n    tag_581:\n        /* \"#utility.yul\":12531:12656   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12662:12813   */\n    tag_437:\n        /* \"#utility.yul\":12719:12726   */\n      0x00\n        /* \"#utility.yul\":12748:12753   */\n      dup2\n        /* \"#utility.yul\":12737:12753   */\n      swap1\n      pop\n        /* \"#utility.yul\":12754:12807   */\n      tag_584\n        /* \"#utility.yul\":12801:12806   */\n      dup3\n        /* \"#utility.yul\":12754:12807   */\n      tag_436\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":12662:12813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12819:12970   */\n    tag_438:\n        /* \"#utility.yul\":12887:12896   */\n      0x00\n        /* \"#utility.yul\":12920:12964   */\n      tag_586\n        /* \"#utility.yul\":12958:12963   */\n      dup3\n        /* \"#utility.yul\":12920:12964   */\n      tag_437\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":12907:12964   */\n      swap1\n      pop\n        /* \"#utility.yul\":12819:12970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12976:13143   */\n    tag_439:\n        /* \"#utility.yul\":13081:13136   */\n      tag_588\n        /* \"#utility.yul\":13130:13135   */\n      dup2\n        /* \"#utility.yul\":13081:13136   */\n      tag_438\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":13076:13079   */\n      dup3\n        /* \"#utility.yul\":13069:13137   */\n      mstore\n        /* \"#utility.yul\":12976:13143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13149:13517   */\n    tag_245:\n        /* \"#utility.yul\":13288:13292   */\n      0x00\n        /* \"#utility.yul\":13326:13328   */\n      0x40\n        /* \"#utility.yul\":13315:13324   */\n      dup3\n        /* \"#utility.yul\":13311:13329   */\n      add\n        /* \"#utility.yul\":13303:13329   */\n      swap1\n      pop\n        /* \"#utility.yul\":13339:13428   */\n      tag_590\n        /* \"#utility.yul\":13425:13426   */\n      0x00\n        /* \"#utility.yul\":13414:13423   */\n      dup4\n        /* \"#utility.yul\":13410:13427   */\n      add\n        /* \"#utility.yul\":13401:13407   */\n      dup6\n        /* \"#utility.yul\":13339:13428   */\n      tag_439\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":13438:13510   */\n      tag_591\n        /* \"#utility.yul\":13506:13508   */\n      0x20\n        /* \"#utility.yul\":13495:13504   */\n      dup4\n        /* \"#utility.yul\":13491:13509   */\n      add\n        /* \"#utility.yul\":13482:13488   */\n      dup5\n        /* \"#utility.yul\":13438:13510   */\n      tag_419\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":13149:13517   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13523:13625   */\n    tag_440:\n        /* \"#utility.yul\":13565:13573   */\n      0x00\n        /* \"#utility.yul\":13612:13617   */\n      dup2\n        /* \"#utility.yul\":13609:13610   */\n      0x01\n        /* \"#utility.yul\":13605:13618   */\n      shr\n        /* \"#utility.yul\":13584:13618   */\n      swap1\n      pop\n        /* \"#utility.yul\":13523:13625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13631:14479   */\n    tag_441:\n        /* \"#utility.yul\":13692:13697   */\n      0x00\n        /* \"#utility.yul\":13699:13703   */\n      0x00\n        /* \"#utility.yul\":13723:13729   */\n      dup3\n        /* \"#utility.yul\":13714:13729   */\n      swap2\n      pop\n        /* \"#utility.yul\":13747:13752   */\n      dup4\n        /* \"#utility.yul\":13738:13752   */\n      swap1\n      pop\n        /* \"#utility.yul\":13761:14473   */\n    tag_594:\n        /* \"#utility.yul\":13782:13783   */\n      0x01\n        /* \"#utility.yul\":13772:13780   */\n      dup6\n        /* \"#utility.yul\":13769:13784   */\n      gt\n        /* \"#utility.yul\":13761:14473   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":13877:13881   */\n      dup1\n        /* \"#utility.yul\":13872:13875   */\n      dup7\n        /* \"#utility.yul\":13868:13882   */\n      div\n        /* \"#utility.yul\":13862:13866   */\n      dup2\n        /* \"#utility.yul\":13859:13883   */\n      gt\n        /* \"#utility.yul\":13856:13906   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":13886:13904   */\n      tag_598\n      tag_435\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":13856:13906   */\n    tag_597:\n        /* \"#utility.yul\":13936:13937   */\n      0x01\n        /* \"#utility.yul\":13926:13934   */\n      dup6\n        /* \"#utility.yul\":13922:13938   */\n      and\n        /* \"#utility.yul\":13919:14370   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":14351:14355   */\n      dup1\n        /* \"#utility.yul\":14344:14349   */\n      dup3\n        /* \"#utility.yul\":14340:14356   */\n      mul\n        /* \"#utility.yul\":14331:14356   */\n      swap2\n      pop\n        /* \"#utility.yul\":13919:14370   */\n    tag_599:\n        /* \"#utility.yul\":14401:14405   */\n      dup1\n        /* \"#utility.yul\":14395:14399   */\n      dup2\n        /* \"#utility.yul\":14391:14406   */\n      mul\n        /* \"#utility.yul\":14383:14406   */\n      swap1\n      pop\n        /* \"#utility.yul\":14431:14463   */\n      tag_600\n        /* \"#utility.yul\":14454:14462   */\n      dup6\n        /* \"#utility.yul\":14431:14463   */\n      tag_440\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":14419:14463   */\n      swap5\n      pop\n        /* \"#utility.yul\":13761:14473   */\n      jump(tag_594)\n    tag_596:\n        /* \"#utility.yul\":13631:14479   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14485:15558   */\n    tag_442:\n        /* \"#utility.yul\":14539:14544   */\n      0x00\n        /* \"#utility.yul\":14730:14738   */\n      dup3\n        /* \"#utility.yul\":14720:14760   */\n      tag_602\n      jumpi\n        /* \"#utility.yul\":14751:14752   */\n      0x01\n        /* \"#utility.yul\":14742:14752   */\n      swap1\n      pop\n        /* \"#utility.yul\":14753:14758   */\n      jump(tag_601)\n        /* \"#utility.yul\":14720:14760   */\n    tag_602:\n        /* \"#utility.yul\":14779:14783   */\n      dup2\n        /* \"#utility.yul\":14769:14805   */\n      tag_603\n      jumpi\n        /* \"#utility.yul\":14796:14797   */\n      0x00\n        /* \"#utility.yul\":14787:14797   */\n      swap1\n      pop\n        /* \"#utility.yul\":14798:14803   */\n      jump(tag_601)\n        /* \"#utility.yul\":14769:14805   */\n    tag_603:\n        /* \"#utility.yul\":14865:14869   */\n      dup2\n        /* \"#utility.yul\":14913:14914   */\n      0x01\n        /* \"#utility.yul\":14908:14935   */\n      dup2\n      eq\n      tag_605\n      jumpi\n        /* \"#utility.yul\":14949:14950   */\n      0x02\n        /* \"#utility.yul\":14944:15135   */\n      dup2\n      eq\n      tag_606\n      jumpi\n        /* \"#utility.yul\":14858:15135   */\n      jump(tag_604)\n        /* \"#utility.yul\":14908:14935   */\n    tag_605:\n        /* \"#utility.yul\":14926:14927   */\n      0x01\n        /* \"#utility.yul\":14917:14927   */\n      swap2\n      pop\n        /* \"#utility.yul\":14928:14933   */\n      pop\n      jump(tag_601)\n        /* \"#utility.yul\":14944:15135   */\n    tag_606:\n        /* \"#utility.yul\":14989:14992   */\n      0xff\n        /* \"#utility.yul\":14979:14987   */\n      dup5\n        /* \"#utility.yul\":14976:14993   */\n      gt\n        /* \"#utility.yul\":14973:15016   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":14996:15014   */\n      tag_608\n      tag_435\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":14973:15016   */\n    tag_607:\n        /* \"#utility.yul\":15045:15053   */\n      dup4\n        /* \"#utility.yul\":15042:15043   */\n      0x02\n        /* \"#utility.yul\":15038:15054   */\n      exp\n        /* \"#utility.yul\":15029:15054   */\n      swap2\n      pop\n        /* \"#utility.yul\":15080:15083   */\n      dup5\n        /* \"#utility.yul\":15073:15078   */\n      dup3\n        /* \"#utility.yul\":15070:15084   */\n      gt\n        /* \"#utility.yul\":15067:15107   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":15087:15105   */\n      tag_610\n      tag_435\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":15067:15107   */\n    tag_609:\n        /* \"#utility.yul\":15120:15125   */\n      pop\n      jump(tag_601)\n        /* \"#utility.yul\":14858:15135   */\n    tag_604:\n      pop\n        /* \"#utility.yul\":15244:15246   */\n      0x20\n        /* \"#utility.yul\":15234:15242   */\n      dup4\n        /* \"#utility.yul\":15231:15247   */\n      lt\n        /* \"#utility.yul\":15225:15228   */\n      0x0133\n        /* \"#utility.yul\":15219:15223   */\n      dup4\n        /* \"#utility.yul\":15216:15229   */\n      lt\n        /* \"#utility.yul\":15212:15248   */\n      and\n        /* \"#utility.yul\":15194:15196   */\n      0x4e\n        /* \"#utility.yul\":15184:15192   */\n      dup5\n        /* \"#utility.yul\":15181:15197   */\n      lt\n        /* \"#utility.yul\":15176:15178   */\n      0x0b\n        /* \"#utility.yul\":15170:15174   */\n      dup5\n        /* \"#utility.yul\":15167:15179   */\n      lt\n        /* \"#utility.yul\":15163:15198   */\n      and\n        /* \"#utility.yul\":15147:15258   */\n      or\n        /* \"#utility.yul\":15144:15390   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":15300:15308   */\n      dup3\n        /* \"#utility.yul\":15294:15298   */\n      dup3\n        /* \"#utility.yul\":15290:15309   */\n      exp\n        /* \"#utility.yul\":15281:15309   */\n      swap1\n      pop\n        /* \"#utility.yul\":15335:15338   */\n      dup4\n        /* \"#utility.yul\":15328:15333   */\n      dup2\n        /* \"#utility.yul\":15325:15339   */\n      gt\n        /* \"#utility.yul\":15322:15362   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":15342:15360   */\n      tag_613\n      tag_435\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":15322:15362   */\n    tag_612:\n        /* \"#utility.yul\":15375:15380   */\n      jump(tag_601)\n        /* \"#utility.yul\":15144:15390   */\n    tag_611:\n        /* \"#utility.yul\":15415:15457   */\n      tag_614\n        /* \"#utility.yul\":15453:15456   */\n      dup5\n        /* \"#utility.yul\":15443:15451   */\n      dup5\n        /* \"#utility.yul\":15437:15441   */\n      dup5\n        /* \"#utility.yul\":15434:15435   */\n      0x01\n        /* \"#utility.yul\":15415:15457   */\n      tag_441\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":15400:15457   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":15489:15493   */\n      dup2\n        /* \"#utility.yul\":15484:15487   */\n      dup5\n        /* \"#utility.yul\":15480:15494   */\n      div\n        /* \"#utility.yul\":15473:15478   */\n      dup2\n        /* \"#utility.yul\":15470:15495   */\n      gt\n        /* \"#utility.yul\":15467:15518   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":15498:15516   */\n      tag_616\n      tag_435\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":15467:15518   */\n    tag_615:\n        /* \"#utility.yul\":15547:15551   */\n      dup2\n        /* \"#utility.yul\":15540:15545   */\n      dup2\n        /* \"#utility.yul\":15536:15552   */\n      mul\n        /* \"#utility.yul\":15527:15552   */\n      swap1\n      pop\n        /* \"#utility.yul\":14485:15558   */\n    tag_601:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15564:15845   */\n    tag_253:\n        /* \"#utility.yul\":15622:15627   */\n      0x00\n        /* \"#utility.yul\":15646:15669   */\n      tag_618\n        /* \"#utility.yul\":15664:15668   */\n      dup3\n        /* \"#utility.yul\":15646:15669   */\n      tag_416\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":15638:15669   */\n      swap2\n      pop\n        /* \"#utility.yul\":15690:15715   */\n      tag_619\n        /* \"#utility.yul\":15706:15714   */\n      dup4\n        /* \"#utility.yul\":15690:15715   */\n      tag_426\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":15678:15715   */\n      swap3\n      pop\n        /* \"#utility.yul\":15734:15838   */\n      tag_620\n        /* \"#utility.yul\":15771:15837   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15761:15769   */\n      dup5\n        /* \"#utility.yul\":15755:15759   */\n      dup5\n        /* \"#utility.yul\":15734:15838   */\n      tag_442\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":15725:15838   */\n      swap1\n      pop\n        /* \"#utility.yul\":15564:15845   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15851:16261   */\n    tag_255:\n        /* \"#utility.yul\":15891:15898   */\n      0x00\n        /* \"#utility.yul\":15914:15934   */\n      tag_622\n        /* \"#utility.yul\":15932:15933   */\n      dup3\n        /* \"#utility.yul\":15914:15934   */\n      tag_416\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":15909:15934   */\n      swap2\n      pop\n        /* \"#utility.yul\":15948:15968   */\n      tag_623\n        /* \"#utility.yul\":15966:15967   */\n      dup4\n        /* \"#utility.yul\":15948:15968   */\n      tag_416\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":15943:15968   */\n      swap3\n      pop\n        /* \"#utility.yul\":16003:16004   */\n      dup3\n        /* \"#utility.yul\":16000:16001   */\n      dup3\n        /* \"#utility.yul\":15996:16005   */\n      mul\n        /* \"#utility.yul\":16025:16055   */\n      tag_624\n        /* \"#utility.yul\":16043:16054   */\n      dup2\n        /* \"#utility.yul\":16025:16055   */\n      tag_416\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":16014:16055   */\n      swap2\n      pop\n        /* \"#utility.yul\":16204:16205   */\n      dup3\n        /* \"#utility.yul\":16195:16202   */\n      dup3\n        /* \"#utility.yul\":16191:16206   */\n      div\n        /* \"#utility.yul\":16188:16189   */\n      dup5\n        /* \"#utility.yul\":16185:16207   */\n      eq\n        /* \"#utility.yul\":16165:16166   */\n      dup4\n        /* \"#utility.yul\":16158:16167   */\n      iszero\n        /* \"#utility.yul\":16138:16221   */\n      or\n        /* \"#utility.yul\":16115:16254   */\n      tag_625\n      jumpi\n        /* \"#utility.yul\":16234:16252   */\n      tag_626\n      tag_435\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":16115:16254   */\n    tag_625:\n        /* \"#utility.yul\":15899:16261   */\n      pop\n        /* \"#utility.yul\":15851:16261   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16267:16461   */\n    tag_280:\n        /* \"#utility.yul\":16307:16311   */\n      0x00\n        /* \"#utility.yul\":16327:16347   */\n      tag_628\n        /* \"#utility.yul\":16345:16346   */\n      dup3\n        /* \"#utility.yul\":16327:16347   */\n      tag_416\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":16322:16347   */\n      swap2\n      pop\n        /* \"#utility.yul\":16361:16381   */\n      tag_629\n        /* \"#utility.yul\":16379:16380   */\n      dup4\n        /* \"#utility.yul\":16361:16381   */\n      tag_416\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":16356:16381   */\n      swap3\n      pop\n        /* \"#utility.yul\":16405:16406   */\n      dup3\n        /* \"#utility.yul\":16402:16403   */\n      dup3\n        /* \"#utility.yul\":16398:16407   */\n      sub\n        /* \"#utility.yul\":16390:16407   */\n      swap1\n      pop\n        /* \"#utility.yul\":16429:16430   */\n      dup2\n        /* \"#utility.yul\":16423:16427   */\n      dup2\n        /* \"#utility.yul\":16420:16431   */\n      gt\n        /* \"#utility.yul\":16417:16454   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":16434:16452   */\n      tag_631\n      tag_435\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":16417:16454   */\n    tag_630:\n        /* \"#utility.yul\":16267:16461   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16467:16644   */\n    tag_443:\n        /* \"#utility.yul\":16607:16636   */\n      0x5265666572726572206d656d6265727368697020657870697265640000000000\n        /* \"#utility.yul\":16603:16604   */\n      0x00\n        /* \"#utility.yul\":16595:16601   */\n      dup3\n        /* \"#utility.yul\":16591:16605   */\n      add\n        /* \"#utility.yul\":16584:16637   */\n      mstore\n        /* \"#utility.yul\":16467:16644   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16650:17016   */\n    tag_444:\n        /* \"#utility.yul\":16792:16795   */\n      0x00\n        /* \"#utility.yul\":16813:16880   */\n      tag_634\n        /* \"#utility.yul\":16877:16879   */\n      0x1b\n        /* \"#utility.yul\":16872:16875   */\n      dup4\n        /* \"#utility.yul\":16813:16880   */\n      tag_408\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":16806:16880   */\n      swap2\n      pop\n        /* \"#utility.yul\":16889:16982   */\n      tag_635\n        /* \"#utility.yul\":16978:16981   */\n      dup3\n        /* \"#utility.yul\":16889:16982   */\n      tag_443\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":17007:17009   */\n      0x20\n        /* \"#utility.yul\":17002:17005   */\n      dup3\n        /* \"#utility.yul\":16998:17010   */\n      add\n        /* \"#utility.yul\":16991:17010   */\n      swap1\n      pop\n        /* \"#utility.yul\":16650:17016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17022:17441   */\n    tag_295:\n        /* \"#utility.yul\":17188:17192   */\n      0x00\n        /* \"#utility.yul\":17226:17228   */\n      0x20\n        /* \"#utility.yul\":17215:17224   */\n      dup3\n        /* \"#utility.yul\":17211:17229   */\n      add\n        /* \"#utility.yul\":17203:17229   */\n      swap1\n      pop\n        /* \"#utility.yul\":17275:17284   */\n      dup2\n        /* \"#utility.yul\":17269:17273   */\n      dup2\n        /* \"#utility.yul\":17265:17285   */\n      sub\n        /* \"#utility.yul\":17261:17262   */\n      0x00\n        /* \"#utility.yul\":17250:17259   */\n      dup4\n        /* \"#utility.yul\":17246:17263   */\n      add\n        /* \"#utility.yul\":17239:17286   */\n      mstore\n        /* \"#utility.yul\":17303:17434   */\n      tag_637\n        /* \"#utility.yul\":17429:17433   */\n      dup2\n        /* \"#utility.yul\":17303:17434   */\n      tag_444\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":17295:17434   */\n      swap1\n      pop\n        /* \"#utility.yul\":17022:17441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17447:17613   */\n    tag_445:\n        /* \"#utility.yul\":17587:17605   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":17583:17584   */\n      0x00\n        /* \"#utility.yul\":17575:17581   */\n      dup3\n        /* \"#utility.yul\":17571:17585   */\n      add\n        /* \"#utility.yul\":17564:17606   */\n      mstore\n        /* \"#utility.yul\":17447:17613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17619:17985   */\n    tag_446:\n        /* \"#utility.yul\":17761:17764   */\n      0x00\n        /* \"#utility.yul\":17782:17849   */\n      tag_640\n        /* \"#utility.yul\":17846:17848   */\n      0x10\n        /* \"#utility.yul\":17841:17844   */\n      dup4\n        /* \"#utility.yul\":17782:17849   */\n      tag_408\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":17775:17849   */\n      swap2\n      pop\n        /* \"#utility.yul\":17858:17951   */\n      tag_641\n        /* \"#utility.yul\":17947:17950   */\n      dup3\n        /* \"#utility.yul\":17858:17951   */\n      tag_445\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":17976:17978   */\n      0x20\n        /* \"#utility.yul\":17971:17974   */\n      dup3\n        /* \"#utility.yul\":17967:17979   */\n      add\n        /* \"#utility.yul\":17960:17979   */\n      swap1\n      pop\n        /* \"#utility.yul\":17619:17985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17991:18410   */\n    tag_324:\n        /* \"#utility.yul\":18157:18161   */\n      0x00\n        /* \"#utility.yul\":18195:18197   */\n      0x20\n        /* \"#utility.yul\":18184:18193   */\n      dup3\n        /* \"#utility.yul\":18180:18198   */\n      add\n        /* \"#utility.yul\":18172:18198   */\n      swap1\n      pop\n        /* \"#utility.yul\":18244:18253   */\n      dup2\n        /* \"#utility.yul\":18238:18242   */\n      dup2\n        /* \"#utility.yul\":18234:18254   */\n      sub\n        /* \"#utility.yul\":18230:18231   */\n      0x00\n        /* \"#utility.yul\":18219:18228   */\n      dup4\n        /* \"#utility.yul\":18215:18232   */\n      add\n        /* \"#utility.yul\":18208:18255   */\n      mstore\n        /* \"#utility.yul\":18272:18403   */\n      tag_643\n        /* \"#utility.yul\":18398:18402   */\n      dup2\n        /* \"#utility.yul\":18272:18403   */\n      tag_446\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":18264:18403   */\n      swap1\n      pop\n        /* \"#utility.yul\":17991:18410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18416:18534   */\n    tag_447:\n        /* \"#utility.yul\":18503:18527   */\n      tag_645\n        /* \"#utility.yul\":18521:18526   */\n      dup2\n        /* \"#utility.yul\":18503:18527   */\n      tag_413\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":18498:18501   */\n      dup3\n        /* \"#utility.yul\":18491:18528   */\n      mstore\n        /* \"#utility.yul\":18416:18534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18540:18762   */\n    tag_332:\n        /* \"#utility.yul\":18633:18637   */\n      0x00\n        /* \"#utility.yul\":18671:18673   */\n      0x20\n        /* \"#utility.yul\":18660:18669   */\n      dup3\n        /* \"#utility.yul\":18656:18674   */\n      add\n        /* \"#utility.yul\":18648:18674   */\n      swap1\n      pop\n        /* \"#utility.yul\":18684:18755   */\n      tag_647\n        /* \"#utility.yul\":18752:18753   */\n      0x00\n        /* \"#utility.yul\":18741:18750   */\n      dup4\n        /* \"#utility.yul\":18737:18754   */\n      add\n        /* \"#utility.yul\":18728:18734   */\n      dup5\n        /* \"#utility.yul\":18684:18755   */\n      tag_447\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":18540:18762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18768:19210   */\n    tag_342:\n        /* \"#utility.yul\":18917:18921   */\n      0x00\n        /* \"#utility.yul\":18955:18957   */\n      0x60\n        /* \"#utility.yul\":18944:18953   */\n      dup3\n        /* \"#utility.yul\":18940:18958   */\n      add\n        /* \"#utility.yul\":18932:18958   */\n      swap1\n      pop\n        /* \"#utility.yul\":18968:19039   */\n      tag_649\n        /* \"#utility.yul\":19036:19037   */\n      0x00\n        /* \"#utility.yul\":19025:19034   */\n      dup4\n        /* \"#utility.yul\":19021:19038   */\n      add\n        /* \"#utility.yul\":19012:19018   */\n      dup7\n        /* \"#utility.yul\":18968:19039   */\n      tag_447\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":19049:19121   */\n      tag_650\n        /* \"#utility.yul\":19117:19119   */\n      0x20\n        /* \"#utility.yul\":19106:19115   */\n      dup4\n        /* \"#utility.yul\":19102:19120   */\n      add\n        /* \"#utility.yul\":19093:19099   */\n      dup6\n        /* \"#utility.yul\":19049:19121   */\n      tag_419\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":19131:19203   */\n      tag_651\n        /* \"#utility.yul\":19199:19201   */\n      0x40\n        /* \"#utility.yul\":19188:19197   */\n      dup4\n        /* \"#utility.yul\":19184:19202   */\n      add\n        /* \"#utility.yul\":19175:19181   */\n      dup5\n        /* \"#utility.yul\":19131:19203   */\n      tag_419\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":18768:19210   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19216:19548   */\n    tag_384:\n        /* \"#utility.yul\":19337:19341   */\n      0x00\n        /* \"#utility.yul\":19375:19377   */\n      0x40\n        /* \"#utility.yul\":19364:19373   */\n      dup3\n        /* \"#utility.yul\":19360:19378   */\n      add\n        /* \"#utility.yul\":19352:19378   */\n      swap1\n      pop\n        /* \"#utility.yul\":19388:19459   */\n      tag_653\n        /* \"#utility.yul\":19456:19457   */\n      0x00\n        /* \"#utility.yul\":19445:19454   */\n      dup4\n        /* \"#utility.yul\":19441:19458   */\n      add\n        /* \"#utility.yul\":19432:19438   */\n      dup6\n        /* \"#utility.yul\":19388:19459   */\n      tag_447\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":19469:19541   */\n      tag_654\n        /* \"#utility.yul\":19537:19539   */\n      0x20\n        /* \"#utility.yul\":19526:19535   */\n      dup4\n        /* \"#utility.yul\":19522:19540   */\n      add\n        /* \"#utility.yul\":19513:19519   */\n      dup5\n        /* \"#utility.yul\":19469:19541   */\n      tag_423\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":19216:19548   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19554:19724   */\n    tag_448:\n        /* \"#utility.yul\":19694:19716   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":19690:19691   */\n      0x00\n        /* \"#utility.yul\":19682:19688   */\n      dup3\n        /* \"#utility.yul\":19678:19692   */\n      add\n        /* \"#utility.yul\":19671:19717   */\n      mstore\n        /* \"#utility.yul\":19554:19724   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19730:20096   */\n    tag_449:\n        /* \"#utility.yul\":19872:19875   */\n      0x00\n        /* \"#utility.yul\":19893:19960   */\n      tag_657\n        /* \"#utility.yul\":19957:19959   */\n      0x14\n        /* \"#utility.yul\":19952:19955   */\n      dup4\n        /* \"#utility.yul\":19893:19960   */\n      tag_408\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":19886:19960   */\n      swap2\n      pop\n        /* \"#utility.yul\":19969:20062   */\n      tag_658\n        /* \"#utility.yul\":20058:20061   */\n      dup3\n        /* \"#utility.yul\":19969:20062   */\n      tag_448\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":20087:20089   */\n      0x20\n        /* \"#utility.yul\":20082:20085   */\n      dup3\n        /* \"#utility.yul\":20078:20090   */\n      add\n        /* \"#utility.yul\":20071:20090   */\n      swap1\n      pop\n        /* \"#utility.yul\":19730:20096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20102:20521   */\n    tag_398:\n        /* \"#utility.yul\":20268:20272   */\n      0x00\n        /* \"#utility.yul\":20306:20308   */\n      0x20\n        /* \"#utility.yul\":20295:20304   */\n      dup3\n        /* \"#utility.yul\":20291:20309   */\n      add\n        /* \"#utility.yul\":20283:20309   */\n      swap1\n      pop\n        /* \"#utility.yul\":20355:20364   */\n      dup2\n        /* \"#utility.yul\":20349:20353   */\n      dup2\n        /* \"#utility.yul\":20345:20365   */\n      sub\n        /* \"#utility.yul\":20341:20342   */\n      0x00\n        /* \"#utility.yul\":20330:20339   */\n      dup4\n        /* \"#utility.yul\":20326:20343   */\n      add\n        /* \"#utility.yul\":20319:20366   */\n      mstore\n        /* \"#utility.yul\":20383:20514   */\n      tag_660\n        /* \"#utility.yul\":20509:20513   */\n      dup2\n        /* \"#utility.yul\":20383:20514   */\n      tag_449\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":20375:20514   */\n      swap1\n      pop\n        /* \"#utility.yul\":20102:20521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220efd26e149ae0f01f2e76854dbd775d5708059c092fe3346dbcc79dcf2836b12564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1457": {
									"entryPoint": null,
									"id": 1457,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_542": {
									"entryPoint": null,
									"id": 542,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_675": {
									"entryPoint": null,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 584,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_978": {
									"entryPoint": 830,
									"id": 978,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1254": {
									"entryPoint": 1063,
									"id": 1254,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_update_945": {
									"entryPoint": 1070,
									"id": 945,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 963,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3174,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2663,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 3023,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1799,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1607,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1937,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2115,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10983:11",
										"nodeType": "YulBlock",
										"src": "0:10983:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "759:80:11",
													"nodeType": "YulBlock",
													"src": "759:80:11",
													"statements": [
														{
															"nativeSrc": "769:22:11",
															"nodeType": "YulAssignment",
															"src": "769:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:11"
																},
																"nativeSrc": "778:13:11",
																"nodeType": "YulFunctionCall",
																"src": "778:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:11"
																},
																"nativeSrc": "800:33:11",
																"nodeType": "YulFunctionCall",
																"src": "800:33:11"
															},
															"nativeSrc": "800:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:11",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:11",
														"nodeType": "YulTypedName",
														"src": "745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:11",
														"nodeType": "YulTypedName",
														"src": "753:5:11",
														"type": ""
													}
												],
												"src": "696:143:11"
											},
											{
												"body": {
													"nativeSrc": "922:274:11",
													"nodeType": "YulBlock",
													"src": "922:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:11",
																"nodeType": "YulBlock",
																"src": "968:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:11"
																			},
																			"nativeSrc": "970:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:11"
																		},
																		"nativeSrc": "970:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:11"
																		},
																		"nativeSrc": "939:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:11",
																		"nodeType": "YulLiteral",
																		"src": "964:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:11"
																},
																"nativeSrc": "935:32:11",
																"nodeType": "YulFunctionCall",
																"src": "935:32:11"
															},
															"nativeSrc": "932:119:11",
															"nodeType": "YulIf",
															"src": "932:119:11"
														},
														{
															"nativeSrc": "1061:128:11",
															"nodeType": "YulBlock",
															"src": "1061:128:11",
															"statements": [
																{
																	"nativeSrc": "1076:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:11"
																				},
																				"nativeSrc": "1147:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:11"
																		},
																		"nativeSrc": "1115:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:11",
														"nodeType": "YulTypedName",
														"src": "892:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:11",
														"nodeType": "YulTypedName",
														"src": "903:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:11",
														"nodeType": "YulTypedName",
														"src": "915:6:11",
														"type": ""
													}
												],
												"src": "845:351:11"
											},
											{
												"body": {
													"nativeSrc": "1261:40:11",
													"nodeType": "YulBlock",
													"src": "1261:40:11",
													"statements": [
														{
															"nativeSrc": "1272:22:11",
															"nodeType": "YulAssignment",
															"src": "1272:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:11"
																},
																"nativeSrc": "1282:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:11",
														"nodeType": "YulTypedName",
														"src": "1244:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:11",
														"nodeType": "YulTypedName",
														"src": "1254:6:11",
														"type": ""
													}
												],
												"src": "1202:99:11"
											},
											{
												"body": {
													"nativeSrc": "1335:152:11",
													"nodeType": "YulBlock",
													"src": "1335:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:11",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:11"
																},
																"nativeSrc": "1345:88:11",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:11"
															},
															"nativeSrc": "1345:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:11"
																},
																"nativeSrc": "1442:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:11"
															},
															"nativeSrc": "1442:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:11"
																},
																"nativeSrc": "1466:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:11"
															},
															"nativeSrc": "1466:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:11"
											},
											{
												"body": {
													"nativeSrc": "1521:152:11",
													"nodeType": "YulBlock",
													"src": "1521:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:11",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:11"
																},
																"nativeSrc": "1531:88:11",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:11"
															},
															"nativeSrc": "1531:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:11"
																},
																"nativeSrc": "1628:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:11"
															},
															"nativeSrc": "1628:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:11"
																},
																"nativeSrc": "1652:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:11"
															},
															"nativeSrc": "1652:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:11"
											},
											{
												"body": {
													"nativeSrc": "1730:269:11",
													"nodeType": "YulBlock",
													"src": "1730:269:11",
													"statements": [
														{
															"nativeSrc": "1740:22:11",
															"nodeType": "YulAssignment",
															"src": "1740:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:11"
																},
																"nativeSrc": "1750:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:11"
																}
															]
														},
														{
															"nativeSrc": "1771:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:11"
																},
																"nativeSrc": "1797:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:11",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:11",
																"nodeType": "YulBlock",
																"src": "1848:51:11",
																"statements": [
																	{
																		"nativeSrc": "1862:27:11",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:11",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:11"
																			},
																			"nativeSrc": "1872:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:11"
																},
																"nativeSrc": "1821:26:11",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:11"
															},
															"nativeSrc": "1818:81:11",
															"nodeType": "YulIf",
															"src": "1818:81:11"
														},
														{
															"body": {
																"nativeSrc": "1951:42:11",
																"nodeType": "YulBlock",
																"src": "1951:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:11"
																			},
																			"nativeSrc": "1965:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:11"
																		},
																		"nativeSrc": "1965:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:11"
																		},
																		"nativeSrc": "1935:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:11"
																},
																"nativeSrc": "1912:38:11",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:11"
															},
															"nativeSrc": "1909:84:11",
															"nodeType": "YulIf",
															"src": "1909:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:11",
														"nodeType": "YulTypedName",
														"src": "1714:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:11",
														"nodeType": "YulTypedName",
														"src": "1723:6:11",
														"type": ""
													}
												],
												"src": "1679:320:11"
											},
											{
												"body": {
													"nativeSrc": "2059:87:11",
													"nodeType": "YulBlock",
													"src": "2059:87:11",
													"statements": [
														{
															"nativeSrc": "2069:11:11",
															"nodeType": "YulAssignment",
															"src": "2069:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:11",
																"nodeType": "YulIdentifier",
																"src": "2077:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:11"
																},
																"nativeSrc": "2090:14:11",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:11"
															},
															"nativeSrc": "2090:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:11"
														},
														{
															"nativeSrc": "2113:26:11",
															"nodeType": "YulAssignment",
															"src": "2113:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:11"
																},
																"nativeSrc": "2121:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:11",
														"nodeType": "YulTypedName",
														"src": "2046:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:11",
														"nodeType": "YulTypedName",
														"src": "2054:4:11",
														"type": ""
													}
												],
												"src": "2005:141:11"
											},
											{
												"body": {
													"nativeSrc": "2196:49:11",
													"nodeType": "YulBlock",
													"src": "2196:49:11",
													"statements": [
														{
															"nativeSrc": "2206:33:11",
															"nodeType": "YulAssignment",
															"src": "2206:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:11"
																		},
																		"nativeSrc": "2220:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:11"
																},
																"nativeSrc": "2216:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:11",
														"nodeType": "YulTypedName",
														"src": "2179:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:11",
														"nodeType": "YulTypedName",
														"src": "2189:6:11",
														"type": ""
													}
												],
												"src": "2152:93:11"
											},
											{
												"body": {
													"nativeSrc": "2304:54:11",
													"nodeType": "YulBlock",
													"src": "2304:54:11",
													"statements": [
														{
															"nativeSrc": "2314:37:11",
															"nodeType": "YulAssignment",
															"src": "2314:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:11"
																},
																"nativeSrc": "2335:16:11",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:11",
														"nodeType": "YulTypedName",
														"src": "2279:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:11",
														"nodeType": "YulTypedName",
														"src": "2285:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:11",
														"nodeType": "YulTypedName",
														"src": "2295:8:11",
														"type": ""
													}
												],
												"src": "2251:107:11"
											},
											{
												"body": {
													"nativeSrc": "2440:317:11",
													"nodeType": "YulBlock",
													"src": "2440:317:11",
													"statements": [
														{
															"nativeSrc": "2450:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:11"
																},
																"nativeSrc": "2467:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:11",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:11",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:11"
																},
																"nativeSrc": "2506:97:11",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:11",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:11",
															"nodeType": "YulAssignment",
															"src": "2612:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:11"
																},
																"nativeSrc": "2624:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:11"
																}
															]
														},
														{
															"nativeSrc": "2672:30:11",
															"nodeType": "YulAssignment",
															"src": "2672:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:11"
																		},
																		"nativeSrc": "2692:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:11"
																},
																"nativeSrc": "2681:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:11"
																}
															]
														},
														{
															"nativeSrc": "2711:40:11",
															"nodeType": "YulAssignment",
															"src": "2711:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:11"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:11"
																		},
																		"nativeSrc": "2731:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:11"
																},
																"nativeSrc": "2721:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:11",
														"nodeType": "YulTypedName",
														"src": "2401:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:11",
														"nodeType": "YulTypedName",
														"src": "2408:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:11",
														"nodeType": "YulTypedName",
														"src": "2420:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:11",
														"nodeType": "YulTypedName",
														"src": "2433:6:11",
														"type": ""
													}
												],
												"src": "2364:393:11"
											},
											{
												"body": {
													"nativeSrc": "2808:32:11",
													"nodeType": "YulBlock",
													"src": "2808:32:11",
													"statements": [
														{
															"nativeSrc": "2818:16:11",
															"nodeType": "YulAssignment",
															"src": "2818:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:11",
																"nodeType": "YulIdentifier",
																"src": "2829:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:11",
														"nodeType": "YulTypedName",
														"src": "2790:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:11",
														"nodeType": "YulTypedName",
														"src": "2800:7:11",
														"type": ""
													}
												],
												"src": "2763:77:11"
											},
											{
												"body": {
													"nativeSrc": "2878:28:11",
													"nodeType": "YulBlock",
													"src": "2878:28:11",
													"statements": [
														{
															"nativeSrc": "2888:12:11",
															"nodeType": "YulAssignment",
															"src": "2888:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:11",
																"nodeType": "YulIdentifier",
																"src": "2895:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:11",
														"nodeType": "YulTypedName",
														"src": "2864:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:11",
														"nodeType": "YulTypedName",
														"src": "2874:3:11",
														"type": ""
													}
												],
												"src": "2846:60:11"
											},
											{
												"body": {
													"nativeSrc": "2972:82:11",
													"nodeType": "YulBlock",
													"src": "2972:82:11",
													"statements": [
														{
															"nativeSrc": "2982:66:11",
															"nodeType": "YulAssignment",
															"src": "2982:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:11"
																				},
																				"nativeSrc": "3022:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:11"
																		},
																		"nativeSrc": "3013:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:11"
																},
																"nativeSrc": "2995:53:11",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:11",
														"nodeType": "YulTypedName",
														"src": "2952:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:11",
														"nodeType": "YulTypedName",
														"src": "2962:9:11",
														"type": ""
													}
												],
												"src": "2912:142:11"
											},
											{
												"body": {
													"nativeSrc": "3107:28:11",
													"nodeType": "YulBlock",
													"src": "3107:28:11",
													"statements": [
														{
															"nativeSrc": "3117:12:11",
															"nodeType": "YulAssignment",
															"src": "3117:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:11",
																"nodeType": "YulIdentifier",
																"src": "3124:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:11",
														"nodeType": "YulTypedName",
														"src": "3093:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:11",
														"nodeType": "YulTypedName",
														"src": "3103:3:11",
														"type": ""
													}
												],
												"src": "3060:75:11"
											},
											{
												"body": {
													"nativeSrc": "3217:193:11",
													"nodeType": "YulBlock",
													"src": "3217:193:11",
													"statements": [
														{
															"nativeSrc": "3227:63:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:11"
																},
																"nativeSrc": "3251:39:11",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:11",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:11"
																				},
																				"nativeSrc": "3340:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:11",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:11",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:11"
																				},
																				"nativeSrc": "3361:41:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:11"
																		},
																		"nativeSrc": "3312:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:11"
																},
																"nativeSrc": "3299:105:11",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:11"
															},
															"nativeSrc": "3299:105:11",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:11",
														"nodeType": "YulTypedName",
														"src": "3194:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:11",
														"nodeType": "YulTypedName",
														"src": "3200:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:11",
														"nodeType": "YulTypedName",
														"src": "3208:7:11",
														"type": ""
													}
												],
												"src": "3141:269:11"
											},
											{
												"body": {
													"nativeSrc": "3465:24:11",
													"nodeType": "YulBlock",
													"src": "3465:24:11",
													"statements": [
														{
															"nativeSrc": "3475:8:11",
															"nodeType": "YulAssignment",
															"src": "3475:8:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:11",
																"nodeType": "YulLiteral",
																"src": "3482:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:11",
														"nodeType": "YulTypedName",
														"src": "3461:3:11",
														"type": ""
													}
												],
												"src": "3416:73:11"
											},
											{
												"body": {
													"nativeSrc": "3548:136:11",
													"nodeType": "YulBlock",
													"src": "3548:136:11",
													"statements": [
														{
															"nativeSrc": "3558:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:11"
																},
																"nativeSrc": "3572:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:11"
																},
																"nativeSrc": "3613:65:11",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:11"
															},
															"nativeSrc": "3613:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:11",
														"nodeType": "YulTypedName",
														"src": "3534:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:11",
														"nodeType": "YulTypedName",
														"src": "3540:6:11",
														"type": ""
													}
												],
												"src": "3495:189:11"
											},
											{
												"body": {
													"nativeSrc": "3740:136:11",
													"nodeType": "YulBlock",
													"src": "3740:136:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:11",
																"nodeType": "YulBlock",
																"src": "3807:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:11",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:11"
																			},
																			"nativeSrc": "3821:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:11"
																		},
																		"nativeSrc": "3821:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:11"
																},
																"nativeSrc": "3757:14:11",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:11"
															},
															"nativeSrc": "3750:120:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:11",
																"nodeType": "YulBlock",
																"src": "3772:26:11",
																"statements": [
																	{
																		"nativeSrc": "3774:22:11",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:11"
																			},
																			"nativeSrc": "3783:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:11",
																"nodeType": "YulBlock",
																"src": "3754:2:11",
																"statements": []
															},
															"src": "3750:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:11",
														"nodeType": "YulTypedName",
														"src": "3728:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:11",
														"nodeType": "YulTypedName",
														"src": "3735:3:11",
														"type": ""
													}
												],
												"src": "3690:186:11"
											},
											{
												"body": {
													"nativeSrc": "3961:464:11",
													"nodeType": "YulBlock",
													"src": "3961:464:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:11",
																"nodeType": "YulBlock",
																"src": "3987:431:11",
																"statements": [
																	{
																		"nativeSrc": "4001:54:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:11",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:11"
																			},
																			"nativeSrc": "4017:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:11",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:11",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:11"
																					},
																					"nativeSrc": "4101:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:11"
																			},
																			"nativeSrc": "4087:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:11",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:11",
																			"nodeType": "YulBlock",
																			"src": "4288:27:11",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:11",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:11",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:11",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:11"
																			},
																			"nativeSrc": "4269:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:11"
																		},
																		"nativeSrc": "4266:49:11",
																		"nodeType": "YulIf",
																		"src": "4266:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:11",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:11",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:11"
																							},
																							"nativeSrc": "4384:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:11"
																					},
																					"nativeSrc": "4370:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:11",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:11"
																			},
																			"nativeSrc": "4328:80:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:11"
																		},
																		"nativeSrc": "4328:80:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:11"
																},
																"nativeSrc": "3975:11:11",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:11"
															},
															"nativeSrc": "3972:446:11",
															"nodeType": "YulIf",
															"src": "3972:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:11",
														"nodeType": "YulTypedName",
														"src": "3937:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:11",
														"nodeType": "YulTypedName",
														"src": "3944:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:11",
														"nodeType": "YulTypedName",
														"src": "3949:10:11",
														"type": ""
													}
												],
												"src": "3882:543:11"
											},
											{
												"body": {
													"nativeSrc": "4494:54:11",
													"nodeType": "YulBlock",
													"src": "4494:54:11",
													"statements": [
														{
															"nativeSrc": "4504:37:11",
															"nodeType": "YulAssignment",
															"src": "4504:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:11"
																},
																"nativeSrc": "4525:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:11",
														"nodeType": "YulTypedName",
														"src": "4469:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:11",
														"nodeType": "YulTypedName",
														"src": "4475:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:11",
														"nodeType": "YulTypedName",
														"src": "4485:8:11",
														"type": ""
													}
												],
												"src": "4431:117:11"
											},
											{
												"body": {
													"nativeSrc": "4605:118:11",
													"nodeType": "YulBlock",
													"src": "4605:118:11",
													"statements": [
														{
															"nativeSrc": "4615:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:11"
																				},
																				"nativeSrc": "4660:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:11"
																				},
																				"nativeSrc": "4675:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:11"
																		},
																		"nativeSrc": "4631:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:11"
																},
																"nativeSrc": "4627:56:11",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:11",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:11",
															"nodeType": "YulAssignment",
															"src": "4692:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:11"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:11"
																},
																"nativeSrc": "4702:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:11",
														"nodeType": "YulTypedName",
														"src": "4582:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:11",
														"nodeType": "YulTypedName",
														"src": "4588:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:11",
														"nodeType": "YulTypedName",
														"src": "4598:6:11",
														"type": ""
													}
												],
												"src": "4554:169:11"
											},
											{
												"body": {
													"nativeSrc": "4809:214:11",
													"nodeType": "YulBlock",
													"src": "4809:214:11",
													"statements": [
														{
															"nativeSrc": "4942:37:11",
															"nodeType": "YulAssignment",
															"src": "4942:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:11"
																},
																"nativeSrc": "4950:29:11",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:11"
																}
															]
														},
														{
															"nativeSrc": "4988:29:11",
															"nodeType": "YulAssignment",
															"src": "4988:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:11"
																		},
																		"nativeSrc": "5005:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:11"
																},
																"nativeSrc": "4996:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:11",
														"nodeType": "YulTypedName",
														"src": "4790:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:11",
														"nodeType": "YulTypedName",
														"src": "4796:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:11",
														"nodeType": "YulTypedName",
														"src": "4804:4:11",
														"type": ""
													}
												],
												"src": "4728:295:11"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:11",
													"nodeType": "YulBlock",
													"src": "5120:1303:11",
													"statements": [
														{
															"nativeSrc": "5131:51:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:11"
																},
																"nativeSrc": "5145:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:11",
																"nodeType": "YulBlock",
																"src": "5267:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:11"
																			},
																			"nativeSrc": "5269:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:11"
																		},
																		"nativeSrc": "5269:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:11",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:11"
																},
																"nativeSrc": "5236:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:11"
															},
															"nativeSrc": "5233:56:11",
															"nodeType": "YulIf",
															"src": "5233:56:11"
														},
														{
															"nativeSrc": "5299:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:11"
																		},
																		"nativeSrc": "5339:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:11"
																},
																"nativeSrc": "5313:38:11",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:11"
																},
																"nativeSrc": "5398:67:11",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:11"
															},
															"nativeSrc": "5398:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:11"
														},
														{
															"nativeSrc": "5475:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:11",
																"nodeType": "YulLiteral",
																"src": "5492:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:11",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:11",
															"nodeType": "YulAssignment",
															"src": "5503:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:11",
																"nodeType": "YulLiteral",
																"src": "5516:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:11",
																		"nodeType": "YulBlock",
																		"src": "5567:611:11",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:11",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:11"
																							},
																							"nativeSrc": "5608:9:11",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:11"
																					},
																					"nativeSrc": "5596:22:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:11",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:11"
																					},
																					"nativeSrc": "5646:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:11",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:11",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:11",
																					"nodeType": "YulBlock",
																					"src": "5764:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:11"
																												},
																												"nativeSrc": "5803:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:11"
																										},
																										"nativeSrc": "5797:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:11"
																								},
																								"nativeSrc": "5782:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:11"
																							},
																							"nativeSrc": "5782:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:11"
																						},
																						{
																							"nativeSrc": "5841:24:11",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:11",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:11"
																								},
																								"nativeSrc": "5851:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:11",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:11",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:11"
																								},
																								"nativeSrc": "5895:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:11"
																					},
																					"nativeSrc": "5727:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:11"
																				},
																				"nativeSrc": "5719:208:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:11",
																					"nodeType": "YulBlock",
																					"src": "5742:21:11",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:11",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:11",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:11"
																								},
																								"nativeSrc": "5749:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:11",
																					"nodeType": "YulBlock",
																					"src": "5723:3:11",
																					"statements": []
																				},
																				"src": "5719:208:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:11",
																					"nodeType": "YulBlock",
																					"src": "5963:156:11",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:11"
																										},
																										"nativeSrc": "6004:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:11"
																								},
																								"nativeSrc": "5998:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:11",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:11",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:11"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:11",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:11"
																												},
																												"nativeSrc": "6086:17:11",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:11",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:11"
																										},
																										"nativeSrc": "6056:48:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:11"
																								},
																								"nativeSrc": "6041:64:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:11"
																							},
																							"nativeSrc": "6041:64:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:11"
																					},
																					"nativeSrc": "5943:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:11"
																				},
																				"nativeSrc": "5940:179:11",
																				"nodeType": "YulIf",
																				"src": "5940:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:11",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:11"
																									},
																									"nativeSrc": "6149:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:11",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:11"
																							},
																							"nativeSrc": "6145:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:11"
																					},
																					"nativeSrc": "6132:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:11"
																				},
																				"nativeSrc": "6132:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:11"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:11",
																	"nodeType": "YulCase",
																	"src": "5560:618:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:11",
																		"nodeType": "YulBlock",
																		"src": "6195:222:11",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:11",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:11",
																					"nodeType": "YulBlock",
																					"src": "6246:67:11",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:11",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:11"
																										},
																										"nativeSrc": "6279:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:11"
																								},
																								"nativeSrc": "6273:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:11"
																				},
																				"nativeSrc": "6236:77:11",
																				"nodeType": "YulIf",
																				"src": "6236:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:11"
																							},
																							"nativeSrc": "6339:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:11"
																					},
																					"nativeSrc": "6326:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:11"
																				},
																				"nativeSrc": "6326:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:11"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:11",
																	"nodeType": "YulCase",
																	"src": "6187:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:11"
																},
																"nativeSrc": "5537:14:11",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:11"
															},
															"nativeSrc": "5530:887:11",
															"nodeType": "YulSwitch",
															"src": "5530:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:11",
														"nodeType": "YulTypedName",
														"src": "5109:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:11",
														"nodeType": "YulTypedName",
														"src": "5115:3:11",
														"type": ""
													}
												],
												"src": "5028:1395:11"
											},
											{
												"body": {
													"nativeSrc": "6457:152:11",
													"nodeType": "YulBlock",
													"src": "6457:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6474:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6474:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6477:77:11",
																		"nodeType": "YulLiteral",
																		"src": "6477:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6467:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6467:6:11"
																},
																"nativeSrc": "6467:88:11",
																"nodeType": "YulFunctionCall",
																"src": "6467:88:11"
															},
															"nativeSrc": "6467:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "6467:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6571:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6571:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6574:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6574:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6564:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6564:6:11"
																},
																"nativeSrc": "6564:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6564:15:11"
															},
															"nativeSrc": "6564:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6564:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6595:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6595:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6598:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6598:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6588:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6588:6:11"
																},
																"nativeSrc": "6588:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6588:15:11"
															},
															"nativeSrc": "6588:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6588:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6429:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "6429:180:11"
											},
											{
												"body": {
													"nativeSrc": "6666:51:11",
													"nodeType": "YulBlock",
													"src": "6666:51:11",
													"statements": [
														{
															"nativeSrc": "6676:34:11",
															"nodeType": "YulAssignment",
															"src": "6676:34:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6701:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6701:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6704:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6704:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6697:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:11"
																},
																"nativeSrc": "6697:13:11",
																"nodeType": "YulFunctionCall",
																"src": "6697:13:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6676:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "6676:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6615:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6647:5:11",
														"nodeType": "YulTypedName",
														"src": "6647:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6657:8:11",
														"nodeType": "YulTypedName",
														"src": "6657:8:11",
														"type": ""
													}
												],
												"src": "6615:102:11"
											},
											{
												"body": {
													"nativeSrc": "6796:775:11",
													"nodeType": "YulBlock",
													"src": "6796:775:11",
													"statements": [
														{
															"nativeSrc": "6806:15:11",
															"nodeType": "YulAssignment",
															"src": "6806:15:11",
															"value": {
																"name": "_power",
																"nativeSrc": "6815:6:11",
																"nodeType": "YulIdentifier",
																"src": "6815:6:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6806:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6806:5:11"
																}
															]
														},
														{
															"nativeSrc": "6830:14:11",
															"nodeType": "YulAssignment",
															"src": "6830:14:11",
															"value": {
																"name": "_base",
																"nativeSrc": "6839:5:11",
																"nodeType": "YulIdentifier",
																"src": "6839:5:11"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6830:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6830:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6888:677:11",
																"nodeType": "YulBlock",
																"src": "6888:677:11",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "6976:22:11",
																			"nodeType": "YulBlock",
																			"src": "6976:22:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6978:16:11",
																							"nodeType": "YulIdentifier",
																							"src": "6978:16:11"
																						},
																						"nativeSrc": "6978:18:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6978:18:11"
																					},
																					"nativeSrc": "6978:18:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "6978:18:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6954:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "6954:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "6964:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6964:3:11"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "6969:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "6969:4:11"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6960:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "6960:3:11"
																					},
																					"nativeSrc": "6960:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6960:14:11"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6951:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "6951:2:11"
																			},
																			"nativeSrc": "6951:24:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6951:24:11"
																		},
																		"nativeSrc": "6948:50:11",
																		"nodeType": "YulIf",
																		"src": "6948:50:11"
																	},
																	{
																		"body": {
																			"nativeSrc": "7043:419:11",
																			"nodeType": "YulBlock",
																			"src": "7043:419:11",
																			"statements": [
																				{
																					"nativeSrc": "7423:25:11",
																					"nodeType": "YulAssignment",
																					"src": "7423:25:11",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7436:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "7436:5:11"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7443:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "7443:4:11"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7432:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "7432:3:11"
																						},
																						"nativeSrc": "7432:16:11",
																						"nodeType": "YulFunctionCall",
																						"src": "7432:16:11"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7423:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "7423:5:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7018:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "7018:8:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7028:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7028:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7014:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "7014:3:11"
																			},
																			"nativeSrc": "7014:16:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7014:16:11"
																		},
																		"nativeSrc": "7011:451:11",
																		"nodeType": "YulIf",
																		"src": "7011:451:11"
																	},
																	{
																		"nativeSrc": "7475:23:11",
																		"nodeType": "YulAssignment",
																		"src": "7475:23:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7487:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "7487:4:11"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7493:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "7493:4:11"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7483:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "7483:3:11"
																			},
																			"nativeSrc": "7483:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7483:15:11"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7475:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7475:4:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7511:44:11",
																		"nodeType": "YulAssignment",
																		"src": "7511:44:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7546:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "7546:8:11"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7523:22:11",
																				"nodeType": "YulIdentifier",
																				"src": "7523:22:11"
																			},
																			"nativeSrc": "7523:32:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7523:32:11"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7511:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "7511:8:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6864:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "6864:8:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6874:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6874:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6861:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6861:2:11"
																},
																"nativeSrc": "6861:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6861:15:11"
															},
															"nativeSrc": "6853:712:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6877:2:11",
																"nodeType": "YulBlock",
																"src": "6877:2:11",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6857:3:11",
																"nodeType": "YulBlock",
																"src": "6857:3:11",
																"statements": []
															},
															"src": "6853:712:11"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "6723:848:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "6751:6:11",
														"nodeType": "YulTypedName",
														"src": "6751:6:11",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "6759:5:11",
														"nodeType": "YulTypedName",
														"src": "6759:5:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6766:8:11",
														"nodeType": "YulTypedName",
														"src": "6766:8:11",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6776:3:11",
														"nodeType": "YulTypedName",
														"src": "6776:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6784:5:11",
														"nodeType": "YulTypedName",
														"src": "6784:5:11",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "6791:4:11",
														"nodeType": "YulTypedName",
														"src": "6791:4:11",
														"type": ""
													}
												],
												"src": "6723:848:11"
											},
											{
												"body": {
													"nativeSrc": "7637:1013:11",
													"nodeType": "YulBlock",
													"src": "7637:1013:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7832:20:11",
																"nodeType": "YulBlock",
																"src": "7832:20:11",
																"statements": [
																	{
																		"nativeSrc": "7834:10:11",
																		"nodeType": "YulAssignment",
																		"src": "7834:10:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7843:1:11",
																			"nodeType": "YulLiteral",
																			"src": "7843:1:11",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7834:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7834:5:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7845:5:11",
																		"nodeType": "YulLeave",
																		"src": "7845:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7822:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "7822:8:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7815:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7815:6:11"
																},
																"nativeSrc": "7815:16:11",
																"nodeType": "YulFunctionCall",
																"src": "7815:16:11"
															},
															"nativeSrc": "7812:40:11",
															"nodeType": "YulIf",
															"src": "7812:40:11"
														},
														{
															"body": {
																"nativeSrc": "7877:20:11",
																"nodeType": "YulBlock",
																"src": "7877:20:11",
																"statements": [
																	{
																		"nativeSrc": "7879:10:11",
																		"nodeType": "YulAssignment",
																		"src": "7879:10:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7888:1:11",
																			"nodeType": "YulLiteral",
																			"src": "7888:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7879:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7879:5:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7890:5:11",
																		"nodeType": "YulLeave",
																		"src": "7890:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7871:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7871:4:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7864:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7864:6:11"
																},
																"nativeSrc": "7864:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7864:12:11"
															},
															"nativeSrc": "7861:36:11",
															"nodeType": "YulIf",
															"src": "7861:36:11"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8007:20:11",
																		"nodeType": "YulBlock",
																		"src": "8007:20:11",
																		"statements": [
																			{
																				"nativeSrc": "8009:10:11",
																				"nodeType": "YulAssignment",
																				"src": "8009:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8018:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8018:1:11",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8009:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "8009:5:11"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8020:5:11",
																				"nodeType": "YulLeave",
																				"src": "8020:5:11"
																			}
																		]
																	},
																	"nativeSrc": "8000:27:11",
																	"nodeType": "YulCase",
																	"src": "8000:27:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8005:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8005:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8051:176:11",
																		"nodeType": "YulBlock",
																		"src": "8051:176:11",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8086:22:11",
																					"nodeType": "YulBlock",
																					"src": "8086:22:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8088:16:11",
																									"nodeType": "YulIdentifier",
																									"src": "8088:16:11"
																								},
																								"nativeSrc": "8088:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8088:18:11"
																							},
																							"nativeSrc": "8088:18:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "8088:18:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8071:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "8071:8:11"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8081:3:11",
																							"nodeType": "YulLiteral",
																							"src": "8081:3:11",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8068:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "8068:2:11"
																					},
																					"nativeSrc": "8068:17:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8068:17:11"
																				},
																				"nativeSrc": "8065:43:11",
																				"nodeType": "YulIf",
																				"src": "8065:43:11"
																			},
																			{
																				"nativeSrc": "8121:25:11",
																				"nodeType": "YulAssignment",
																				"src": "8121:25:11",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8134:1:11",
																							"nodeType": "YulLiteral",
																							"src": "8134:1:11",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8137:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "8137:8:11"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8130:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "8130:3:11"
																					},
																					"nativeSrc": "8130:16:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:11"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8121:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "8121:5:11"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8177:22:11",
																					"nodeType": "YulBlock",
																					"src": "8177:22:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8179:16:11",
																									"nodeType": "YulIdentifier",
																									"src": "8179:16:11"
																								},
																								"nativeSrc": "8179:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8179:18:11"
																							},
																							"nativeSrc": "8179:18:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "8179:18:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8165:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "8165:5:11"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8172:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "8172:3:11"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8162:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "8162:2:11"
																					},
																					"nativeSrc": "8162:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8162:14:11"
																				},
																				"nativeSrc": "8159:40:11",
																				"nodeType": "YulIf",
																				"src": "8159:40:11"
																			},
																			{
																				"nativeSrc": "8212:5:11",
																				"nodeType": "YulLeave",
																				"src": "8212:5:11"
																			}
																		]
																	},
																	"nativeSrc": "8036:191:11",
																	"nodeType": "YulCase",
																	"src": "8036:191:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8041:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8041:1:11",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "7957:4:11",
																"nodeType": "YulIdentifier",
																"src": "7957:4:11"
															},
															"nativeSrc": "7950:277:11",
															"nodeType": "YulSwitch",
															"src": "7950:277:11"
														},
														{
															"body": {
																"nativeSrc": "8359:123:11",
																"nodeType": "YulBlock",
																"src": "8359:123:11",
																"statements": [
																	{
																		"nativeSrc": "8373:28:11",
																		"nodeType": "YulAssignment",
																		"src": "8373:28:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8386:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "8386:4:11"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8392:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "8392:8:11"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8382:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8382:3:11"
																			},
																			"nativeSrc": "8382:19:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8382:19:11"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8373:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "8373:5:11"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8432:22:11",
																			"nodeType": "YulBlock",
																			"src": "8432:22:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8434:16:11",
																							"nodeType": "YulIdentifier",
																							"src": "8434:16:11"
																						},
																						"nativeSrc": "8434:18:11",
																						"nodeType": "YulFunctionCall",
																						"src": "8434:18:11"
																					},
																					"nativeSrc": "8434:18:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "8434:18:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8420:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "8420:5:11"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8427:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8427:3:11"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8417:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "8417:2:11"
																			},
																			"nativeSrc": "8417:14:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8417:14:11"
																		},
																		"nativeSrc": "8414:40:11",
																		"nodeType": "YulIf",
																		"src": "8414:40:11"
																	},
																	{
																		"nativeSrc": "8467:5:11",
																		"nodeType": "YulLeave",
																		"src": "8467:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8262:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "8262:4:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8268:2:11",
																						"nodeType": "YulLiteral",
																						"src": "8268:2:11",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8259:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "8259:2:11"
																				},
																				"nativeSrc": "8259:12:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8259:12:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8276:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "8276:8:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8286:2:11",
																						"nodeType": "YulLiteral",
																						"src": "8286:2:11",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8273:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "8273:2:11"
																				},
																				"nativeSrc": "8273:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8273:16:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8255:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8255:3:11"
																		},
																		"nativeSrc": "8255:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8255:35:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8311:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "8311:4:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8317:3:11",
																						"nodeType": "YulLiteral",
																						"src": "8317:3:11",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8308:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "8308:2:11"
																				},
																				"nativeSrc": "8308:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8308:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8326:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "8326:8:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8336:2:11",
																						"nodeType": "YulLiteral",
																						"src": "8336:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8323:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "8323:2:11"
																				},
																				"nativeSrc": "8323:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8323:16:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8304:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8304:3:11"
																		},
																		"nativeSrc": "8304:36:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8304:36:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8239:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8239:2:11"
																},
																"nativeSrc": "8239:111:11",
																"nodeType": "YulFunctionCall",
																"src": "8239:111:11"
															},
															"nativeSrc": "8236:246:11",
															"nodeType": "YulIf",
															"src": "8236:246:11"
														},
														{
															"nativeSrc": "8492:57:11",
															"nodeType": "YulAssignment",
															"src": "8492:57:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8526:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8526:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8529:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8529:4:11"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8535:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "8535:8:11"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8545:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8545:3:11"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8507:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "8507:18:11"
																},
																"nativeSrc": "8507:42:11",
																"nodeType": "YulFunctionCall",
																"src": "8507:42:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8492:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8492:5:11"
																},
																{
																	"name": "base",
																	"nativeSrc": "8499:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8499:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8588:22:11",
																"nodeType": "YulBlock",
																"src": "8588:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8590:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8590:16:11"
																			},
																			"nativeSrc": "8590:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8590:18:11"
																		},
																		"nativeSrc": "8590:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8590:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8565:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8565:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8576:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8576:3:11"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8581:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "8581:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8572:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8572:3:11"
																		},
																		"nativeSrc": "8572:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8572:14:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8562:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8562:2:11"
																},
																"nativeSrc": "8562:25:11",
																"nodeType": "YulFunctionCall",
																"src": "8562:25:11"
															},
															"nativeSrc": "8559:51:11",
															"nodeType": "YulIf",
															"src": "8559:51:11"
														},
														{
															"nativeSrc": "8619:25:11",
															"nodeType": "YulAssignment",
															"src": "8619:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8632:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8632:5:11"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8639:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8639:4:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8628:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8628:3:11"
																},
																"nativeSrc": "8628:16:11",
																"nodeType": "YulFunctionCall",
																"src": "8628:16:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8619:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8619:5:11"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7577:1073:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7607:4:11",
														"nodeType": "YulTypedName",
														"src": "7607:4:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7613:8:11",
														"nodeType": "YulTypedName",
														"src": "7613:8:11",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7623:3:11",
														"nodeType": "YulTypedName",
														"src": "7623:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7631:5:11",
														"nodeType": "YulTypedName",
														"src": "7631:5:11",
														"type": ""
													}
												],
												"src": "7577:1073:11"
											},
											{
												"body": {
													"nativeSrc": "8699:43:11",
													"nodeType": "YulBlock",
													"src": "8699:43:11",
													"statements": [
														{
															"nativeSrc": "8709:27:11",
															"nodeType": "YulAssignment",
															"src": "8709:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8724:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8724:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8731:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8731:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8720:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8720:3:11"
																},
																"nativeSrc": "8720:16:11",
																"nodeType": "YulFunctionCall",
																"src": "8720:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8709:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "8709:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "8656:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8681:5:11",
														"nodeType": "YulTypedName",
														"src": "8681:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8691:7:11",
														"nodeType": "YulTypedName",
														"src": "8691:7:11",
														"type": ""
													}
												],
												"src": "8656:86:11"
											},
											{
												"body": {
													"nativeSrc": "8812:217:11",
													"nodeType": "YulBlock",
													"src": "8812:217:11",
													"statements": [
														{
															"nativeSrc": "8822:31:11",
															"nodeType": "YulAssignment",
															"src": "8822:31:11",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8848:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8848:4:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8830:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "8830:17:11"
																},
																"nativeSrc": "8830:23:11",
																"nodeType": "YulFunctionCall",
																"src": "8830:23:11"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8822:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8822:4:11"
																}
															]
														},
														{
															"nativeSrc": "8862:37:11",
															"nodeType": "YulAssignment",
															"src": "8862:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8890:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "8890:8:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "8874:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "8874:15:11"
																},
																"nativeSrc": "8874:25:11",
																"nodeType": "YulFunctionCall",
																"src": "8874:25:11"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "8862:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "8862:8:11"
																}
															]
														},
														{
															"nativeSrc": "8909:113:11",
															"nodeType": "YulAssignment",
															"src": "8909:113:11",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8939:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8939:4:11"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8945:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "8945:8:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8955:66:11",
																		"nodeType": "YulLiteral",
																		"src": "8955:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "8918:20:11",
																	"nodeType": "YulIdentifier",
																	"src": "8918:20:11"
																},
																"nativeSrc": "8918:104:11",
																"nodeType": "YulFunctionCall",
																"src": "8918:104:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8909:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8909:5:11"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "8748:281:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8787:4:11",
														"nodeType": "YulTypedName",
														"src": "8787:4:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8793:8:11",
														"nodeType": "YulTypedName",
														"src": "8793:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8806:5:11",
														"nodeType": "YulTypedName",
														"src": "8806:5:11",
														"type": ""
													}
												],
												"src": "8748:281:11"
											},
											{
												"body": {
													"nativeSrc": "9083:362:11",
													"nodeType": "YulBlock",
													"src": "9083:362:11",
													"statements": [
														{
															"nativeSrc": "9093:25:11",
															"nodeType": "YulAssignment",
															"src": "9093:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9116:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9116:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9098:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9098:17:11"
																},
																"nativeSrc": "9098:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9098:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9093:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9093:1:11"
																}
															]
														},
														{
															"nativeSrc": "9127:25:11",
															"nodeType": "YulAssignment",
															"src": "9127:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9150:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9150:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9132:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9132:17:11"
																},
																"nativeSrc": "9132:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9132:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9127:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9127:1:11"
																}
															]
														},
														{
															"nativeSrc": "9161:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "9161:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9184:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9184:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9187:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9187:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9180:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9180:3:11"
																},
																"nativeSrc": "9180:9:11",
																"nodeType": "YulFunctionCall",
																"src": "9180:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9165:11:11",
																	"nodeType": "YulTypedName",
																	"src": "9165:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9198:41:11",
															"nodeType": "YulAssignment",
															"src": "9198:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9227:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "9227:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9209:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9209:17:11"
																},
																"nativeSrc": "9209:30:11",
																"nodeType": "YulFunctionCall",
																"src": "9209:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9198:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "9198:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9416:22:11",
																"nodeType": "YulBlock",
																"src": "9416:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9418:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "9418:16:11"
																			},
																			"nativeSrc": "9418:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9418:18:11"
																		},
																		"nativeSrc": "9418:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9418:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9349:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "9349:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9342:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "9342:6:11"
																				},
																				"nativeSrc": "9342:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9342:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9372:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "9372:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9379:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "9379:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9388:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "9388:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9375:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9375:3:11"
																						},
																						"nativeSrc": "9375:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9375:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9369:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "9369:2:11"
																				},
																				"nativeSrc": "9369:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9369:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9322:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "9322:2:11"
																		},
																		"nativeSrc": "9322:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9322:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9302:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9302:6:11"
																},
																"nativeSrc": "9302:113:11",
																"nodeType": "YulFunctionCall",
																"src": "9302:113:11"
															},
															"nativeSrc": "9299:139:11",
															"nodeType": "YulIf",
															"src": "9299:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9035:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9066:1:11",
														"nodeType": "YulTypedName",
														"src": "9066:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9069:1:11",
														"nodeType": "YulTypedName",
														"src": "9069:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9075:7:11",
														"nodeType": "YulTypedName",
														"src": "9075:7:11",
														"type": ""
													}
												],
												"src": "9035:410:11"
											},
											{
												"body": {
													"nativeSrc": "9479:152:11",
													"nodeType": "YulBlock",
													"src": "9479:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9496:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9496:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9499:77:11",
																		"nodeType": "YulLiteral",
																		"src": "9499:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9489:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9489:6:11"
																},
																"nativeSrc": "9489:88:11",
																"nodeType": "YulFunctionCall",
																"src": "9489:88:11"
															},
															"nativeSrc": "9489:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "9489:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9593:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9593:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9596:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9596:4:11",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9586:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9586:6:11"
																},
																"nativeSrc": "9586:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9586:15:11"
															},
															"nativeSrc": "9586:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9586:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9617:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9617:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9620:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9620:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9610:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9610:6:11"
																},
																"nativeSrc": "9610:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9610:15:11"
															},
															"nativeSrc": "9610:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9610:15:11"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "9451:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "9451:180:11"
											},
											{
												"body": {
													"nativeSrc": "9702:53:11",
													"nodeType": "YulBlock",
													"src": "9702:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9719:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9719:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9742:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "9742:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9724:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "9724:17:11"
																		},
																		"nativeSrc": "9724:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9724:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9712:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9712:6:11"
																},
																"nativeSrc": "9712:37:11",
																"nodeType": "YulFunctionCall",
																"src": "9712:37:11"
															},
															"nativeSrc": "9712:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "9712:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9637:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9690:5:11",
														"nodeType": "YulTypedName",
														"src": "9690:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9697:3:11",
														"nodeType": "YulTypedName",
														"src": "9697:3:11",
														"type": ""
													}
												],
												"src": "9637:118:11"
											},
											{
												"body": {
													"nativeSrc": "9859:124:11",
													"nodeType": "YulBlock",
													"src": "9859:124:11",
													"statements": [
														{
															"nativeSrc": "9869:26:11",
															"nodeType": "YulAssignment",
															"src": "9869:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9881:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9881:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9892:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9892:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9877:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9877:3:11"
																},
																"nativeSrc": "9877:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9877:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9869:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9869:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9949:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9949:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9962:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9962:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9973:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9973:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9958:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9958:3:11"
																		},
																		"nativeSrc": "9958:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9958:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9905:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9905:43:11"
																},
																"nativeSrc": "9905:71:11",
																"nodeType": "YulFunctionCall",
																"src": "9905:71:11"
															},
															"nativeSrc": "9905:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "9905:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9761:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9831:9:11",
														"nodeType": "YulTypedName",
														"src": "9831:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9843:6:11",
														"nodeType": "YulTypedName",
														"src": "9843:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9854:4:11",
														"nodeType": "YulTypedName",
														"src": "9854:4:11",
														"type": ""
													}
												],
												"src": "9761:222:11"
											},
											{
												"body": {
													"nativeSrc": "10033:147:11",
													"nodeType": "YulBlock",
													"src": "10033:147:11",
													"statements": [
														{
															"nativeSrc": "10043:25:11",
															"nodeType": "YulAssignment",
															"src": "10043:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10066:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10066:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10048:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10048:17:11"
																},
																"nativeSrc": "10048:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10048:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10043:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10043:1:11"
																}
															]
														},
														{
															"nativeSrc": "10077:25:11",
															"nodeType": "YulAssignment",
															"src": "10077:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10100:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10100:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10082:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10082:17:11"
																},
																"nativeSrc": "10082:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10082:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10077:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10077:1:11"
																}
															]
														},
														{
															"nativeSrc": "10111:16:11",
															"nodeType": "YulAssignment",
															"src": "10111:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10122:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10122:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10125:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10125:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10118:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10118:3:11"
																},
																"nativeSrc": "10118:9:11",
																"nodeType": "YulFunctionCall",
																"src": "10118:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10111:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10111:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10151:22:11",
																"nodeType": "YulBlock",
																"src": "10151:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10153:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10153:16:11"
																			},
																			"nativeSrc": "10153:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10153:18:11"
																		},
																		"nativeSrc": "10153:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10153:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10143:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10143:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10146:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10146:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10140:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10140:2:11"
																},
																"nativeSrc": "10140:10:11",
																"nodeType": "YulFunctionCall",
																"src": "10140:10:11"
															},
															"nativeSrc": "10137:36:11",
															"nodeType": "YulIf",
															"src": "10137:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9989:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10020:1:11",
														"nodeType": "YulTypedName",
														"src": "10020:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10023:1:11",
														"nodeType": "YulTypedName",
														"src": "10023:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10029:3:11",
														"nodeType": "YulTypedName",
														"src": "10029:3:11",
														"type": ""
													}
												],
												"src": "9989:191:11"
											},
											{
												"body": {
													"nativeSrc": "10251:53:11",
													"nodeType": "YulBlock",
													"src": "10251:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10268:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10268:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10291:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "10291:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10273:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "10273:17:11"
																		},
																		"nativeSrc": "10273:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10273:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10261:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10261:6:11"
																},
																"nativeSrc": "10261:37:11",
																"nodeType": "YulFunctionCall",
																"src": "10261:37:11"
															},
															"nativeSrc": "10261:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "10261:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10186:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10239:5:11",
														"nodeType": "YulTypedName",
														"src": "10239:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10246:3:11",
														"nodeType": "YulTypedName",
														"src": "10246:3:11",
														"type": ""
													}
												],
												"src": "10186:118:11"
											},
											{
												"body": {
													"nativeSrc": "10464:288:11",
													"nodeType": "YulBlock",
													"src": "10464:288:11",
													"statements": [
														{
															"nativeSrc": "10474:26:11",
															"nodeType": "YulAssignment",
															"src": "10474:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10486:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10486:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10497:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10497:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10482:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10482:3:11"
																},
																"nativeSrc": "10482:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10482:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10474:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10474:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10554:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10554:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10567:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10567:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10578:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10578:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10563:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10563:3:11"
																		},
																		"nativeSrc": "10563:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10563:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10510:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10510:43:11"
																},
																"nativeSrc": "10510:71:11",
																"nodeType": "YulFunctionCall",
																"src": "10510:71:11"
															},
															"nativeSrc": "10510:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "10510:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10635:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10635:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10648:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10648:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10659:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10659:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10644:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10644:3:11"
																		},
																		"nativeSrc": "10644:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10644:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10591:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10591:43:11"
																},
																"nativeSrc": "10591:72:11",
																"nodeType": "YulFunctionCall",
																"src": "10591:72:11"
															},
															"nativeSrc": "10591:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "10591:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10717:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10717:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10730:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10730:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10741:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10741:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10726:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10726:3:11"
																		},
																		"nativeSrc": "10726:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10726:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10673:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10673:43:11"
																},
																"nativeSrc": "10673:72:11",
																"nodeType": "YulFunctionCall",
																"src": "10673:72:11"
															},
															"nativeSrc": "10673:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "10673:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10310:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10420:9:11",
														"nodeType": "YulTypedName",
														"src": "10420:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10432:6:11",
														"nodeType": "YulTypedName",
														"src": "10432:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10440:6:11",
														"nodeType": "YulTypedName",
														"src": "10440:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10448:6:11",
														"nodeType": "YulTypedName",
														"src": "10448:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10459:4:11",
														"nodeType": "YulTypedName",
														"src": "10459:4:11",
														"type": ""
													}
												],
												"src": "10310:442:11"
											},
											{
												"body": {
													"nativeSrc": "10856:124:11",
													"nodeType": "YulBlock",
													"src": "10856:124:11",
													"statements": [
														{
															"nativeSrc": "10866:26:11",
															"nodeType": "YulAssignment",
															"src": "10866:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10878:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10878:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10889:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10889:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10874:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10874:3:11"
																},
																"nativeSrc": "10874:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10874:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10866:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10866:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10946:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10946:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10959:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10959:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10970:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10970:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10955:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10955:3:11"
																		},
																		"nativeSrc": "10955:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10955:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10902:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10902:43:11"
																},
																"nativeSrc": "10902:71:11",
																"nodeType": "YulFunctionCall",
																"src": "10902:71:11"
															},
															"nativeSrc": "10902:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "10902:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10758:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10828:9:11",
														"nodeType": "YulTypedName",
														"src": "10828:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10840:6:11",
														"nodeType": "YulTypedName",
														"src": "10840:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10851:4:11",
														"nodeType": "YulTypedName",
														"src": "10851:4:11",
														"type": ""
													}
												],
												"src": "10758:222:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161340f38038061340f833981810160405281019061003191906106a5565b6040518060400160405280600881526020017f47796d546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f47594d000000000000000000000000000000000000000000000000000000000081525081600390816100ac919061090d565b5080600490816100bc919061090d565b5050505f60055f6101000a81548160ff0219169083151502179055506100ea5f5f1b8261024860201b60201c565b5061011b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b088261024860201b60201c565b506002600a61012a9190610b44565b60326101369190610b8e565b60075f5f600281111561014c5761014b610bcf565b5b600281111561015e5761015d610bcf565b5b81526020019081526020015f20819055506002600a61017d9190610b44565b608c6101899190610b8e565b60075f600160028111156101a05761019f610bcf565b5b60028111156101b2576101b1610bcf565b5b81526020019081526020015f20819055506002600a6101d19190610b44565b6101f46101de9190610b8e565b60075f6002808111156101f4576101f3610bcf565b5b600281111561020657610205610bcf565b5b81526020019081526020015f2081905550610242816002600a6102299190610b44565b620f42406102379190610b8e565b61033e60201b60201c565b50610cb4565b5f61025983836103c360201b60201c565b61033457600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506102d161042760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610338565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103ae575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103a59190610c0b565b60405180910390fd5b6103bf5f838361042e60201b60201c565b5050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361047e578060025f8282546104729190610c24565b9250508190555061054c565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610507578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104fe93929190610c66565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610593578060025f82825403925050819055506105dd565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161063a9190610c9b565b60405180910390a3505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106748261064b565b9050919050565b6106848161066a565b811461068e575f5ffd5b50565b5f8151905061069f8161067b565b92915050565b5f602082840312156106ba576106b9610647565b5b5f6106c784828501610691565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061074b57607f821691505b60208210810361075e5761075d610707565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610785565b6107ca8683610785565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61080e610809610804846107e2565b6107eb565b6107e2565b9050919050565b5f819050919050565b610827836107f4565b61083b61083382610815565b848454610791565b825550505050565b5f5f905090565b610852610843565b61085d81848461081e565b505050565b5b81811015610880576108755f8261084a565b600181019050610863565b5050565b601f8211156108c55761089681610764565b61089f84610776565b810160208510156108ae578190505b6108c26108ba85610776565b830182610862565b50505b505050565b5f82821c905092915050565b5f6108e55f19846008026108ca565b1980831691505092915050565b5f6108fd83836108d6565b9150826002028217905092915050565b610916826106d0565b67ffffffffffffffff81111561092f5761092e6106da565b5b6109398254610734565b610944828285610884565b5f60209050601f831160018114610975575f8415610963578287015190505b61096d85826108f2565b8655506109d4565b601f19841661098386610764565b5f5b828110156109aa57848901518255600182019150602085019450602081019050610985565b868310156109c757848901516109c3601f8916826108d6565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610a5e57808604811115610a3a57610a396109dc565b5b6001851615610a495780820291505b8081029050610a5785610a09565b9450610a1e565b94509492505050565b5f82610a765760019050610b31565b81610a83575f9050610b31565b8160018114610a995760028114610aa357610ad2565b6001915050610b31565b60ff841115610ab557610ab46109dc565b5b8360020a915084821115610acc57610acb6109dc565b5b50610b31565b5060208310610133831016604e8410600b8410161715610b075782820a905083811115610b0257610b016109dc565b5b610b31565b610b148484846001610a15565b92509050818404811115610b2b57610b2a6109dc565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610b4e826107e2565b9150610b5983610b38565b9250610b867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610a67565b905092915050565b5f610b98826107e2565b9150610ba3836107e2565b9250828202610bb1816107e2565b91508282048414831517610bc857610bc76109dc565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b610c058161066a565b82525050565b5f602082019050610c1e5f830184610bfc565b92915050565b5f610c2e826107e2565b9150610c39836107e2565b9250828201905080821115610c5157610c506109dc565b5b92915050565b610c60816107e2565b82525050565b5f606082019050610c795f830186610bfc565b610c866020830185610c57565b610c936040830184610c57565b949350505050565b5f602082019050610cae5f830184610c57565b92915050565b61274e80610cc15f395ff3fe608060405234801561000f575f5ffd5b50600436106101f9575f3560e01c806376809ce311610118578063a217fddf116100ab578063b46948761161007a578063b4694876146105b5578063d547741f146105e5578063dd62ed3e14610601578063ea4bbaf414610631578063ec87621c14610661576101f9565b8063a217fddf1461052d578063a61b93cc1461054b578063a683dfab14610569578063a9059cbb14610585576101f9565b80638621026a116100e75780638621026a1461049157806391d14854146104c157806395d89b41146104f1578063a10f469e1461050f576101f9565b806376809ce31461042d5780638456cb591461044b57806384a3a0f31461045557806385290fa114610473576101f9565b80632f2ff15d116101905780633f4ba83a1161015f5780633f4ba83a146103a55780634b6e2331146103af5780635c975abb146103df57806370a08231146103fd576101f9565b80632f2ff15d146103315780632ff2e9dc1461034d578063313ce5671461036b57806336568abe14610389576101f9565b806318160ddd116101cc57806318160ddd1461029757806323b872dd146102b5578063248a9ca3146102e5578063265a5eea14610315576101f9565b806301ffc9a7146101fd57806306fdde031461022d578063095ea7b31461024b5780630ca2a4001461027b575b5f5ffd5b61021760048036038101906102129190611d00565b61067f565b6040516102249190611d45565b60405180910390f35b6102356106f8565b6040516102429190611dce565b60405180910390f35b61026560048036038101906102609190611e7b565b610788565b6040516102729190611d45565b60405180910390f35b61029560048036038101906102909190611e7b565b6107aa565b005b61029f610837565b6040516102ac9190611ec8565b60405180910390f35b6102cf60048036038101906102ca9190611ee1565b610840565b6040516102dc9190611d45565b60405180910390f35b6102ff60048036038101906102fa9190611f64565b61086e565b60405161030c9190611f9e565b60405180910390f35b61032f600480360381019061032a9190611fda565b61088b565b005b61034b60048036038101906103469190612005565b610bac565b005b610355610bce565b6040516103629190611ec8565b60405180910390f35b610373610bed565b604051610380919061205e565b60405180910390f35b6103a3600480360381019061039e9190612005565b610bf5565b005b6103ad610c70565b005b6103c960048036038101906103c49190611fda565b610ca5565b6040516103d69190611ec8565b60405180910390f35b6103e7610cba565b6040516103f49190611d45565b60405180910390f35b61041760048036038101906104129190612077565b610ccf565b6040516104249190611ec8565b60405180910390f35b610435610d14565b604051610442919061205e565b60405180910390f35b610453610d19565b005b61045d610d4e565b60405161046a9190611ec8565b60405180910390f35b61047b610d6b565b6040516104889190611f9e565b60405180910390f35b6104ab60048036038101906104a69190612077565b610d8f565b6040516104b89190611ec8565b60405180910390f35b6104db60048036038101906104d69190612005565b610e2d565b6040516104e89190611d45565b60405180910390f35b6104f9610e91565b6040516105069190611dce565b60405180910390f35b610517610f21565b6040516105249190611f9e565b60405180910390f35b610535610f45565b6040516105429190611f9e565b60405180910390f35b610553610f4b565b6040516105609190611f9e565b60405180910390f35b610583600480360381019061057e9190612077565b610f6f565b005b61059f600480360381019061059a9190611e7b565b61111a565b6040516105ac9190611d45565b60405180910390f35b6105cf60048036038101906105ca9190612077565b61113c565b6040516105dc9190611ec8565b60405180910390f35b6105ff60048036038101906105fa9190612005565b611151565b005b61061b600480360381019061061691906120a2565b611173565b6040516106289190611ec8565b60405180910390f35b61064b60048036038101906106469190612077565b6111f5565b6040516106589190611ec8565b60405180910390f35b61066961120a565b6040516106769190611f9e565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806106f157506106f08261122e565b5b9050919050565b6060600380546107079061210d565b80601f01602080910402602001604051908101604052809291908181526020018280546107339061210d565b801561077e5780601f106107555761010080835404028352916020019161077e565b820191905f5260205f20905b81548152906001019060200180831161076157829003601f168201915b5050505050905090565b5f5f610792611297565b905061079f81858561129e565b600191505092915050565b6107b26112b0565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b086107dc816112fa565b816107e633610ccf565b1015610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e90612187565b60405180910390fd5b61083233848461130e565b505050565b5f600254905090565b5f5f61084a611297565b90506108578582856113fe565b61086285858561130e565b60019150509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b6108936112b0565b6108bd7f829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d463633610e2d565b6108fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f3906121ef565b60405180910390fd5b5f60075f8360028111156109135761091261220d565b5b60028111156109255761092461220d565b5b81526020019081526020015f205490508061093f33610ccf565b1015610980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097790612187565b60405180910390fd5b61098a3382611490565b5f5f600281111561099e5761099d61220d565b5b8360028111156109b1576109b061220d565b5b036109c15762278d009050610a6c565b600160028111156109d5576109d461220d565b5b8360028111156109e8576109e761220d565b5b036109f8576276a7009050610a6b565b600280811115610a0b57610a0a61220d565b5b836002811115610a1e57610a1d61220d565b5b03610a2f576301e133809050610a6a565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6190612284565b60405180910390fd5b5b5b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054421015610b09578060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610afd91906122cf565b92505081905550610b57565b8042610b1591906122cf565b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b3373ffffffffffffffffffffffffffffffffffffffff167fe2c5b6420b508a46b55a5cb55c7340a67492866d4f51461ee443958079fe83578483604051610b9f929190612348565b60405180910390a2505050565b610bb58261086e565b610bbe816112fa565b610bc8838361150f565b50505050565b6002600a610bdc919061249e565b620f4240610bea91906124e8565b81565b5f6012905090565b610bfd611297565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c61576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c6b82826115f9565b505050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610c9a816112fa565b610ca26116e3565b50565b6007602052805f5260405f205f915090505481565b5f60055f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b600281565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610d43816112fa565b610d4b611744565b50565b6002600a610d5c919061249e565b600a610d6891906124e8565b81565b7f5620a1113a72b02a617976b3f6b15600dd7a8b3a916a9ca01e23119d989a054381565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20544210610ddc575f9050610e28565b4260085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610e259190612529565b90505b919050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610ea09061210d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ecc9061210d565b8015610f175780601f10610eee57610100808354040283529160200191610f17565b820191905f5260205f20905b815481529060010190602001808311610efa57829003601f168201915b5050505050905090565b7f829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d463681565b5f5f1b81565b7f123c69cc12368838cca6d46b7505bec842d9e85a26aff07e23aa57ad59dac6ba81565b610f776112b0565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610fa1816112fa565b60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20544210611020576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611017906125a6565b60405180910390fd5b6002600a61102e919061249e565b600a61103a91906124e8565b60095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461108591906122cf565b925050819055506110af826002600a61109e919061249e565b600a6110aa91906124e8565b6117a6565b8173ffffffffffffffffffffffffffffffffffffffff167fe02a129f98418d04669038a9874f706689ba7726c0c0e82c67319ec8ca9001ea6002600a6110f5919061249e565b600a61110191906124e8565b60405161110e9190611ec8565b60405180910390a25050565b5f5f611124611297565b905061113181858561130e565b600191505092915050565b6009602052805f5260405f205f915090505481565b61115a8261086e565b611163816112fa565b61116d83836115f9565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6008602052805f5260405f205f915090505481565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0881565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6112ab8383836001611825565b505050565b6112b8610cba565b156112f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ef9061260e565b60405180910390fd5b565b61130b81611306611297565b6119f4565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361137e575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611375919061263b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113ee575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113e5919061263b565b60405180910390fd5b6113f9838383611a45565b505050565b5f6114098484611173565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461148a578181101561147b578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161147293929190612654565b60405180910390fd5b61148984848484035f611825565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611500575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114f7919061263b565b60405180910390fd5b61150b825f83611a45565b5050565b5f61151a8383610e2d565b6115ef57600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061158c611297565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506115f3565b5f90505b92915050565b5f6116048383610e2d565b156116d9575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611676611297565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506116dd565b5f90505b92915050565b6116eb611c5e565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61172d611297565b60405161173a919061263b565b60405180910390a1565b61174c6112b0565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861178f611297565b60405161179c919061263b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611816575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161180d919061263b565b60405180910390fd5b6118215f8383611a45565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611895575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161188c919061263b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611905575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016118fc919061263b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156119ee578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516119e59190611ec8565b60405180910390a35b50505050565b6119fe8282610e2d565b611a415780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611a38929190612689565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a95578060025f828254611a8991906122cf565b92505081905550611b63565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611b1e578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611b1593929190612654565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611baa578060025f8282540392505081905550611bf4565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611c519190611ec8565b60405180910390a3505050565b611c66610cba565b611ca5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c9c906126fa565b60405180910390fd5b565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611cdf81611cab565b8114611ce9575f5ffd5b50565b5f81359050611cfa81611cd6565b92915050565b5f60208284031215611d1557611d14611ca7565b5b5f611d2284828501611cec565b91505092915050565b5f8115159050919050565b611d3f81611d2b565b82525050565b5f602082019050611d585f830184611d36565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611da082611d5e565b611daa8185611d68565b9350611dba818560208601611d78565b611dc381611d86565b840191505092915050565b5f6020820190508181035f830152611de68184611d96565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e1782611dee565b9050919050565b611e2781611e0d565b8114611e31575f5ffd5b50565b5f81359050611e4281611e1e565b92915050565b5f819050919050565b611e5a81611e48565b8114611e64575f5ffd5b50565b5f81359050611e7581611e51565b92915050565b5f5f60408385031215611e9157611e90611ca7565b5b5f611e9e85828601611e34565b9250506020611eaf85828601611e67565b9150509250929050565b611ec281611e48565b82525050565b5f602082019050611edb5f830184611eb9565b92915050565b5f5f5f60608486031215611ef857611ef7611ca7565b5b5f611f0586828701611e34565b9350506020611f1686828701611e34565b9250506040611f2786828701611e67565b9150509250925092565b5f819050919050565b611f4381611f31565b8114611f4d575f5ffd5b50565b5f81359050611f5e81611f3a565b92915050565b5f60208284031215611f7957611f78611ca7565b5b5f611f8684828501611f50565b91505092915050565b611f9881611f31565b82525050565b5f602082019050611fb15f830184611f8f565b92915050565b60038110611fc3575f5ffd5b50565b5f81359050611fd481611fb7565b92915050565b5f60208284031215611fef57611fee611ca7565b5b5f611ffc84828501611fc6565b91505092915050565b5f5f6040838503121561201b5761201a611ca7565b5b5f61202885828601611f50565b925050602061203985828601611e34565b9150509250929050565b5f60ff82169050919050565b61205881612043565b82525050565b5f6020820190506120715f83018461204f565b92915050565b5f6020828403121561208c5761208b611ca7565b5b5f61209984828501611e34565b91505092915050565b5f5f604083850312156120b8576120b7611ca7565b5b5f6120c585828601611e34565b92505060206120d685828601611e34565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061212457607f821691505b602082108103612137576121366120e0565b5b50919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f612171601483611d68565b915061217c8261213d565b602082019050919050565b5f6020820190508181035f83015261219e81612165565b9050919050565b7f43616c6c6572206973206e6f742061206d656d626572000000000000000000005f82015250565b5f6121d9601683611d68565b91506121e4826121a5565b602082019050919050565b5f6020820190508181035f830152612206816121cd565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f496e76616c6964206d656d6265727368697020747970650000000000000000005f82015250565b5f61226e601783611d68565b91506122798261223a565b602082019050919050565b5f6020820190508181035f83015261229b81612262565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122d982611e48565b91506122e483611e48565b92508282019050808211156122fc576122fb6122a2565b5b92915050565b600381106123135761231261220d565b5b50565b5f81905061232382612302565b919050565b5f61233282612316565b9050919050565b61234281612328565b82525050565b5f60408201905061235b5f830185612339565b6123686020830184611eb9565b9392505050565b5f8160011c9050919050565b5f5f8291508390505b60018511156123c4578086048111156123a05761239f6122a2565b5b60018516156123af5780820291505b80810290506123bd8561236f565b9450612384565b94509492505050565b5f826123dc5760019050612497565b816123e9575f9050612497565b81600181146123ff576002811461240957612438565b6001915050612497565b60ff84111561241b5761241a6122a2565b5b8360020a915084821115612432576124316122a2565b5b50612497565b5060208310610133831016604e8410600b841016171561246d5782820a905083811115612468576124676122a2565b5b612497565b61247a848484600161237b565b92509050818404811115612491576124906122a2565b5b81810290505b9392505050565b5f6124a882611e48565b91506124b383612043565b92506124e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846123cd565b905092915050565b5f6124f282611e48565b91506124fd83611e48565b925082820261250b81611e48565b91508282048414831517612522576125216122a2565b5b5092915050565b5f61253382611e48565b915061253e83611e48565b9250828203905081811115612556576125556122a2565b5b92915050565b7f5265666572726572206d656d62657273686970206578706972656400000000005f82015250565b5f612590601b83611d68565b915061259b8261255c565b602082019050919050565b5f6020820190508181035f8301526125bd81612584565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6125f8601083611d68565b9150612603826125c4565b602082019050919050565b5f6020820190508181035f830152612625816125ec565b9050919050565b61263581611e0d565b82525050565b5f60208201905061264e5f83018461262c565b92915050565b5f6060820190506126675f83018661262c565b6126746020830185611eb9565b6126816040830184611eb9565b949350505050565b5f60408201905061269c5f83018561262c565b6126a96020830184611f8f565b9392505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6126e4601483611d68565b91506126ef826126b0565b602082019050919050565b5f6020820190508181035f830152612711816126d8565b905091905056fea2646970667358221220efd26e149ae0f01f2e76854dbd775d5708059c092fe3346dbcc79dcf2836b12564736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x340F CODESIZE SUB DUP1 PUSH2 0x340F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x47796D546F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x47594D0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x90D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x90D JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xEA PUSH0 PUSH0 SHL DUP3 PUSH2 0x248 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x11B PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP3 PUSH2 0x248 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0xA PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x32 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x7 PUSH0 PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x14C JUMPI PUSH2 0x14B PUSH2 0xBCF JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15E JUMPI PUSH2 0x15D PUSH2 0xBCF JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0xA PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x8C PUSH2 0x189 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x7 PUSH0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A0 JUMPI PUSH2 0x19F PUSH2 0xBCF JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B2 JUMPI PUSH2 0x1B1 PUSH2 0xBCF JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0xA PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xB44 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x7 PUSH0 PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1F4 JUMPI PUSH2 0x1F3 PUSH2 0xBCF JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x206 JUMPI PUSH2 0x205 PUSH2 0xBCF JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x242 DUP2 PUSH1 0x2 PUSH1 0xA PUSH2 0x229 SWAP2 SWAP1 PUSH2 0xB44 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x33E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xCB4 JUMP JUMPDEST PUSH0 PUSH2 0x259 DUP4 DUP4 PUSH2 0x3C3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x334 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2D1 PUSH2 0x427 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x338 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3BF PUSH0 DUP4 DUP4 PUSH2 0x42E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x47E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0xC24 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x54C JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x507 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x593 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5DD JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x63A SWAP2 SWAP1 PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x674 DUP3 PUSH2 0x64B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x684 DUP2 PUSH2 0x66A JUMP JUMPDEST DUP2 EQ PUSH2 0x68E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x69F DUP2 PUSH2 0x67B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6BA JUMPI PUSH2 0x6B9 PUSH2 0x647 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6C7 DUP5 DUP3 DUP6 ADD PUSH2 0x691 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x74B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x75E JUMPI PUSH2 0x75D PUSH2 0x707 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x7C0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x7CA DUP7 DUP4 PUSH2 0x785 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x80E PUSH2 0x809 PUSH2 0x804 DUP5 PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x827 DUP4 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0x83B PUSH2 0x833 DUP3 PUSH2 0x815 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x791 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x852 PUSH2 0x843 JUMP JUMPDEST PUSH2 0x85D DUP2 DUP5 DUP5 PUSH2 0x81E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x880 JUMPI PUSH2 0x875 PUSH0 DUP3 PUSH2 0x84A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x863 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8C5 JUMPI PUSH2 0x896 DUP2 PUSH2 0x764 JUMP JUMPDEST PUSH2 0x89F DUP5 PUSH2 0x776 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8AE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x8C2 PUSH2 0x8BA DUP6 PUSH2 0x776 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x862 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8E5 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x8CA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8FD DUP4 DUP4 PUSH2 0x8D6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x916 DUP3 PUSH2 0x6D0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x92F JUMPI PUSH2 0x92E PUSH2 0x6DA JUMP JUMPDEST JUMPDEST PUSH2 0x939 DUP3 SLOAD PUSH2 0x734 JUMP JUMPDEST PUSH2 0x944 DUP3 DUP3 DUP6 PUSH2 0x884 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x975 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x963 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x96D DUP6 DUP3 PUSH2 0x8F2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x983 DUP7 PUSH2 0x764 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9AA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x985 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x9C7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x9C3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x8D6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xA5E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xA3A JUMPI PUSH2 0xA39 PUSH2 0x9DC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xA49 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xA57 DUP6 PUSH2 0xA09 JUMP JUMPDEST SWAP5 POP PUSH2 0xA1E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA76 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xB31 JUMP JUMPDEST DUP2 PUSH2 0xA83 JUMPI PUSH0 SWAP1 POP PUSH2 0xB31 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xA99 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xAA3 JUMPI PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xB31 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xAB5 JUMPI PUSH2 0xAB4 PUSH2 0x9DC JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xACC JUMPI PUSH2 0xACB PUSH2 0x9DC JUMP JUMPDEST JUMPDEST POP PUSH2 0xB31 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xB07 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xB02 JUMPI PUSH2 0xB01 PUSH2 0x9DC JUMP JUMPDEST JUMPDEST PUSH2 0xB31 JUMP JUMPDEST PUSH2 0xB14 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xA15 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xB2B JUMPI PUSH2 0xB2A PUSH2 0x9DC JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4E DUP3 PUSH2 0x7E2 JUMP JUMPDEST SWAP2 POP PUSH2 0xB59 DUP4 PUSH2 0xB38 JUMP JUMPDEST SWAP3 POP PUSH2 0xB86 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xA67 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB98 DUP3 PUSH2 0x7E2 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA3 DUP4 PUSH2 0x7E2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xBB1 DUP2 PUSH2 0x7E2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xBC8 JUMPI PUSH2 0xBC7 PUSH2 0x9DC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xC05 DUP2 PUSH2 0x66A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC1E PUSH0 DUP4 ADD DUP5 PUSH2 0xBFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC2E DUP3 PUSH2 0x7E2 JUMP JUMPDEST SWAP2 POP PUSH2 0xC39 DUP4 PUSH2 0x7E2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC51 JUMPI PUSH2 0xC50 PUSH2 0x9DC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC60 DUP2 PUSH2 0x7E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC79 PUSH0 DUP4 ADD DUP7 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0xC86 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC57 JUMP JUMPDEST PUSH2 0xC93 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC57 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCAE PUSH0 DUP4 ADD DUP5 PUSH2 0xC57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x274E DUP1 PUSH2 0xCC1 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76809CE3 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB4694876 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xB4694876 EQ PUSH2 0x5B5 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0xEA4BBAF4 EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xEC87621C EQ PUSH2 0x661 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0xA61B93CC EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xA683DFAB EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x585 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x8621026A GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8621026A EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xA10F469E EQ PUSH2 0x50F JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x76809CE3 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x84A3A0F3 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0x85290FA1 EQ PUSH2 0x473 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x190 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x15F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x4B6E2331 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3FD JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x389 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1CC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x265A5EEA EQ PUSH2 0x315 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xCA2A400 EQ PUSH2 0x27B JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29F PUSH2 0x837 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1FDA JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0xBAC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x355 PUSH2 0xBCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x205E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0xBF5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AD PUSH2 0xC70 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x1FDA JUMP JUMPDEST PUSH2 0xCA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E7 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x435 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x205E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x453 PUSH2 0xD19 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45D PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x488 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0xD8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F9 PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x517 PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x535 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x553 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0xF6F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH2 0x111A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0x113C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x1151 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x616 SWAP2 SWAP1 PUSH2 0x20A2 JUMP JUMPDEST PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0x11F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x669 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x676 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x6F1 JUMPI POP PUSH2 0x6F0 DUP3 PUSH2 0x122E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x707 SWAP1 PUSH2 0x210D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x733 SWAP1 PUSH2 0x210D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x77E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x755 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x77E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x761 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x792 PUSH2 0x1297 JUMP JUMPDEST SWAP1 POP PUSH2 0x79F DUP2 DUP6 DUP6 PUSH2 0x129E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7B2 PUSH2 0x12B0 JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x7DC DUP2 PUSH2 0x12FA JUMP JUMPDEST DUP2 PUSH2 0x7E6 CALLER PUSH2 0xCCF JUMP JUMPDEST LT ISZERO PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81E SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x832 CALLER DUP5 DUP5 PUSH2 0x130E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x84A PUSH2 0x1297 JUMP JUMPDEST SWAP1 POP PUSH2 0x857 DUP6 DUP3 DUP6 PUSH2 0x13FE JUMP JUMPDEST PUSH2 0x862 DUP6 DUP6 DUP6 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x893 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x8BD PUSH32 0x829B824E2329E205435D941C9F13BAF578548505283D29261236D8E6596D4636 CALLER PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x8FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F3 SWAP1 PUSH2 0x21EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x913 JUMPI PUSH2 0x912 PUSH2 0x220D JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x925 JUMPI PUSH2 0x924 PUSH2 0x220D JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0x93F CALLER PUSH2 0xCCF JUMP JUMPDEST LT ISZERO PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x977 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x98A CALLER DUP3 PUSH2 0x1490 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x99E JUMPI PUSH2 0x99D PUSH2 0x220D JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9B1 JUMPI PUSH2 0x9B0 PUSH2 0x220D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x9C1 JUMPI PUSH3 0x278D00 SWAP1 POP PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9D5 JUMPI PUSH2 0x9D4 PUSH2 0x220D JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9E8 JUMPI PUSH2 0x9E7 PUSH2 0x220D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x9F8 JUMPI PUSH3 0x76A700 SWAP1 POP PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xA0B JUMPI PUSH2 0xA0A PUSH2 0x220D JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA1E JUMPI PUSH2 0xA1D PUSH2 0x220D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xA2F JUMPI PUSH4 0x1E13380 SWAP1 POP PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0xB09 JUMPI DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB57 JUMP JUMPDEST DUP1 TIMESTAMP PUSH2 0xB15 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2C5B6420B508A46B55A5CB55C7340A67492866D4F51461EE443958079FE8357 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB9F SWAP3 SWAP2 SWAP1 PUSH2 0x2348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xBB5 DUP3 PUSH2 0x86E JUMP JUMPDEST PUSH2 0xBBE DUP2 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0xBC8 DUP4 DUP4 PUSH2 0x150F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0xA PUSH2 0xBDC SWAP2 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBFD PUSH2 0x1297 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6B DUP3 DUP3 PUSH2 0x15F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0xC9A DUP2 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0xCA2 PUSH2 0x16E3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0xD43 DUP2 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0xD4B PUSH2 0x1744 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0xA PUSH2 0xD5C SWAP2 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0xA PUSH2 0xD68 SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH32 0x5620A1113A72B02A617976B3F6B15600DD7A8B3A916A9CA01E23119D989A0543 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT PUSH2 0xDDC JUMPI PUSH0 SWAP1 POP PUSH2 0xE28 JUMP JUMPDEST TIMESTAMP PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xE25 SWAP2 SWAP1 PUSH2 0x2529 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xEA0 SWAP1 PUSH2 0x210D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xECC SWAP1 PUSH2 0x210D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF17 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEEE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF17 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEFA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x829B824E2329E205435D941C9F13BAF578548505283D29261236D8E6596D4636 DUP2 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH32 0x123C69CC12368838CCA6D46B7505BEC842D9E85A26AFF07E23AA57AD59DAC6BA DUP2 JUMP JUMPDEST PUSH2 0xF77 PUSH2 0x12B0 JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0xFA1 DUP2 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT PUSH2 0x1020 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1017 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xA PUSH2 0x102E SWAP2 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0xA PUSH2 0x103A SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1085 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10AF DUP3 PUSH1 0x2 PUSH1 0xA PUSH2 0x109E SWAP2 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0xA PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST PUSH2 0x17A6 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE02A129F98418D04669038A9874F706689BA7726C0C0E82C67319EC8CA9001EA PUSH1 0x2 PUSH1 0xA PUSH2 0x10F5 SWAP2 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0xA PUSH2 0x1101 SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110E SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1124 PUSH2 0x1297 JUMP JUMPDEST SWAP1 POP PUSH2 0x1131 DUP2 DUP6 DUP6 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x115A DUP3 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x1163 DUP2 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x116D DUP4 DUP4 PUSH2 0x15F9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12AB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1825 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12B8 PUSH2 0xCBA JUMP JUMPDEST ISZERO PUSH2 0x12F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EF SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x130B DUP2 PUSH2 0x1306 PUSH2 0x1297 JUMP JUMPDEST PUSH2 0x19F4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x137E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1375 SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13EE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E5 SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F9 DUP4 DUP4 DUP4 PUSH2 0x1A45 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1409 DUP5 DUP5 PUSH2 0x1173 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x148A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x147B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1472 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1489 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1825 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1500 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F7 SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x150B DUP3 PUSH0 DUP4 PUSH2 0x1A45 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x151A DUP4 DUP4 PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x15EF JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x158C PUSH2 0x1297 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x15F3 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1604 DUP4 DUP4 PUSH2 0xE2D JUMP JUMPDEST ISZERO PUSH2 0x16D9 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1676 PUSH2 0x1297 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x16DD JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16EB PUSH2 0x1C5E JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x172D PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173A SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x174C PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x178F PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179C SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1816 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180D SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1821 PUSH0 DUP4 DUP4 PUSH2 0x1A45 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1895 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188C SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1905 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18FC SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x19EE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x19E5 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x19FE DUP3 DUP3 PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x1A41 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A38 SWAP3 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A95 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A89 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B63 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1B1E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B15 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BAA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1BF4 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C51 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1C66 PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x1CA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C9C SWAP1 PUSH2 0x26FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDF DUP2 PUSH2 0x1CAB JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CFA DUP2 PUSH2 0x1CD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D15 JUMPI PUSH2 0x1D14 PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D22 DUP5 DUP3 DUP6 ADD PUSH2 0x1CEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D3F DUP2 PUSH2 0x1D2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D58 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA0 DUP3 PUSH2 0x1D5E JUMP JUMPDEST PUSH2 0x1DAA DUP2 DUP6 PUSH2 0x1D68 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DBA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x1DC3 DUP2 PUSH2 0x1D86 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DE6 DUP2 DUP5 PUSH2 0x1D96 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E17 DUP3 PUSH2 0x1DEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E27 DUP2 PUSH2 0x1E0D JUMP JUMPDEST DUP2 EQ PUSH2 0x1E31 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E42 DUP2 PUSH2 0x1E1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E5A DUP2 PUSH2 0x1E48 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E64 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E75 DUP2 PUSH2 0x1E51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E91 JUMPI PUSH2 0x1E90 PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E9E DUP6 DUP3 DUP7 ADD PUSH2 0x1E34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EAF DUP6 DUP3 DUP7 ADD PUSH2 0x1E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC2 DUP2 PUSH2 0x1E48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EDB PUSH0 DUP4 ADD DUP5 PUSH2 0x1EB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EF8 JUMPI PUSH2 0x1EF7 PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F05 DUP7 DUP3 DUP8 ADD PUSH2 0x1E34 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F16 DUP7 DUP3 DUP8 ADD PUSH2 0x1E34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F27 DUP7 DUP3 DUP8 ADD PUSH2 0x1E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F43 DUP2 PUSH2 0x1F31 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F4D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F5E DUP2 PUSH2 0x1F3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F79 JUMPI PUSH2 0x1F78 PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F86 DUP5 DUP3 DUP6 ADD PUSH2 0x1F50 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F98 DUP2 PUSH2 0x1F31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FB1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1FC3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FD4 DUP2 PUSH2 0x1FB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FEF JUMPI PUSH2 0x1FEE PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FFC DUP5 DUP3 DUP6 ADD PUSH2 0x1FC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x201B JUMPI PUSH2 0x201A PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2028 DUP6 DUP3 DUP7 ADD PUSH2 0x1F50 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2039 DUP6 DUP3 DUP7 ADD PUSH2 0x1E34 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2058 DUP2 PUSH2 0x2043 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2071 PUSH0 DUP4 ADD DUP5 PUSH2 0x204F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x208C JUMPI PUSH2 0x208B PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2099 DUP5 DUP3 DUP6 ADD PUSH2 0x1E34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20B8 JUMPI PUSH2 0x20B7 PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20C5 DUP6 DUP3 DUP7 ADD PUSH2 0x1E34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1E34 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2124 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2137 JUMPI PUSH2 0x2136 PUSH2 0x20E0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2171 PUSH1 0x14 DUP4 PUSH2 0x1D68 JUMP JUMPDEST SWAP2 POP PUSH2 0x217C DUP3 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x219E DUP2 PUSH2 0x2165 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742061206D656D62657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21D9 PUSH1 0x16 DUP4 PUSH2 0x1D68 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E4 DUP3 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2206 DUP2 PUSH2 0x21CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E76616C6964206D656D626572736869702074797065000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x226E PUSH1 0x17 DUP4 PUSH2 0x1D68 JUMP JUMPDEST SWAP2 POP PUSH2 0x2279 DUP3 PUSH2 0x223A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x229B DUP2 PUSH2 0x2262 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22D9 DUP3 PUSH2 0x1E48 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E4 DUP4 PUSH2 0x1E48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22FC JUMPI PUSH2 0x22FB PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2313 JUMPI PUSH2 0x2312 PUSH2 0x220D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2323 DUP3 PUSH2 0x2302 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2332 DUP3 PUSH2 0x2316 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2342 DUP2 PUSH2 0x2328 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x235B PUSH0 DUP4 ADD DUP6 PUSH2 0x2339 JUMP JUMPDEST PUSH2 0x2368 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EB9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x23C4 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x23A0 JUMPI PUSH2 0x239F PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x23AF JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x23BD DUP6 PUSH2 0x236F JUMP JUMPDEST SWAP5 POP PUSH2 0x2384 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x23DC JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH2 0x23E9 JUMPI PUSH0 SWAP1 POP PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x23FF JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2409 JUMPI PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2497 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x241B JUMPI PUSH2 0x241A PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2432 JUMPI PUSH2 0x2431 PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2497 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x246D JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2468 JUMPI PUSH2 0x2467 PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x247A DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x237B JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2491 JUMPI PUSH2 0x2490 PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24A8 DUP3 PUSH2 0x1E48 JUMP JUMPDEST SWAP2 POP PUSH2 0x24B3 DUP4 PUSH2 0x2043 JUMP JUMPDEST SWAP3 POP PUSH2 0x24E0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x23CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24F2 DUP3 PUSH2 0x1E48 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FD DUP4 PUSH2 0x1E48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x250B DUP2 PUSH2 0x1E48 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2522 JUMPI PUSH2 0x2521 PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2533 DUP3 PUSH2 0x1E48 JUMP JUMPDEST SWAP2 POP PUSH2 0x253E DUP4 PUSH2 0x1E48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2556 JUMPI PUSH2 0x2555 PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265666572726572206D656D6265727368697020657870697265640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2590 PUSH1 0x1B DUP4 PUSH2 0x1D68 JUMP JUMPDEST SWAP2 POP PUSH2 0x259B DUP3 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25BD DUP2 PUSH2 0x2584 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25F8 PUSH1 0x10 DUP4 PUSH2 0x1D68 JUMP JUMPDEST SWAP2 POP PUSH2 0x2603 DUP3 PUSH2 0x25C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2625 DUP2 PUSH2 0x25EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2635 DUP2 PUSH2 0x1E0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x264E PUSH0 DUP4 ADD DUP5 PUSH2 0x262C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2667 PUSH0 DUP4 ADD DUP7 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x2674 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EB9 JUMP JUMPDEST PUSH2 0x2681 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EB9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x269C PUSH0 DUP4 ADD DUP6 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x26A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F8F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26E4 PUSH1 0x14 DUP4 PUSH2 0x1D68 JUMP JUMPDEST SWAP2 POP PUSH2 0x26EF DUP3 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2711 DUP2 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xD2 PUSH15 0x149AE0F01F2E76854DBD775D570805 SWAP13 MULMOD 0x2F 0xE3 CALLVALUE PUSH14 0xBCC79DCF2836B12564736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "230:4680:10:-:0;;;1398:642;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1006:5:3;996:7;;:15;;;;;;;;;;;;;;;;;;1521:39:10::1;2232:4:0;1532:18:10;;1552:7;1521:10;;;:39;;:::i;:::-;;1570:33;439:25;1595:7;1570:10;;;:33;;:::i;:::-;;320:1;1712:2;:11;;;;:::i;:::-;1706:2;:18;;;;:::i;:::-;1662:16;:41;1679:23;1662:41;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:62;;;;320:1;1810:2;:11;;;;:::i;:::-;1803:3;:19;;;;:::i;:::-;1757:16;:43;1774:25;1757:43;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:65;;;;320:1;1903:2;:11;;;;:::i;:::-;1896:3;:19;;;;:::i;:::-;1853:16;:40;1870:22;1853:40:::0;::::1;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:62;;;;2002:30;2008:7;320:1;379:2;:13;;;;:::i;:::-;368:7;:25;;;;:::i;:::-;2002:5;;;:30;;:::i;:::-;1398:642:::0;230:4680;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;7458:208:4:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;6008:1107:4:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3482:1;3475:8;;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:180::-;6477:77;6474:1;6467:88;6574:4;6571:1;6564:15;6598:4;6595:1;6588:15;6615:102;6657:8;6704:5;6701:1;6697:13;6676:34;;6615:102;;;:::o;6723:848::-;6784:5;6791:4;6815:6;6806:15;;6839:5;6830:14;;6853:712;6874:1;6864:8;6861:15;6853:712;;;6969:4;6964:3;6960:14;6954:4;6951:24;6948:50;;;6978:18;;:::i;:::-;6948:50;7028:1;7018:8;7014:16;7011:451;;;7443:4;7436:5;7432:16;7423:25;;7011:451;7493:4;7487;7483:15;7475:23;;7523:32;7546:8;7523:32;:::i;:::-;7511:44;;6853:712;;;6723:848;;;;;;;:::o;7577:1073::-;7631:5;7822:8;7812:40;;7843:1;7834:10;;7845:5;;7812:40;7871:4;7861:36;;7888:1;7879:10;;7890:5;;7861:36;7957:4;8005:1;8000:27;;;;8041:1;8036:191;;;;7950:277;;8000:27;8018:1;8009:10;;8020:5;;;8036:191;8081:3;8071:8;8068:17;8065:43;;;8088:18;;:::i;:::-;8065:43;8137:8;8134:1;8130:16;8121:25;;8172:3;8165:5;8162:14;8159:40;;;8179:18;;:::i;:::-;8159:40;8212:5;;;7950:277;;8336:2;8326:8;8323:16;8317:3;8311:4;8308:13;8304:36;8286:2;8276:8;8273:16;8268:2;8262:4;8259:12;8255:35;8239:111;8236:246;;;8392:8;8386:4;8382:19;8373:28;;8427:3;8420:5;8417:14;8414:40;;;8434:18;;:::i;:::-;8414:40;8467:5;;8236:246;8507:42;8545:3;8535:8;8529:4;8526:1;8507:42;:::i;:::-;8492:57;;;;8581:4;8576:3;8572:14;8565:5;8562:25;8559:51;;;8590:18;;:::i;:::-;8559:51;8639:4;8632:5;8628:16;8619:25;;7577:1073;;;;;;:::o;8656:86::-;8691:7;8731:4;8724:5;8720:16;8709:27;;8656:86;;;:::o;8748:281::-;8806:5;8830:23;8848:4;8830:23;:::i;:::-;8822:31;;8874:25;8890:8;8874:25;:::i;:::-;8862:37;;8918:104;8955:66;8945:8;8939:4;8918:104;:::i;:::-;8909:113;;8748:281;;;;:::o;9035:410::-;9075:7;9098:20;9116:1;9098:20;:::i;:::-;9093:25;;9132:20;9150:1;9132:20;:::i;:::-;9127:25;;9187:1;9184;9180:9;9209:30;9227:11;9209:30;:::i;:::-;9198:41;;9388:1;9379:7;9375:15;9372:1;9369:22;9349:1;9342:9;9322:83;9299:139;;9418:18;;:::i;:::-;9299:139;9083:362;9035:410;;;;:::o;9451:180::-;9499:77;9496:1;9489:88;9596:4;9593:1;9586:15;9620:4;9617:1;9610:15;9637:118;9724:24;9742:5;9724:24;:::i;:::-;9719:3;9712:37;9637:118;;:::o;9761:222::-;9854:4;9892:2;9881:9;9877:18;9869:26;;9905:71;9973:1;9962:9;9958:17;9949:6;9905:71;:::i;:::-;9761:222;;;;:::o;9989:191::-;10029:3;10048:20;10066:1;10048:20;:::i;:::-;10043:25;;10082:20;10100:1;10082:20;:::i;:::-;10077:25;;10125:1;10122;10118:9;10111:16;;10146:3;10143:1;10140:10;10137:36;;;10153:18;;:::i;:::-;10137:36;9989:191;;;;:::o;10186:118::-;10273:24;10291:5;10273:24;:::i;:::-;10268:3;10261:37;10186:118;;:::o;10310:442::-;10459:4;10497:2;10486:9;10482:18;10474:26;;10510:71;10578:1;10567:9;10563:17;10554:6;10510:71;:::i;:::-;10591:72;10659:2;10648:9;10644:18;10635:6;10591:72;:::i;:::-;10673;10741:2;10730:9;10726:18;10717:6;10673:72;:::i;:::-;10310:442;;;;;;:::o;10758:222::-;10851:4;10889:2;10878:9;10874:18;10866:26;;10902:71;10970:1;10959:9;10955:17;10946:6;10902:71;:::i;:::-;10758:222;;;;:::o;230:4680:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 3909,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INITIAL_SUPPLY_1330": {
									"entryPoint": 3022,
									"id": 1330,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MANAGER_ROLE_1335": {
									"entryPoint": 4618,
									"id": 1335,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MEMBER_ROLE_1345": {
									"entryPoint": 3873,
									"id": 1345,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@REFERRAL_REWARD_1358": {
									"entryPoint": 3406,
									"id": 1358,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@STAFF_ROLE_1340": {
									"entryPoint": 3435,
									"id": 1340,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TRAINER_ROLE_1350": {
									"entryPoint": 3915,
									"id": 1350,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1029": {
									"entryPoint": 4766,
									"id": 1029,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1089": {
									"entryPoint": 6181,
									"id": 1089,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1011": {
									"entryPoint": 5264,
									"id": 1011,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 6644,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 4858,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 5391,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_978": {
									"entryPoint": 6054,
									"id": 978,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1254": {
									"entryPoint": 4759,
									"id": 1254,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_606": {
									"entryPoint": 5956,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_579": {
									"entryPoint": 4784,
									"id": 579,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_590": {
									"entryPoint": 7262,
									"id": 590,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 5625,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1137": {
									"entryPoint": 5118,
									"id": 1137,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_868": {
									"entryPoint": 4878,
									"id": 868,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_622": {
									"entryPoint": 5859,
									"id": 622,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_945": {
									"entryPoint": 6725,
									"id": 945,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_765": {
									"entryPoint": 4467,
									"id": 765,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_789": {
									"entryPoint": 1928,
									"id": 789,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_724": {
									"entryPoint": 3279,
									"id": 724,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimal_1322": {
									"entryPoint": 3348,
									"id": 1322,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_702": {
									"entryPoint": 3053,
									"id": 702,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRemainingMembershipTime_1701": {
									"entryPoint": 3471,
									"id": 1701,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2158,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2988,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 3629,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@membershipExpiry_1371": {
									"entryPoint": 4597,
									"id": 1371,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@membershipPrices_1367": {
									"entryPoint": 3237,
									"id": 1367,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_684": {
									"entryPoint": 1784,
									"id": 684,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1493": {
									"entryPoint": 3353,
									"id": 1493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_567": {
									"entryPoint": 3258,
									"id": 567,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@payStaff_1533": {
									"entryPoint": 1962,
									"id": 1533,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@purchaseMembership_1675": {
									"entryPoint": 2187,
									"id": 1675,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@referralBonuses_1375": {
									"entryPoint": 4412,
									"id": 1375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 3061,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 4433,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rewardReferral_1570": {
									"entryPoint": 3951,
									"id": 1570,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1295": {
									"entryPoint": 4654,
									"id": 1295,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1663,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_693": {
									"entryPoint": 3729,
									"id": 693,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_711": {
									"entryPoint": 2103,
									"id": 711,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_821": {
									"entryPoint": 2112,
									"id": 821,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_748": {
									"entryPoint": 4378,
									"id": 748,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1503": {
									"entryPoint": 3184,
									"id": 1503,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 8016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_MEMBERSHIP_TYPE_$1362": {
									"entryPoint": 8134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 8036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 8197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_MEMBERSHIP_TYPE_$1362": {
									"entryPoint": 8154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 8079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_MEMBERSHIP_TYPE_$1362_to_t_uint8_fromStack": {
									"entryPoint": 9017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_421668a66e5be01199ddd2da64023ed8dd947063fb73ad1701a973a1f9efebf2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5cbd542351d7fdfb7f89b17d4ac17a7a16041856bb9eaf5833ca04c408480857_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b89e19d8ece4c02a72d5a02c02781c01f06d56f014875c79921678b2ba553b29_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 9865,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9812,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 8094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_MEMBERSHIP_TYPE_$1362_t_uint256__to_t_uint8_t_uint256__fromStack_reversed": {
									"entryPoint": 9032,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_421668a66e5be01199ddd2da64023ed8dd947063fb73ad1701a973a1f9efebf2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5cbd542351d7fdfb7f89b17d4ac17a7a16041856bb9eaf5833ca04c408480857__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b89e19d8ece4c02a72d5a02c02781c01f06d56f014875c79921678b2ba553b29__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 9083,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 9374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 9165,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_MEMBERSHIP_TYPE_$1362": {
									"entryPoint": 8982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_MEMBERSHIP_TYPE_$1362_to_t_uint8": {
									"entryPoint": 9000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7544,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8866,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 8717,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8416,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7335,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 9071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 9904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_421668a66e5be01199ddd2da64023ed8dd947063fb73ad1701a973a1f9efebf2": {
									"entryPoint": 9564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 8509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5cbd542351d7fdfb7f89b17d4ac17a7a16041856bb9eaf5833ca04c408480857": {
									"entryPoint": 8613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 9668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b89e19d8ece4c02a72d5a02c02781c01f06d56f014875c79921678b2ba553b29": {
									"entryPoint": 8762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_MEMBERSHIP_TYPE_$1362": {
									"entryPoint": 8962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_MEMBERSHIP_TYPE_$1362": {
									"entryPoint": 8119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20524:11",
										"nodeType": "YulBlock",
										"src": "0:20524:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "378:105:11",
													"nodeType": "YulBlock",
													"src": "378:105:11",
													"statements": [
														{
															"nativeSrc": "388:89:11",
															"nodeType": "YulAssignment",
															"src": "388:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:11",
																		"nodeType": "YulLiteral",
																		"src": "410:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:11"
																},
																"nativeSrc": "399:78:11",
																"nodeType": "YulFunctionCall",
																"src": "399:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:11",
														"nodeType": "YulTypedName",
														"src": "360:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:11",
														"nodeType": "YulTypedName",
														"src": "370:7:11",
														"type": ""
													}
												],
												"src": "334:149:11"
											},
											{
												"body": {
													"nativeSrc": "531:78:11",
													"nodeType": "YulBlock",
													"src": "531:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:11",
																"nodeType": "YulBlock",
																"src": "587:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:11",
																					"nodeType": "YulLiteral",
																					"src": "596:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "599:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:11"
																			},
																			"nativeSrc": "589:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:11"
																		},
																		"nativeSrc": "589:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:11"
																				},
																				"nativeSrc": "561:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:11"
																		},
																		"nativeSrc": "551:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:11"
																},
																"nativeSrc": "544:42:11",
																"nodeType": "YulFunctionCall",
																"src": "544:42:11"
															},
															"nativeSrc": "541:62:11",
															"nodeType": "YulIf",
															"src": "541:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:11",
														"nodeType": "YulTypedName",
														"src": "524:5:11",
														"type": ""
													}
												],
												"src": "489:120:11"
											},
											{
												"body": {
													"nativeSrc": "666:86:11",
													"nodeType": "YulBlock",
													"src": "666:86:11",
													"statements": [
														{
															"nativeSrc": "676:29:11",
															"nodeType": "YulAssignment",
															"src": "676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:11"
																},
																"nativeSrc": "685:20:11",
																"nodeType": "YulFunctionCall",
																"src": "685:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:11"
																},
																"nativeSrc": "714:32:11",
																"nodeType": "YulFunctionCall",
																"src": "714:32:11"
															},
															"nativeSrc": "714:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:11",
														"nodeType": "YulTypedName",
														"src": "644:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:11",
														"nodeType": "YulTypedName",
														"src": "652:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:11",
														"nodeType": "YulTypedName",
														"src": "660:5:11",
														"type": ""
													}
												],
												"src": "615:137:11"
											},
											{
												"body": {
													"nativeSrc": "823:262:11",
													"nodeType": "YulBlock",
													"src": "823:262:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:11",
																"nodeType": "YulBlock",
																"src": "869:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:11"
																			},
																			"nativeSrc": "871:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:11"
																		},
																		"nativeSrc": "871:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:11"
																		},
																		"nativeSrc": "840:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:11",
																		"nodeType": "YulLiteral",
																		"src": "865:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:11"
																},
																"nativeSrc": "836:32:11",
																"nodeType": "YulFunctionCall",
																"src": "836:32:11"
															},
															"nativeSrc": "833:119:11",
															"nodeType": "YulIf",
															"src": "833:119:11"
														},
														{
															"nativeSrc": "962:116:11",
															"nodeType": "YulBlock",
															"src": "962:116:11",
															"statements": [
																{
																	"nativeSrc": "977:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:11",
																		"nodeType": "YulLiteral",
																		"src": "991:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:11",
																			"nodeType": "YulTypedName",
																			"src": "981:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:11",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:11"
																				},
																				"nativeSrc": "1036:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:11"
																		},
																		"nativeSrc": "1016:52:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:11",
														"nodeType": "YulTypedName",
														"src": "793:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:11",
														"nodeType": "YulTypedName",
														"src": "804:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:11",
														"nodeType": "YulTypedName",
														"src": "816:6:11",
														"type": ""
													}
												],
												"src": "758:327:11"
											},
											{
												"body": {
													"nativeSrc": "1133:48:11",
													"nodeType": "YulBlock",
													"src": "1133:48:11",
													"statements": [
														{
															"nativeSrc": "1143:32:11",
															"nodeType": "YulAssignment",
															"src": "1143:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:11"
																		},
																		"nativeSrc": "1161:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:11"
																},
																"nativeSrc": "1154:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:11",
														"nodeType": "YulTypedName",
														"src": "1115:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:11",
														"nodeType": "YulTypedName",
														"src": "1125:7:11",
														"type": ""
													}
												],
												"src": "1091:90:11"
											},
											{
												"body": {
													"nativeSrc": "1246:50:11",
													"nodeType": "YulBlock",
													"src": "1246:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:11"
																		},
																		"nativeSrc": "1268:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:11"
																},
																"nativeSrc": "1256:34:11",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:11"
															},
															"nativeSrc": "1256:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:11",
														"nodeType": "YulTypedName",
														"src": "1234:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:11",
														"nodeType": "YulTypedName",
														"src": "1241:3:11",
														"type": ""
													}
												],
												"src": "1187:109:11"
											},
											{
												"body": {
													"nativeSrc": "1394:118:11",
													"nodeType": "YulBlock",
													"src": "1394:118:11",
													"statements": [
														{
															"nativeSrc": "1404:26:11",
															"nodeType": "YulAssignment",
															"src": "1404:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:11"
																},
																"nativeSrc": "1412:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:11"
																		},
																		"nativeSrc": "1487:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:11"
																},
																"nativeSrc": "1440:65:11",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:11"
															},
															"nativeSrc": "1440:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:11",
														"nodeType": "YulTypedName",
														"src": "1366:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:11",
														"nodeType": "YulTypedName",
														"src": "1378:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:11",
														"nodeType": "YulTypedName",
														"src": "1389:4:11",
														"type": ""
													}
												],
												"src": "1302:210:11"
											},
											{
												"body": {
													"nativeSrc": "1577:40:11",
													"nodeType": "YulBlock",
													"src": "1577:40:11",
													"statements": [
														{
															"nativeSrc": "1588:22:11",
															"nodeType": "YulAssignment",
															"src": "1588:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:11"
																},
																"nativeSrc": "1598:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:11",
														"nodeType": "YulTypedName",
														"src": "1560:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:11",
														"nodeType": "YulTypedName",
														"src": "1570:6:11",
														"type": ""
													}
												],
												"src": "1518:99:11"
											},
											{
												"body": {
													"nativeSrc": "1719:73:11",
													"nodeType": "YulBlock",
													"src": "1719:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:11"
																},
																"nativeSrc": "1729:19:11",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:11"
															},
															"nativeSrc": "1729:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:11"
														},
														{
															"nativeSrc": "1757:29:11",
															"nodeType": "YulAssignment",
															"src": "1757:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:11"
																},
																"nativeSrc": "1772:14:11",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:11",
														"nodeType": "YulTypedName",
														"src": "1691:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:11",
														"nodeType": "YulTypedName",
														"src": "1696:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:11",
														"nodeType": "YulTypedName",
														"src": "1707:11:11",
														"type": ""
													}
												],
												"src": "1623:169:11"
											},
											{
												"body": {
													"nativeSrc": "1860:77:11",
													"nodeType": "YulBlock",
													"src": "1860:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:11"
																},
																"nativeSrc": "1871:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:11"
															},
															"nativeSrc": "1871:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:11"
																		},
																		"nativeSrc": "1910:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:11"
																},
																"nativeSrc": "1903:27:11",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:11"
															},
															"nativeSrc": "1903:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:11",
														"nodeType": "YulTypedName",
														"src": "1842:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:11",
														"nodeType": "YulTypedName",
														"src": "1847:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:11",
														"nodeType": "YulTypedName",
														"src": "1852:6:11",
														"type": ""
													}
												],
												"src": "1798:139:11"
											},
											{
												"body": {
													"nativeSrc": "1991:54:11",
													"nodeType": "YulBlock",
													"src": "1991:54:11",
													"statements": [
														{
															"nativeSrc": "2001:38:11",
															"nodeType": "YulAssignment",
															"src": "2001:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:11"
																		},
																		"nativeSrc": "2015:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:11"
																		},
																		"nativeSrc": "2031:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:11"
																},
																"nativeSrc": "2011:28:11",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:11",
														"nodeType": "YulTypedName",
														"src": "1974:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:11",
														"nodeType": "YulTypedName",
														"src": "1984:6:11",
														"type": ""
													}
												],
												"src": "1943:102:11"
											},
											{
												"body": {
													"nativeSrc": "2143:285:11",
													"nodeType": "YulBlock",
													"src": "2143:285:11",
													"statements": [
														{
															"nativeSrc": "2153:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:11"
																},
																"nativeSrc": "2167:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:11",
															"nodeType": "YulAssignment",
															"src": "2215:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:11"
																},
																"nativeSrc": "2222:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:11"
																		},
																		"nativeSrc": "2337:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:11"
																},
																"nativeSrc": "2302:65:11",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:11"
															},
															"nativeSrc": "2302:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:11"
														},
														{
															"nativeSrc": "2376:46:11",
															"nodeType": "YulAssignment",
															"src": "2376:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:11"
																		},
																		"nativeSrc": "2392:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:11"
																},
																"nativeSrc": "2383:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:11",
														"nodeType": "YulTypedName",
														"src": "2124:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:11",
														"nodeType": "YulTypedName",
														"src": "2131:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:11",
														"nodeType": "YulTypedName",
														"src": "2139:3:11",
														"type": ""
													}
												],
												"src": "2051:377:11"
											},
											{
												"body": {
													"nativeSrc": "2552:195:11",
													"nodeType": "YulBlock",
													"src": "2552:195:11",
													"statements": [
														{
															"nativeSrc": "2562:26:11",
															"nodeType": "YulAssignment",
															"src": "2562:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:11"
																},
																"nativeSrc": "2570:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:11"
																		},
																		"nativeSrc": "2605:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:11"
																		},
																		"nativeSrc": "2624:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:11"
																},
																"nativeSrc": "2598:47:11",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:11"
															},
															"nativeSrc": "2598:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:11"
														},
														{
															"nativeSrc": "2654:86:11",
															"nodeType": "YulAssignment",
															"src": "2654:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:11"
																},
																"nativeSrc": "2662:78:11",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:11",
														"nodeType": "YulTypedName",
														"src": "2524:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:11",
														"nodeType": "YulTypedName",
														"src": "2536:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:11",
														"nodeType": "YulTypedName",
														"src": "2547:4:11",
														"type": ""
													}
												],
												"src": "2434:313:11"
											},
											{
												"body": {
													"nativeSrc": "2798:81:11",
													"nodeType": "YulBlock",
													"src": "2798:81:11",
													"statements": [
														{
															"nativeSrc": "2808:65:11",
															"nodeType": "YulAssignment",
															"src": "2808:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:11",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:11"
																},
																"nativeSrc": "2819:54:11",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:11",
														"nodeType": "YulTypedName",
														"src": "2780:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:11",
														"nodeType": "YulTypedName",
														"src": "2790:7:11",
														"type": ""
													}
												],
												"src": "2753:126:11"
											},
											{
												"body": {
													"nativeSrc": "2930:51:11",
													"nodeType": "YulBlock",
													"src": "2930:51:11",
													"statements": [
														{
															"nativeSrc": "2940:35:11",
															"nodeType": "YulAssignment",
															"src": "2940:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:11"
																},
																"nativeSrc": "2951:24:11",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:11",
														"nodeType": "YulTypedName",
														"src": "2912:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:11",
														"nodeType": "YulTypedName",
														"src": "2922:7:11",
														"type": ""
													}
												],
												"src": "2885:96:11"
											},
											{
												"body": {
													"nativeSrc": "3030:79:11",
													"nodeType": "YulBlock",
													"src": "3030:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:11",
																"nodeType": "YulBlock",
																"src": "3087:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:11"
																			},
																			"nativeSrc": "3089:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:11"
																		},
																		"nativeSrc": "3089:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:11"
																				},
																				"nativeSrc": "3060:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:11"
																		},
																		"nativeSrc": "3050:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:11"
																},
																"nativeSrc": "3043:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:11"
															},
															"nativeSrc": "3040:63:11",
															"nodeType": "YulIf",
															"src": "3040:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:11",
														"nodeType": "YulTypedName",
														"src": "3023:5:11",
														"type": ""
													}
												],
												"src": "2987:122:11"
											},
											{
												"body": {
													"nativeSrc": "3167:87:11",
													"nodeType": "YulBlock",
													"src": "3167:87:11",
													"statements": [
														{
															"nativeSrc": "3177:29:11",
															"nodeType": "YulAssignment",
															"src": "3177:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:11"
																},
																"nativeSrc": "3186:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:11"
																},
																"nativeSrc": "3215:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:11"
															},
															"nativeSrc": "3215:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:11",
														"nodeType": "YulTypedName",
														"src": "3145:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:11",
														"nodeType": "YulTypedName",
														"src": "3153:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:11",
														"nodeType": "YulTypedName",
														"src": "3161:5:11",
														"type": ""
													}
												],
												"src": "3115:139:11"
											},
											{
												"body": {
													"nativeSrc": "3305:32:11",
													"nodeType": "YulBlock",
													"src": "3305:32:11",
													"statements": [
														{
															"nativeSrc": "3315:16:11",
															"nodeType": "YulAssignment",
															"src": "3315:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:11",
																"nodeType": "YulIdentifier",
																"src": "3326:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:11",
														"nodeType": "YulTypedName",
														"src": "3287:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:11",
														"nodeType": "YulTypedName",
														"src": "3297:7:11",
														"type": ""
													}
												],
												"src": "3260:77:11"
											},
											{
												"body": {
													"nativeSrc": "3386:79:11",
													"nodeType": "YulBlock",
													"src": "3386:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:11",
																"nodeType": "YulBlock",
																"src": "3443:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:11"
																			},
																			"nativeSrc": "3445:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:11"
																		},
																		"nativeSrc": "3445:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:11"
																				},
																				"nativeSrc": "3416:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:11"
																		},
																		"nativeSrc": "3406:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:11"
																},
																"nativeSrc": "3399:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:11"
															},
															"nativeSrc": "3396:63:11",
															"nodeType": "YulIf",
															"src": "3396:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:11",
														"nodeType": "YulTypedName",
														"src": "3379:5:11",
														"type": ""
													}
												],
												"src": "3343:122:11"
											},
											{
												"body": {
													"nativeSrc": "3523:87:11",
													"nodeType": "YulBlock",
													"src": "3523:87:11",
													"statements": [
														{
															"nativeSrc": "3533:29:11",
															"nodeType": "YulAssignment",
															"src": "3533:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:11"
																},
																"nativeSrc": "3542:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:11"
																},
																"nativeSrc": "3571:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:11"
															},
															"nativeSrc": "3571:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:11",
														"nodeType": "YulTypedName",
														"src": "3501:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:11",
														"nodeType": "YulTypedName",
														"src": "3509:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:11",
														"nodeType": "YulTypedName",
														"src": "3517:5:11",
														"type": ""
													}
												],
												"src": "3471:139:11"
											},
											{
												"body": {
													"nativeSrc": "3699:391:11",
													"nodeType": "YulBlock",
													"src": "3699:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:11",
																"nodeType": "YulBlock",
																"src": "3745:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:11"
																			},
																			"nativeSrc": "3747:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:11"
																		},
																		"nativeSrc": "3747:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:11"
																		},
																		"nativeSrc": "3716:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:11"
																},
																"nativeSrc": "3712:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:11"
															},
															"nativeSrc": "3709:119:11",
															"nodeType": "YulIf",
															"src": "3709:119:11"
														},
														{
															"nativeSrc": "3838:117:11",
															"nodeType": "YulBlock",
															"src": "3838:117:11",
															"statements": [
																{
																	"nativeSrc": "3853:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:11"
																				},
																				"nativeSrc": "3913:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:11"
																		},
																		"nativeSrc": "3892:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:11",
															"nodeType": "YulBlock",
															"src": "3965:118:11",
															"statements": [
																{
																	"nativeSrc": "3980:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:11"
																				},
																				"nativeSrc": "4041:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:11"
																		},
																		"nativeSrc": "4020:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:11",
														"nodeType": "YulTypedName",
														"src": "3661:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:11",
														"nodeType": "YulTypedName",
														"src": "3672:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:11",
														"nodeType": "YulTypedName",
														"src": "3684:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:11",
														"nodeType": "YulTypedName",
														"src": "3692:6:11",
														"type": ""
													}
												],
												"src": "3616:474:11"
											},
											{
												"body": {
													"nativeSrc": "4161:53:11",
													"nodeType": "YulBlock",
													"src": "4161:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4178:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4178:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4201:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4201:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4183:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "4183:17:11"
																		},
																		"nativeSrc": "4183:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:11"
																},
																"nativeSrc": "4171:37:11",
																"nodeType": "YulFunctionCall",
																"src": "4171:37:11"
															},
															"nativeSrc": "4171:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "4171:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4096:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:11",
														"nodeType": "YulTypedName",
														"src": "4149:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4156:3:11",
														"nodeType": "YulTypedName",
														"src": "4156:3:11",
														"type": ""
													}
												],
												"src": "4096:118:11"
											},
											{
												"body": {
													"nativeSrc": "4318:124:11",
													"nodeType": "YulBlock",
													"src": "4318:124:11",
													"statements": [
														{
															"nativeSrc": "4328:26:11",
															"nodeType": "YulAssignment",
															"src": "4328:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:11"
																},
																"nativeSrc": "4336:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4336:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4408:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4421:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4432:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4432:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4417:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:11"
																		},
																		"nativeSrc": "4417:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4364:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4364:43:11"
																},
																"nativeSrc": "4364:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4364:71:11"
															},
															"nativeSrc": "4364:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4364:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4220:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:11",
														"nodeType": "YulTypedName",
														"src": "4290:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4302:6:11",
														"nodeType": "YulTypedName",
														"src": "4302:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4313:4:11",
														"nodeType": "YulTypedName",
														"src": "4313:4:11",
														"type": ""
													}
												],
												"src": "4220:222:11"
											},
											{
												"body": {
													"nativeSrc": "4548:519:11",
													"nodeType": "YulBlock",
													"src": "4548:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4594:83:11",
																"nodeType": "YulBlock",
																"src": "4594:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4596:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4596:77:11"
																			},
																			"nativeSrc": "4596:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4596:79:11"
																		},
																		"nativeSrc": "4596:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4596:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4569:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4569:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4578:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4578:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4565:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:11"
																		},
																		"nativeSrc": "4565:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4565:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4590:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4590:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4561:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:11"
																},
																"nativeSrc": "4561:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4561:32:11"
															},
															"nativeSrc": "4558:119:11",
															"nodeType": "YulIf",
															"src": "4558:119:11"
														},
														{
															"nativeSrc": "4687:117:11",
															"nodeType": "YulBlock",
															"src": "4687:117:11",
															"statements": [
																{
																	"nativeSrc": "4702:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4702:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4716:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4716:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4706:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4706:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4731:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4731:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4766:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4766:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4777:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4777:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4762:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4762:3:11"
																				},
																				"nativeSrc": "4762:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4762:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4786:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4786:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4741:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4741:20:11"
																		},
																		"nativeSrc": "4741:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4731:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4731:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4814:118:11",
															"nodeType": "YulBlock",
															"src": "4814:118:11",
															"statements": [
																{
																	"nativeSrc": "4829:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4829:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4843:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4843:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4833:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4833:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4859:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4859:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4894:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4894:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4905:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4905:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4890:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4890:3:11"
																				},
																				"nativeSrc": "4890:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4890:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4914:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4914:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4869:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4869:20:11"
																		},
																		"nativeSrc": "4869:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4869:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4859:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4859:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4942:118:11",
															"nodeType": "YulBlock",
															"src": "4942:118:11",
															"statements": [
																{
																	"nativeSrc": "4957:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4957:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4971:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4971:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4961:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4961:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4987:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4987:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5022:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5022:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5033:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5033:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5018:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5018:3:11"
																				},
																				"nativeSrc": "5018:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5018:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5042:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5042:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4997:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4997:20:11"
																		},
																		"nativeSrc": "4997:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4997:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4987:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4987:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4448:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4502:9:11",
														"nodeType": "YulTypedName",
														"src": "4502:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4513:7:11",
														"nodeType": "YulTypedName",
														"src": "4513:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4525:6:11",
														"nodeType": "YulTypedName",
														"src": "4525:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4533:6:11",
														"nodeType": "YulTypedName",
														"src": "4533:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4541:6:11",
														"nodeType": "YulTypedName",
														"src": "4541:6:11",
														"type": ""
													}
												],
												"src": "4448:619:11"
											},
											{
												"body": {
													"nativeSrc": "5118:32:11",
													"nodeType": "YulBlock",
													"src": "5118:32:11",
													"statements": [
														{
															"nativeSrc": "5128:16:11",
															"nodeType": "YulAssignment",
															"src": "5128:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "5139:5:11",
																"nodeType": "YulIdentifier",
																"src": "5139:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5128:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "5128:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5073:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:11",
														"nodeType": "YulTypedName",
														"src": "5100:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5110:7:11",
														"nodeType": "YulTypedName",
														"src": "5110:7:11",
														"type": ""
													}
												],
												"src": "5073:77:11"
											},
											{
												"body": {
													"nativeSrc": "5199:79:11",
													"nodeType": "YulBlock",
													"src": "5199:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5256:16:11",
																"nodeType": "YulBlock",
																"src": "5256:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5265:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5265:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5268:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5268:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5258:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5258:6:11"
																			},
																			"nativeSrc": "5258:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5258:12:11"
																		},
																		"nativeSrc": "5258:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5258:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5222:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5222:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5247:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5247:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5229:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "5229:17:11"
																				},
																				"nativeSrc": "5229:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5229:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5219:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:11"
																		},
																		"nativeSrc": "5219:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5219:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5212:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:11"
																},
																"nativeSrc": "5212:43:11",
																"nodeType": "YulFunctionCall",
																"src": "5212:43:11"
															},
															"nativeSrc": "5209:63:11",
															"nodeType": "YulIf",
															"src": "5209:63:11"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5156:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5192:5:11",
														"nodeType": "YulTypedName",
														"src": "5192:5:11",
														"type": ""
													}
												],
												"src": "5156:122:11"
											},
											{
												"body": {
													"nativeSrc": "5336:87:11",
													"nodeType": "YulBlock",
													"src": "5336:87:11",
													"statements": [
														{
															"nativeSrc": "5346:29:11",
															"nodeType": "YulAssignment",
															"src": "5346:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5368:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5368:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5355:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5355:12:11"
																},
																"nativeSrc": "5355:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5355:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5346:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5346:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5411:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5411:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5384:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "5384:26:11"
																},
																"nativeSrc": "5384:33:11",
																"nodeType": "YulFunctionCall",
																"src": "5384:33:11"
															},
															"nativeSrc": "5384:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "5384:33:11"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5284:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5314:6:11",
														"nodeType": "YulTypedName",
														"src": "5314:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5322:3:11",
														"nodeType": "YulTypedName",
														"src": "5322:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5330:5:11",
														"nodeType": "YulTypedName",
														"src": "5330:5:11",
														"type": ""
													}
												],
												"src": "5284:139:11"
											},
											{
												"body": {
													"nativeSrc": "5495:263:11",
													"nodeType": "YulBlock",
													"src": "5495:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5541:83:11",
																"nodeType": "YulBlock",
																"src": "5541:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5543:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5543:77:11"
																			},
																			"nativeSrc": "5543:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5543:79:11"
																		},
																		"nativeSrc": "5543:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5543:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5516:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5516:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5525:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5525:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5512:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5512:3:11"
																		},
																		"nativeSrc": "5512:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5512:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5537:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5537:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5508:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5508:3:11"
																},
																"nativeSrc": "5508:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5508:32:11"
															},
															"nativeSrc": "5505:119:11",
															"nodeType": "YulIf",
															"src": "5505:119:11"
														},
														{
															"nativeSrc": "5634:117:11",
															"nodeType": "YulBlock",
															"src": "5634:117:11",
															"statements": [
																{
																	"nativeSrc": "5649:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5649:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5663:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5663:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5653:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5653:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5678:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5678:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5713:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5713:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5724:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5724:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5709:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5709:3:11"
																				},
																				"nativeSrc": "5709:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5709:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5733:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5733:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5688:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5688:20:11"
																		},
																		"nativeSrc": "5688:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5688:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5678:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5678:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5429:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5465:9:11",
														"nodeType": "YulTypedName",
														"src": "5465:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5476:7:11",
														"nodeType": "YulTypedName",
														"src": "5476:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5488:6:11",
														"nodeType": "YulTypedName",
														"src": "5488:6:11",
														"type": ""
													}
												],
												"src": "5429:329:11"
											},
											{
												"body": {
													"nativeSrc": "5829:53:11",
													"nodeType": "YulBlock",
													"src": "5829:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5846:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5846:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5869:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5869:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5851:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "5851:17:11"
																		},
																		"nativeSrc": "5851:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5851:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5839:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5839:6:11"
																},
																"nativeSrc": "5839:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5839:37:11"
															},
															"nativeSrc": "5839:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "5839:37:11"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5764:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:11",
														"nodeType": "YulTypedName",
														"src": "5817:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5824:3:11",
														"nodeType": "YulTypedName",
														"src": "5824:3:11",
														"type": ""
													}
												],
												"src": "5764:118:11"
											},
											{
												"body": {
													"nativeSrc": "5986:124:11",
													"nodeType": "YulBlock",
													"src": "5986:124:11",
													"statements": [
														{
															"nativeSrc": "5996:26:11",
															"nodeType": "YulAssignment",
															"src": "5996:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6008:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6008:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6019:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6004:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:11"
																},
																"nativeSrc": "6004:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6004:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5996:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5996:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6076:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6089:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6089:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6100:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6100:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6085:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:11"
																		},
																		"nativeSrc": "6085:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6085:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6032:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6032:43:11"
																},
																"nativeSrc": "6032:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6032:71:11"
															},
															"nativeSrc": "6032:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6032:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5888:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5958:9:11",
														"nodeType": "YulTypedName",
														"src": "5958:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5970:6:11",
														"nodeType": "YulTypedName",
														"src": "5970:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5981:4:11",
														"nodeType": "YulTypedName",
														"src": "5981:4:11",
														"type": ""
													}
												],
												"src": "5888:222:11"
											},
											{
												"body": {
													"nativeSrc": "6179:56:11",
													"nodeType": "YulBlock",
													"src": "6179:56:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6213:16:11",
																"nodeType": "YulBlock",
																"src": "6213:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6222:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6225:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6225:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6215:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6215:6:11"
																			},
																			"nativeSrc": "6215:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6215:12:11"
																		},
																		"nativeSrc": "6215:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6215:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6202:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6202:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6209:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6209:1:11",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6199:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6199:2:11"
																		},
																		"nativeSrc": "6199:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6199:12:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6192:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6192:6:11"
																},
																"nativeSrc": "6192:20:11",
																"nodeType": "YulFunctionCall",
																"src": "6192:20:11"
															},
															"nativeSrc": "6189:40:11",
															"nodeType": "YulIf",
															"src": "6189:40:11"
														}
													]
												},
												"name": "validator_revert_t_enum$_MEMBERSHIP_TYPE_$1362",
												"nativeSrc": "6116:119:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6172:5:11",
														"nodeType": "YulTypedName",
														"src": "6172:5:11",
														"type": ""
													}
												],
												"src": "6116:119:11"
											},
											{
												"body": {
													"nativeSrc": "6313:107:11",
													"nodeType": "YulBlock",
													"src": "6313:107:11",
													"statements": [
														{
															"nativeSrc": "6323:29:11",
															"nodeType": "YulAssignment",
															"src": "6323:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6345:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6345:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6332:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6332:12:11"
																},
																"nativeSrc": "6332:20:11",
																"nodeType": "YulFunctionCall",
																"src": "6332:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6323:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6323:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6408:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6408:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_MEMBERSHIP_TYPE_$1362",
																	"nativeSrc": "6361:46:11",
																	"nodeType": "YulIdentifier",
																	"src": "6361:46:11"
																},
																"nativeSrc": "6361:53:11",
																"nodeType": "YulFunctionCall",
																"src": "6361:53:11"
															},
															"nativeSrc": "6361:53:11",
															"nodeType": "YulExpressionStatement",
															"src": "6361:53:11"
														}
													]
												},
												"name": "abi_decode_t_enum$_MEMBERSHIP_TYPE_$1362",
												"nativeSrc": "6241:179:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6291:6:11",
														"nodeType": "YulTypedName",
														"src": "6291:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6299:3:11",
														"nodeType": "YulTypedName",
														"src": "6299:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6307:5:11",
														"nodeType": "YulTypedName",
														"src": "6307:5:11",
														"type": ""
													}
												],
												"src": "6241:179:11"
											},
											{
												"body": {
													"nativeSrc": "6512:283:11",
													"nodeType": "YulBlock",
													"src": "6512:283:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6558:83:11",
																"nodeType": "YulBlock",
																"src": "6558:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6560:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6560:77:11"
																			},
																			"nativeSrc": "6560:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6560:79:11"
																		},
																		"nativeSrc": "6560:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6560:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6533:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6533:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6542:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6542:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6529:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6529:3:11"
																		},
																		"nativeSrc": "6529:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6529:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6554:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6554:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6525:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6525:3:11"
																},
																"nativeSrc": "6525:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6525:32:11"
															},
															"nativeSrc": "6522:119:11",
															"nodeType": "YulIf",
															"src": "6522:119:11"
														},
														{
															"nativeSrc": "6651:137:11",
															"nodeType": "YulBlock",
															"src": "6651:137:11",
															"statements": [
																{
																	"nativeSrc": "6666:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6666:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6680:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6680:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6670:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6670:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6695:83:11",
																	"nodeType": "YulAssignment",
																	"src": "6695:83:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6750:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6750:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6761:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6761:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6746:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6746:3:11"
																				},
																				"nativeSrc": "6746:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6746:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6770:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6770:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_MEMBERSHIP_TYPE_$1362",
																			"nativeSrc": "6705:40:11",
																			"nodeType": "YulIdentifier",
																			"src": "6705:40:11"
																		},
																		"nativeSrc": "6705:73:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6705:73:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6695:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6695:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_MEMBERSHIP_TYPE_$1362",
												"nativeSrc": "6426:369:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6482:9:11",
														"nodeType": "YulTypedName",
														"src": "6482:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6493:7:11",
														"nodeType": "YulTypedName",
														"src": "6493:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6505:6:11",
														"nodeType": "YulTypedName",
														"src": "6505:6:11",
														"type": ""
													}
												],
												"src": "6426:369:11"
											},
											{
												"body": {
													"nativeSrc": "6884:391:11",
													"nodeType": "YulBlock",
													"src": "6884:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6930:83:11",
																"nodeType": "YulBlock",
																"src": "6930:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6932:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6932:77:11"
																			},
																			"nativeSrc": "6932:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6932:79:11"
																		},
																		"nativeSrc": "6932:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6932:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6905:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6905:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6914:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6914:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6901:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6901:3:11"
																		},
																		"nativeSrc": "6901:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6901:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6926:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6897:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6897:3:11"
																},
																"nativeSrc": "6897:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6897:32:11"
															},
															"nativeSrc": "6894:119:11",
															"nodeType": "YulIf",
															"src": "6894:119:11"
														},
														{
															"nativeSrc": "7023:117:11",
															"nodeType": "YulBlock",
															"src": "7023:117:11",
															"statements": [
																{
																	"nativeSrc": "7038:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7038:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7052:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7052:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7042:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7042:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7067:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7067:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7102:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7102:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7113:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7113:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7098:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7098:3:11"
																				},
																				"nativeSrc": "7098:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7098:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7122:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7122:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "7077:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7077:20:11"
																		},
																		"nativeSrc": "7077:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7077:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7067:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7067:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7150:118:11",
															"nodeType": "YulBlock",
															"src": "7150:118:11",
															"statements": [
																{
																	"nativeSrc": "7165:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7165:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7179:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7179:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7169:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7169:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7195:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7195:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7230:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7230:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7241:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7241:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7226:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7226:3:11"
																				},
																				"nativeSrc": "7226:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7226:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7250:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7250:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7205:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7205:20:11"
																		},
																		"nativeSrc": "7205:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7205:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7195:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7195:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6801:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6846:9:11",
														"nodeType": "YulTypedName",
														"src": "6846:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6857:7:11",
														"nodeType": "YulTypedName",
														"src": "6857:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6869:6:11",
														"nodeType": "YulTypedName",
														"src": "6869:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6877:6:11",
														"nodeType": "YulTypedName",
														"src": "6877:6:11",
														"type": ""
													}
												],
												"src": "6801:474:11"
											},
											{
												"body": {
													"nativeSrc": "7324:43:11",
													"nodeType": "YulBlock",
													"src": "7324:43:11",
													"statements": [
														{
															"nativeSrc": "7334:27:11",
															"nodeType": "YulAssignment",
															"src": "7334:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7349:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7349:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7356:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7356:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7345:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7345:3:11"
																},
																"nativeSrc": "7345:16:11",
																"nodeType": "YulFunctionCall",
																"src": "7345:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7334:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "7334:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7281:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7306:5:11",
														"nodeType": "YulTypedName",
														"src": "7306:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7316:7:11",
														"nodeType": "YulTypedName",
														"src": "7316:7:11",
														"type": ""
													}
												],
												"src": "7281:86:11"
											},
											{
												"body": {
													"nativeSrc": "7434:51:11",
													"nodeType": "YulBlock",
													"src": "7434:51:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7451:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7451:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7472:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7472:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7456:15:11",
																			"nodeType": "YulIdentifier",
																			"src": "7456:15:11"
																		},
																		"nativeSrc": "7456:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7456:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7444:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7444:6:11"
																},
																"nativeSrc": "7444:35:11",
																"nodeType": "YulFunctionCall",
																"src": "7444:35:11"
															},
															"nativeSrc": "7444:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "7444:35:11"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7373:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7422:5:11",
														"nodeType": "YulTypedName",
														"src": "7422:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7429:3:11",
														"nodeType": "YulTypedName",
														"src": "7429:3:11",
														"type": ""
													}
												],
												"src": "7373:112:11"
											},
											{
												"body": {
													"nativeSrc": "7585:120:11",
													"nodeType": "YulBlock",
													"src": "7585:120:11",
													"statements": [
														{
															"nativeSrc": "7595:26:11",
															"nodeType": "YulAssignment",
															"src": "7595:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7607:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7607:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7618:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7618:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7603:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7603:3:11"
																},
																"nativeSrc": "7603:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7603:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7595:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7595:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7671:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7671:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7684:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7684:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7695:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7695:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7680:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7680:3:11"
																		},
																		"nativeSrc": "7680:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7680:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7631:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "7631:39:11"
																},
																"nativeSrc": "7631:67:11",
																"nodeType": "YulFunctionCall",
																"src": "7631:67:11"
															},
															"nativeSrc": "7631:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "7631:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7491:214:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7557:9:11",
														"nodeType": "YulTypedName",
														"src": "7557:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7569:6:11",
														"nodeType": "YulTypedName",
														"src": "7569:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7580:4:11",
														"nodeType": "YulTypedName",
														"src": "7580:4:11",
														"type": ""
													}
												],
												"src": "7491:214:11"
											},
											{
												"body": {
													"nativeSrc": "7777:263:11",
													"nodeType": "YulBlock",
													"src": "7777:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7823:83:11",
																"nodeType": "YulBlock",
																"src": "7823:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7825:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7825:77:11"
																			},
																			"nativeSrc": "7825:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7825:79:11"
																		},
																		"nativeSrc": "7825:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7825:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7798:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7798:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7807:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7807:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7794:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7794:3:11"
																		},
																		"nativeSrc": "7794:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7794:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7819:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7819:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7790:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7790:3:11"
																},
																"nativeSrc": "7790:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7790:32:11"
															},
															"nativeSrc": "7787:119:11",
															"nodeType": "YulIf",
															"src": "7787:119:11"
														},
														{
															"nativeSrc": "7916:117:11",
															"nodeType": "YulBlock",
															"src": "7916:117:11",
															"statements": [
																{
																	"nativeSrc": "7931:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7931:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7945:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7945:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7935:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7935:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7960:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7960:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7995:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7995:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8006:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8006:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7991:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7991:3:11"
																				},
																				"nativeSrc": "7991:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7991:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8015:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8015:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7970:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7970:20:11"
																		},
																		"nativeSrc": "7970:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7970:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7960:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7960:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7711:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7747:9:11",
														"nodeType": "YulTypedName",
														"src": "7747:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7758:7:11",
														"nodeType": "YulTypedName",
														"src": "7758:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7770:6:11",
														"nodeType": "YulTypedName",
														"src": "7770:6:11",
														"type": ""
													}
												],
												"src": "7711:329:11"
											},
											{
												"body": {
													"nativeSrc": "8129:391:11",
													"nodeType": "YulBlock",
													"src": "8129:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8175:83:11",
																"nodeType": "YulBlock",
																"src": "8175:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8177:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8177:77:11"
																			},
																			"nativeSrc": "8177:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8177:79:11"
																		},
																		"nativeSrc": "8177:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8177:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8150:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8150:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8159:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8159:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8146:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8146:3:11"
																		},
																		"nativeSrc": "8146:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8146:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8171:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8171:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8142:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8142:3:11"
																},
																"nativeSrc": "8142:32:11",
																"nodeType": "YulFunctionCall",
																"src": "8142:32:11"
															},
															"nativeSrc": "8139:119:11",
															"nodeType": "YulIf",
															"src": "8139:119:11"
														},
														{
															"nativeSrc": "8268:117:11",
															"nodeType": "YulBlock",
															"src": "8268:117:11",
															"statements": [
																{
																	"nativeSrc": "8283:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8283:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8297:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8297:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8287:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8287:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8312:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8312:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8347:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8347:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8358:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8358:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8343:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8343:3:11"
																				},
																				"nativeSrc": "8343:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8343:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8367:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8367:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8322:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8322:20:11"
																		},
																		"nativeSrc": "8322:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8322:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8312:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8312:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8395:118:11",
															"nodeType": "YulBlock",
															"src": "8395:118:11",
															"statements": [
																{
																	"nativeSrc": "8410:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8410:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8424:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8424:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8414:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8414:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8440:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8440:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8475:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8475:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8486:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8486:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8471:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8471:3:11"
																				},
																				"nativeSrc": "8471:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8471:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8495:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8495:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8450:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8450:20:11"
																		},
																		"nativeSrc": "8450:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8450:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8440:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8440:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8046:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8091:9:11",
														"nodeType": "YulTypedName",
														"src": "8091:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8102:7:11",
														"nodeType": "YulTypedName",
														"src": "8102:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8114:6:11",
														"nodeType": "YulTypedName",
														"src": "8114:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8122:6:11",
														"nodeType": "YulTypedName",
														"src": "8122:6:11",
														"type": ""
													}
												],
												"src": "8046:474:11"
											},
											{
												"body": {
													"nativeSrc": "8554:152:11",
													"nodeType": "YulBlock",
													"src": "8554:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8571:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8571:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8574:77:11",
																		"nodeType": "YulLiteral",
																		"src": "8574:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8564:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8564:6:11"
																},
																"nativeSrc": "8564:88:11",
																"nodeType": "YulFunctionCall",
																"src": "8564:88:11"
															},
															"nativeSrc": "8564:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "8564:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8668:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8668:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8671:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8671:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8661:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8661:6:11"
																},
																"nativeSrc": "8661:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8661:15:11"
															},
															"nativeSrc": "8661:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8661:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8692:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8692:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8695:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8695:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8685:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8685:6:11"
																},
																"nativeSrc": "8685:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8685:15:11"
															},
															"nativeSrc": "8685:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8685:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8526:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "8526:180:11"
											},
											{
												"body": {
													"nativeSrc": "8763:269:11",
													"nodeType": "YulBlock",
													"src": "8763:269:11",
													"statements": [
														{
															"nativeSrc": "8773:22:11",
															"nodeType": "YulAssignment",
															"src": "8773:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8787:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8787:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8793:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8793:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8783:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8783:3:11"
																},
																"nativeSrc": "8783:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8783:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8773:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8773:6:11"
																}
															]
														},
														{
															"nativeSrc": "8804:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8804:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8834:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8834:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8840:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8840:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8830:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8830:3:11"
																},
																"nativeSrc": "8830:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8830:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8808:18:11",
																	"nodeType": "YulTypedName",
																	"src": "8808:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8881:51:11",
																"nodeType": "YulBlock",
																"src": "8881:51:11",
																"statements": [
																	{
																		"nativeSrc": "8895:27:11",
																		"nodeType": "YulAssignment",
																		"src": "8895:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8909:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "8909:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8917:4:11",
																					"nodeType": "YulLiteral",
																					"src": "8917:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8905:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8905:3:11"
																			},
																			"nativeSrc": "8905:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8905:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8895:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8895:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8861:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "8861:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8854:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8854:6:11"
																},
																"nativeSrc": "8854:26:11",
																"nodeType": "YulFunctionCall",
																"src": "8854:26:11"
															},
															"nativeSrc": "8851:81:11",
															"nodeType": "YulIf",
															"src": "8851:81:11"
														},
														{
															"body": {
																"nativeSrc": "8984:42:11",
																"nodeType": "YulBlock",
																"src": "8984:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8998:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8998:16:11"
																			},
																			"nativeSrc": "8998:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8998:18:11"
																		},
																		"nativeSrc": "8998:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8998:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8948:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "8948:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8971:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8971:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8979:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8979:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8968:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "8968:2:11"
																		},
																		"nativeSrc": "8968:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8968:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8945:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8945:2:11"
																},
																"nativeSrc": "8945:38:11",
																"nodeType": "YulFunctionCall",
																"src": "8945:38:11"
															},
															"nativeSrc": "8942:84:11",
															"nodeType": "YulIf",
															"src": "8942:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8712:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8747:4:11",
														"nodeType": "YulTypedName",
														"src": "8747:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8756:6:11",
														"nodeType": "YulTypedName",
														"src": "8756:6:11",
														"type": ""
													}
												],
												"src": "8712:320:11"
											},
											{
												"body": {
													"nativeSrc": "9144:64:11",
													"nodeType": "YulBlock",
													"src": "9144:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9166:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9166:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9174:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9174:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9162:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9162:3:11"
																		},
																		"nativeSrc": "9162:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9162:14:11"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "9178:22:11",
																		"nodeType": "YulLiteral",
																		"src": "9178:22:11",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9155:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9155:6:11"
																},
																"nativeSrc": "9155:46:11",
																"nodeType": "YulFunctionCall",
																"src": "9155:46:11"
															},
															"nativeSrc": "9155:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "9155:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "9038:170:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9136:6:11",
														"nodeType": "YulTypedName",
														"src": "9136:6:11",
														"type": ""
													}
												],
												"src": "9038:170:11"
											},
											{
												"body": {
													"nativeSrc": "9360:220:11",
													"nodeType": "YulBlock",
													"src": "9360:220:11",
													"statements": [
														{
															"nativeSrc": "9370:74:11",
															"nodeType": "YulAssignment",
															"src": "9370:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9436:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9436:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9441:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9441:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9377:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "9377:58:11"
																},
																"nativeSrc": "9377:67:11",
																"nodeType": "YulFunctionCall",
																"src": "9377:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9370:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9370:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9542:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9542:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "9453:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "9453:88:11"
																},
																"nativeSrc": "9453:93:11",
																"nodeType": "YulFunctionCall",
																"src": "9453:93:11"
															},
															"nativeSrc": "9453:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "9453:93:11"
														},
														{
															"nativeSrc": "9555:19:11",
															"nodeType": "YulAssignment",
															"src": "9555:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9566:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9566:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9571:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9571:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9562:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9562:3:11"
																},
																"nativeSrc": "9562:12:11",
																"nodeType": "YulFunctionCall",
																"src": "9562:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9555:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9555:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9214:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9348:3:11",
														"nodeType": "YulTypedName",
														"src": "9348:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9356:3:11",
														"nodeType": "YulTypedName",
														"src": "9356:3:11",
														"type": ""
													}
												],
												"src": "9214:366:11"
											},
											{
												"body": {
													"nativeSrc": "9757:248:11",
													"nodeType": "YulBlock",
													"src": "9757:248:11",
													"statements": [
														{
															"nativeSrc": "9767:26:11",
															"nodeType": "YulAssignment",
															"src": "9767:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9779:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9779:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9790:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9790:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9775:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9775:3:11"
																},
																"nativeSrc": "9775:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9775:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9767:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9767:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9814:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9814:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9825:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9825:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9810:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9810:3:11"
																		},
																		"nativeSrc": "9810:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9810:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9833:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "9833:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9839:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9839:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9829:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9829:3:11"
																		},
																		"nativeSrc": "9829:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9829:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9803:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9803:6:11"
																},
																"nativeSrc": "9803:47:11",
																"nodeType": "YulFunctionCall",
																"src": "9803:47:11"
															},
															"nativeSrc": "9803:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "9803:47:11"
														},
														{
															"nativeSrc": "9859:139:11",
															"nodeType": "YulAssignment",
															"src": "9859:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9993:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "9993:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9867:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "9867:124:11"
																},
																"nativeSrc": "9867:131:11",
																"nodeType": "YulFunctionCall",
																"src": "9867:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9859:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9859:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9586:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9737:9:11",
														"nodeType": "YulTypedName",
														"src": "9737:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9752:4:11",
														"nodeType": "YulTypedName",
														"src": "9752:4:11",
														"type": ""
													}
												],
												"src": "9586:419:11"
											},
											{
												"body": {
													"nativeSrc": "10117:66:11",
													"nodeType": "YulBlock",
													"src": "10117:66:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10139:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10139:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10147:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10147:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10135:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10135:3:11"
																		},
																		"nativeSrc": "10135:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10135:14:11"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742061206d656d626572",
																		"kind": "string",
																		"nativeSrc": "10151:24:11",
																		"nodeType": "YulLiteral",
																		"src": "10151:24:11",
																		"type": "",
																		"value": "Caller is not a member"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10128:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10128:6:11"
																},
																"nativeSrc": "10128:48:11",
																"nodeType": "YulFunctionCall",
																"src": "10128:48:11"
															},
															"nativeSrc": "10128:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "10128:48:11"
														}
													]
												},
												"name": "store_literal_in_memory_5cbd542351d7fdfb7f89b17d4ac17a7a16041856bb9eaf5833ca04c408480857",
												"nativeSrc": "10011:172:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10109:6:11",
														"nodeType": "YulTypedName",
														"src": "10109:6:11",
														"type": ""
													}
												],
												"src": "10011:172:11"
											},
											{
												"body": {
													"nativeSrc": "10335:220:11",
													"nodeType": "YulBlock",
													"src": "10335:220:11",
													"statements": [
														{
															"nativeSrc": "10345:74:11",
															"nodeType": "YulAssignment",
															"src": "10345:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10411:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10411:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10416:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10416:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10352:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "10352:58:11"
																},
																"nativeSrc": "10352:67:11",
																"nodeType": "YulFunctionCall",
																"src": "10352:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10345:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10345:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10517:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10517:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5cbd542351d7fdfb7f89b17d4ac17a7a16041856bb9eaf5833ca04c408480857",
																	"nativeSrc": "10428:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "10428:88:11"
																},
																"nativeSrc": "10428:93:11",
																"nodeType": "YulFunctionCall",
																"src": "10428:93:11"
															},
															"nativeSrc": "10428:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "10428:93:11"
														},
														{
															"nativeSrc": "10530:19:11",
															"nodeType": "YulAssignment",
															"src": "10530:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10541:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10541:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10546:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10546:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10537:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10537:3:11"
																},
																"nativeSrc": "10537:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10537:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10530:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10530:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5cbd542351d7fdfb7f89b17d4ac17a7a16041856bb9eaf5833ca04c408480857_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10189:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10323:3:11",
														"nodeType": "YulTypedName",
														"src": "10323:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10331:3:11",
														"nodeType": "YulTypedName",
														"src": "10331:3:11",
														"type": ""
													}
												],
												"src": "10189:366:11"
											},
											{
												"body": {
													"nativeSrc": "10732:248:11",
													"nodeType": "YulBlock",
													"src": "10732:248:11",
													"statements": [
														{
															"nativeSrc": "10742:26:11",
															"nodeType": "YulAssignment",
															"src": "10742:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10754:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10754:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10765:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10765:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10750:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10750:3:11"
																},
																"nativeSrc": "10750:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10750:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10742:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10742:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10789:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10789:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10800:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10800:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10785:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10785:3:11"
																		},
																		"nativeSrc": "10785:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10785:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10808:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "10808:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10814:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10814:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10804:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10804:3:11"
																		},
																		"nativeSrc": "10804:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10804:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10778:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10778:6:11"
																},
																"nativeSrc": "10778:47:11",
																"nodeType": "YulFunctionCall",
																"src": "10778:47:11"
															},
															"nativeSrc": "10778:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "10778:47:11"
														},
														{
															"nativeSrc": "10834:139:11",
															"nodeType": "YulAssignment",
															"src": "10834:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10968:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10968:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5cbd542351d7fdfb7f89b17d4ac17a7a16041856bb9eaf5833ca04c408480857_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10842:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "10842:124:11"
																},
																"nativeSrc": "10842:131:11",
																"nodeType": "YulFunctionCall",
																"src": "10842:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10834:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10834:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5cbd542351d7fdfb7f89b17d4ac17a7a16041856bb9eaf5833ca04c408480857__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10561:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10712:9:11",
														"nodeType": "YulTypedName",
														"src": "10712:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10727:4:11",
														"nodeType": "YulTypedName",
														"src": "10727:4:11",
														"type": ""
													}
												],
												"src": "10561:419:11"
											},
											{
												"body": {
													"nativeSrc": "11014:152:11",
													"nodeType": "YulBlock",
													"src": "11014:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11031:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11031:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11034:77:11",
																		"nodeType": "YulLiteral",
																		"src": "11034:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11024:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11024:6:11"
																},
																"nativeSrc": "11024:88:11",
																"nodeType": "YulFunctionCall",
																"src": "11024:88:11"
															},
															"nativeSrc": "11024:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "11024:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11128:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11128:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11131:4:11",
																		"nodeType": "YulLiteral",
																		"src": "11131:4:11",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11121:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11121:6:11"
																},
																"nativeSrc": "11121:15:11",
																"nodeType": "YulFunctionCall",
																"src": "11121:15:11"
															},
															"nativeSrc": "11121:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "11121:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11152:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11152:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11155:4:11",
																		"nodeType": "YulLiteral",
																		"src": "11155:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11145:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11145:6:11"
																},
																"nativeSrc": "11145:15:11",
																"nodeType": "YulFunctionCall",
																"src": "11145:15:11"
															},
															"nativeSrc": "11145:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "11145:15:11"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "10986:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "10986:180:11"
											},
											{
												"body": {
													"nativeSrc": "11278:67:11",
													"nodeType": "YulBlock",
													"src": "11278:67:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11300:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11300:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11308:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11308:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11296:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11296:3:11"
																		},
																		"nativeSrc": "11296:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11296:14:11"
																	},
																	{
																		"hexValue": "496e76616c6964206d656d626572736869702074797065",
																		"kind": "string",
																		"nativeSrc": "11312:25:11",
																		"nodeType": "YulLiteral",
																		"src": "11312:25:11",
																		"type": "",
																		"value": "Invalid membership type"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11289:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11289:6:11"
																},
																"nativeSrc": "11289:49:11",
																"nodeType": "YulFunctionCall",
																"src": "11289:49:11"
															},
															"nativeSrc": "11289:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "11289:49:11"
														}
													]
												},
												"name": "store_literal_in_memory_b89e19d8ece4c02a72d5a02c02781c01f06d56f014875c79921678b2ba553b29",
												"nativeSrc": "11172:173:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11270:6:11",
														"nodeType": "YulTypedName",
														"src": "11270:6:11",
														"type": ""
													}
												],
												"src": "11172:173:11"
											},
											{
												"body": {
													"nativeSrc": "11497:220:11",
													"nodeType": "YulBlock",
													"src": "11497:220:11",
													"statements": [
														{
															"nativeSrc": "11507:74:11",
															"nodeType": "YulAssignment",
															"src": "11507:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11573:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11573:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11578:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11578:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11514:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "11514:58:11"
																},
																"nativeSrc": "11514:67:11",
																"nodeType": "YulFunctionCall",
																"src": "11514:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11507:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11507:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11679:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11679:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b89e19d8ece4c02a72d5a02c02781c01f06d56f014875c79921678b2ba553b29",
																	"nativeSrc": "11590:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "11590:88:11"
																},
																"nativeSrc": "11590:93:11",
																"nodeType": "YulFunctionCall",
																"src": "11590:93:11"
															},
															"nativeSrc": "11590:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "11590:93:11"
														},
														{
															"nativeSrc": "11692:19:11",
															"nodeType": "YulAssignment",
															"src": "11692:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11703:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11703:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11708:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11708:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11699:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11699:3:11"
																},
																"nativeSrc": "11699:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11699:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11692:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11692:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b89e19d8ece4c02a72d5a02c02781c01f06d56f014875c79921678b2ba553b29_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11351:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11485:3:11",
														"nodeType": "YulTypedName",
														"src": "11485:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11493:3:11",
														"nodeType": "YulTypedName",
														"src": "11493:3:11",
														"type": ""
													}
												],
												"src": "11351:366:11"
											},
											{
												"body": {
													"nativeSrc": "11894:248:11",
													"nodeType": "YulBlock",
													"src": "11894:248:11",
													"statements": [
														{
															"nativeSrc": "11904:26:11",
															"nodeType": "YulAssignment",
															"src": "11904:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11916:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11916:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11927:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11927:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11912:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11912:3:11"
																},
																"nativeSrc": "11912:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11912:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11904:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11904:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11951:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11951:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11962:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11962:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11947:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11947:3:11"
																		},
																		"nativeSrc": "11947:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11947:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11970:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11970:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11976:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11976:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11966:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11966:3:11"
																		},
																		"nativeSrc": "11966:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11966:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11940:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11940:6:11"
																},
																"nativeSrc": "11940:47:11",
																"nodeType": "YulFunctionCall",
																"src": "11940:47:11"
															},
															"nativeSrc": "11940:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "11940:47:11"
														},
														{
															"nativeSrc": "11996:139:11",
															"nodeType": "YulAssignment",
															"src": "11996:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12130:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12130:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b89e19d8ece4c02a72d5a02c02781c01f06d56f014875c79921678b2ba553b29_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12004:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "12004:124:11"
																},
																"nativeSrc": "12004:131:11",
																"nodeType": "YulFunctionCall",
																"src": "12004:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11996:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11996:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b89e19d8ece4c02a72d5a02c02781c01f06d56f014875c79921678b2ba553b29__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11723:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11874:9:11",
														"nodeType": "YulTypedName",
														"src": "11874:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11889:4:11",
														"nodeType": "YulTypedName",
														"src": "11889:4:11",
														"type": ""
													}
												],
												"src": "11723:419:11"
											},
											{
												"body": {
													"nativeSrc": "12176:152:11",
													"nodeType": "YulBlock",
													"src": "12176:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12193:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12193:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12196:77:11",
																		"nodeType": "YulLiteral",
																		"src": "12196:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12186:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12186:6:11"
																},
																"nativeSrc": "12186:88:11",
																"nodeType": "YulFunctionCall",
																"src": "12186:88:11"
															},
															"nativeSrc": "12186:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "12186:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12290:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12290:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12293:4:11",
																		"nodeType": "YulLiteral",
																		"src": "12293:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12283:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12283:6:11"
																},
																"nativeSrc": "12283:15:11",
																"nodeType": "YulFunctionCall",
																"src": "12283:15:11"
															},
															"nativeSrc": "12283:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "12283:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12314:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12314:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12317:4:11",
																		"nodeType": "YulLiteral",
																		"src": "12317:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12307:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12307:6:11"
																},
																"nativeSrc": "12307:15:11",
																"nodeType": "YulFunctionCall",
																"src": "12307:15:11"
															},
															"nativeSrc": "12307:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "12307:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12148:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "12148:180:11"
											},
											{
												"body": {
													"nativeSrc": "12378:147:11",
													"nodeType": "YulBlock",
													"src": "12378:147:11",
													"statements": [
														{
															"nativeSrc": "12388:25:11",
															"nodeType": "YulAssignment",
															"src": "12388:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12411:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12411:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12393:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12393:17:11"
																},
																"nativeSrc": "12393:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12393:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12388:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12388:1:11"
																}
															]
														},
														{
															"nativeSrc": "12422:25:11",
															"nodeType": "YulAssignment",
															"src": "12422:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12445:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12445:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12427:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12427:17:11"
																},
																"nativeSrc": "12427:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12427:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12422:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12422:1:11"
																}
															]
														},
														{
															"nativeSrc": "12456:16:11",
															"nodeType": "YulAssignment",
															"src": "12456:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12467:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12467:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12470:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12470:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12463:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12463:3:11"
																},
																"nativeSrc": "12463:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12463:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12456:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12456:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12496:22:11",
																"nodeType": "YulBlock",
																"src": "12496:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12498:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "12498:16:11"
																			},
																			"nativeSrc": "12498:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12498:18:11"
																		},
																		"nativeSrc": "12498:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12498:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12488:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12488:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12491:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12491:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12485:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "12485:2:11"
																},
																"nativeSrc": "12485:10:11",
																"nodeType": "YulFunctionCall",
																"src": "12485:10:11"
															},
															"nativeSrc": "12482:36:11",
															"nodeType": "YulIf",
															"src": "12482:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12334:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12365:1:11",
														"nodeType": "YulTypedName",
														"src": "12365:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12368:1:11",
														"nodeType": "YulTypedName",
														"src": "12368:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12374:3:11",
														"nodeType": "YulTypedName",
														"src": "12374:3:11",
														"type": ""
													}
												],
												"src": "12334:191:11"
											},
											{
												"body": {
													"nativeSrc": "12594:62:11",
													"nodeType": "YulBlock",
													"src": "12594:62:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "12628:22:11",
																"nodeType": "YulBlock",
																"src": "12628:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "12630:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "12630:16:11"
																			},
																			"nativeSrc": "12630:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12630:18:11"
																		},
																		"nativeSrc": "12630:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12630:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12617:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "12617:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12624:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12624:1:11",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12614:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "12614:2:11"
																		},
																		"nativeSrc": "12614:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12614:12:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12607:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12607:6:11"
																},
																"nativeSrc": "12607:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12607:20:11"
															},
															"nativeSrc": "12604:46:11",
															"nodeType": "YulIf",
															"src": "12604:46:11"
														}
													]
												},
												"name": "validator_assert_t_enum$_MEMBERSHIP_TYPE_$1362",
												"nativeSrc": "12531:125:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12587:5:11",
														"nodeType": "YulTypedName",
														"src": "12587:5:11",
														"type": ""
													}
												],
												"src": "12531:125:11"
											},
											{
												"body": {
													"nativeSrc": "12727:86:11",
													"nodeType": "YulBlock",
													"src": "12727:86:11",
													"statements": [
														{
															"nativeSrc": "12737:16:11",
															"nodeType": "YulAssignment",
															"src": "12737:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "12748:5:11",
																"nodeType": "YulIdentifier",
																"src": "12748:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12737:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "12737:7:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12801:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "12801:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_MEMBERSHIP_TYPE_$1362",
																	"nativeSrc": "12754:46:11",
																	"nodeType": "YulIdentifier",
																	"src": "12754:46:11"
																},
																"nativeSrc": "12754:53:11",
																"nodeType": "YulFunctionCall",
																"src": "12754:53:11"
															},
															"nativeSrc": "12754:53:11",
															"nodeType": "YulExpressionStatement",
															"src": "12754:53:11"
														}
													]
												},
												"name": "cleanup_t_enum$_MEMBERSHIP_TYPE_$1362",
												"nativeSrc": "12662:151:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12709:5:11",
														"nodeType": "YulTypedName",
														"src": "12709:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12719:7:11",
														"nodeType": "YulTypedName",
														"src": "12719:7:11",
														"type": ""
													}
												],
												"src": "12662:151:11"
											},
											{
												"body": {
													"nativeSrc": "12897:73:11",
													"nodeType": "YulBlock",
													"src": "12897:73:11",
													"statements": [
														{
															"nativeSrc": "12907:57:11",
															"nodeType": "YulAssignment",
															"src": "12907:57:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12958:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "12958:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_MEMBERSHIP_TYPE_$1362",
																	"nativeSrc": "12920:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "12920:37:11"
																},
																"nativeSrc": "12920:44:11",
																"nodeType": "YulFunctionCall",
																"src": "12920:44:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12907:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "12907:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_MEMBERSHIP_TYPE_$1362_to_t_uint8",
												"nativeSrc": "12819:151:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12877:5:11",
														"nodeType": "YulTypedName",
														"src": "12877:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12887:9:11",
														"nodeType": "YulTypedName",
														"src": "12887:9:11",
														"type": ""
													}
												],
												"src": "12819:151:11"
											},
											{
												"body": {
													"nativeSrc": "13059:84:11",
													"nodeType": "YulBlock",
													"src": "13059:84:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13076:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13076:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13130:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "13130:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_MEMBERSHIP_TYPE_$1362_to_t_uint8",
																			"nativeSrc": "13081:48:11",
																			"nodeType": "YulIdentifier",
																			"src": "13081:48:11"
																		},
																		"nativeSrc": "13081:55:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13081:55:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13069:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13069:6:11"
																},
																"nativeSrc": "13069:68:11",
																"nodeType": "YulFunctionCall",
																"src": "13069:68:11"
															},
															"nativeSrc": "13069:68:11",
															"nodeType": "YulExpressionStatement",
															"src": "13069:68:11"
														}
													]
												},
												"name": "abi_encode_t_enum$_MEMBERSHIP_TYPE_$1362_to_t_uint8_fromStack",
												"nativeSrc": "12976:167:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13047:5:11",
														"nodeType": "YulTypedName",
														"src": "13047:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13054:3:11",
														"nodeType": "YulTypedName",
														"src": "13054:3:11",
														"type": ""
													}
												],
												"src": "12976:167:11"
											},
											{
												"body": {
													"nativeSrc": "13293:224:11",
													"nodeType": "YulBlock",
													"src": "13293:224:11",
													"statements": [
														{
															"nativeSrc": "13303:26:11",
															"nodeType": "YulAssignment",
															"src": "13303:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13315:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13315:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13326:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13326:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13311:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13311:3:11"
																},
																"nativeSrc": "13311:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13311:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13303:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13303:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13401:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13401:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13414:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13414:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13425:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13425:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13410:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13410:3:11"
																		},
																		"nativeSrc": "13410:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13410:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_MEMBERSHIP_TYPE_$1362_to_t_uint8_fromStack",
																	"nativeSrc": "13339:61:11",
																	"nodeType": "YulIdentifier",
																	"src": "13339:61:11"
																},
																"nativeSrc": "13339:89:11",
																"nodeType": "YulFunctionCall",
																"src": "13339:89:11"
															},
															"nativeSrc": "13339:89:11",
															"nodeType": "YulExpressionStatement",
															"src": "13339:89:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13482:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13482:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13495:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13495:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13506:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13506:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13491:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13491:3:11"
																		},
																		"nativeSrc": "13491:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13491:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13438:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13438:43:11"
																},
																"nativeSrc": "13438:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13438:72:11"
															},
															"nativeSrc": "13438:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13438:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_MEMBERSHIP_TYPE_$1362_t_uint256__to_t_uint8_t_uint256__fromStack_reversed",
												"nativeSrc": "13149:368:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13257:9:11",
														"nodeType": "YulTypedName",
														"src": "13257:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13269:6:11",
														"nodeType": "YulTypedName",
														"src": "13269:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13277:6:11",
														"nodeType": "YulTypedName",
														"src": "13277:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13288:4:11",
														"nodeType": "YulTypedName",
														"src": "13288:4:11",
														"type": ""
													}
												],
												"src": "13149:368:11"
											},
											{
												"body": {
													"nativeSrc": "13574:51:11",
													"nodeType": "YulBlock",
													"src": "13574:51:11",
													"statements": [
														{
															"nativeSrc": "13584:34:11",
															"nodeType": "YulAssignment",
															"src": "13584:34:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13609:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13609:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13612:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "13612:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "13605:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13605:3:11"
																},
																"nativeSrc": "13605:13:11",
																"nodeType": "YulFunctionCall",
																"src": "13605:13:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13584:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "13584:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "13523:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13555:5:11",
														"nodeType": "YulTypedName",
														"src": "13555:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13565:8:11",
														"nodeType": "YulTypedName",
														"src": "13565:8:11",
														"type": ""
													}
												],
												"src": "13523:102:11"
											},
											{
												"body": {
													"nativeSrc": "13704:775:11",
													"nodeType": "YulBlock",
													"src": "13704:775:11",
													"statements": [
														{
															"nativeSrc": "13714:15:11",
															"nodeType": "YulAssignment",
															"src": "13714:15:11",
															"value": {
																"name": "_power",
																"nativeSrc": "13723:6:11",
																"nodeType": "YulIdentifier",
																"src": "13723:6:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13714:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "13714:5:11"
																}
															]
														},
														{
															"nativeSrc": "13738:14:11",
															"nodeType": "YulAssignment",
															"src": "13738:14:11",
															"value": {
																"name": "_base",
																"nativeSrc": "13747:5:11",
																"nodeType": "YulIdentifier",
																"src": "13747:5:11"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "13738:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13738:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13796:677:11",
																"nodeType": "YulBlock",
																"src": "13796:677:11",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "13884:22:11",
																			"nodeType": "YulBlock",
																			"src": "13884:22:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "13886:16:11",
																							"nodeType": "YulIdentifier",
																							"src": "13886:16:11"
																						},
																						"nativeSrc": "13886:18:11",
																						"nodeType": "YulFunctionCall",
																						"src": "13886:18:11"
																					},
																					"nativeSrc": "13886:18:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "13886:18:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "13862:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "13862:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "13872:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "13872:3:11"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "13877:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "13877:4:11"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "13868:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "13868:3:11"
																					},
																					"nativeSrc": "13868:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "13868:14:11"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "13859:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "13859:2:11"
																			},
																			"nativeSrc": "13859:24:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13859:24:11"
																		},
																		"nativeSrc": "13856:50:11",
																		"nodeType": "YulIf",
																		"src": "13856:50:11"
																	},
																	{
																		"body": {
																			"nativeSrc": "13951:419:11",
																			"nodeType": "YulBlock",
																			"src": "13951:419:11",
																			"statements": [
																				{
																					"nativeSrc": "14331:25:11",
																					"nodeType": "YulAssignment",
																					"src": "14331:25:11",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "14344:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "14344:5:11"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "14351:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "14351:4:11"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "14340:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "14340:3:11"
																						},
																						"nativeSrc": "14340:16:11",
																						"nodeType": "YulFunctionCall",
																						"src": "14340:16:11"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "14331:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "14331:5:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "13926:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "13926:8:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13936:1:11",
																					"nodeType": "YulLiteral",
																					"src": "13936:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13922:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "13922:3:11"
																			},
																			"nativeSrc": "13922:16:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13922:16:11"
																		},
																		"nativeSrc": "13919:451:11",
																		"nodeType": "YulIf",
																		"src": "13919:451:11"
																	},
																	{
																		"nativeSrc": "14383:23:11",
																		"nodeType": "YulAssignment",
																		"src": "14383:23:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "14395:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "14395:4:11"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "14401:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "14401:4:11"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "14391:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "14391:3:11"
																			},
																			"nativeSrc": "14391:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14391:15:11"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "14383:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "14383:4:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14419:44:11",
																		"nodeType": "YulAssignment",
																		"src": "14419:44:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "14454:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "14454:8:11"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "14431:22:11",
																				"nodeType": "YulIdentifier",
																				"src": "14431:22:11"
																			},
																			"nativeSrc": "14431:32:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14431:32:11"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "14419:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "14419:8:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "13772:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "13772:8:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13782:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13782:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13769:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "13769:2:11"
																},
																"nativeSrc": "13769:15:11",
																"nodeType": "YulFunctionCall",
																"src": "13769:15:11"
															},
															"nativeSrc": "13761:712:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13785:2:11",
																"nodeType": "YulBlock",
																"src": "13785:2:11",
																"statements": []
															},
															"pre": {
																"nativeSrc": "13765:3:11",
																"nodeType": "YulBlock",
																"src": "13765:3:11",
																"statements": []
															},
															"src": "13761:712:11"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "13631:848:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "13659:6:11",
														"nodeType": "YulTypedName",
														"src": "13659:6:11",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "13667:5:11",
														"nodeType": "YulTypedName",
														"src": "13667:5:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "13674:8:11",
														"nodeType": "YulTypedName",
														"src": "13674:8:11",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "13684:3:11",
														"nodeType": "YulTypedName",
														"src": "13684:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "13692:5:11",
														"nodeType": "YulTypedName",
														"src": "13692:5:11",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "13699:4:11",
														"nodeType": "YulTypedName",
														"src": "13699:4:11",
														"type": ""
													}
												],
												"src": "13631:848:11"
											},
											{
												"body": {
													"nativeSrc": "14545:1013:11",
													"nodeType": "YulBlock",
													"src": "14545:1013:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "14740:20:11",
																"nodeType": "YulBlock",
																"src": "14740:20:11",
																"statements": [
																	{
																		"nativeSrc": "14742:10:11",
																		"nodeType": "YulAssignment",
																		"src": "14742:10:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14751:1:11",
																			"nodeType": "YulLiteral",
																			"src": "14751:1:11",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14742:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "14742:5:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14753:5:11",
																		"nodeType": "YulLeave",
																		"src": "14753:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "14730:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "14730:8:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14723:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14723:6:11"
																},
																"nativeSrc": "14723:16:11",
																"nodeType": "YulFunctionCall",
																"src": "14723:16:11"
															},
															"nativeSrc": "14720:40:11",
															"nodeType": "YulIf",
															"src": "14720:40:11"
														},
														{
															"body": {
																"nativeSrc": "14785:20:11",
																"nodeType": "YulBlock",
																"src": "14785:20:11",
																"statements": [
																	{
																		"nativeSrc": "14787:10:11",
																		"nodeType": "YulAssignment",
																		"src": "14787:10:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14796:1:11",
																			"nodeType": "YulLiteral",
																			"src": "14796:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14787:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "14787:5:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14798:5:11",
																		"nodeType": "YulLeave",
																		"src": "14798:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "14779:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "14779:4:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14772:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14772:6:11"
																},
																"nativeSrc": "14772:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14772:12:11"
															},
															"nativeSrc": "14769:36:11",
															"nodeType": "YulIf",
															"src": "14769:36:11"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "14915:20:11",
																		"nodeType": "YulBlock",
																		"src": "14915:20:11",
																		"statements": [
																			{
																				"nativeSrc": "14917:10:11",
																				"nodeType": "YulAssignment",
																				"src": "14917:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "14926:1:11",
																					"nodeType": "YulLiteral",
																					"src": "14926:1:11",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "14917:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "14917:5:11"
																					}
																				]
																			},
																			{
																				"nativeSrc": "14928:5:11",
																				"nodeType": "YulLeave",
																				"src": "14928:5:11"
																			}
																		]
																	},
																	"nativeSrc": "14908:27:11",
																	"nodeType": "YulCase",
																	"src": "14908:27:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14913:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14913:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "14959:176:11",
																		"nodeType": "YulBlock",
																		"src": "14959:176:11",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "14994:22:11",
																					"nodeType": "YulBlock",
																					"src": "14994:22:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "14996:16:11",
																									"nodeType": "YulIdentifier",
																									"src": "14996:16:11"
																								},
																								"nativeSrc": "14996:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "14996:18:11"
																							},
																							"nativeSrc": "14996:18:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "14996:18:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "14979:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "14979:8:11"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "14989:3:11",
																							"nodeType": "YulLiteral",
																							"src": "14989:3:11",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "14976:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "14976:2:11"
																					},
																					"nativeSrc": "14976:17:11",
																					"nodeType": "YulFunctionCall",
																					"src": "14976:17:11"
																				},
																				"nativeSrc": "14973:43:11",
																				"nodeType": "YulIf",
																				"src": "14973:43:11"
																			},
																			{
																				"nativeSrc": "15029:25:11",
																				"nodeType": "YulAssignment",
																				"src": "15029:25:11",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "15042:1:11",
																							"nodeType": "YulLiteral",
																							"src": "15042:1:11",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "15045:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "15045:8:11"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "15038:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "15038:3:11"
																					},
																					"nativeSrc": "15038:16:11",
																					"nodeType": "YulFunctionCall",
																					"src": "15038:16:11"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "15029:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "15029:5:11"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "15085:22:11",
																					"nodeType": "YulBlock",
																					"src": "15085:22:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "15087:16:11",
																									"nodeType": "YulIdentifier",
																									"src": "15087:16:11"
																								},
																								"nativeSrc": "15087:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "15087:18:11"
																							},
																							"nativeSrc": "15087:18:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "15087:18:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "15073:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "15073:5:11"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "15080:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "15080:3:11"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "15070:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "15070:2:11"
																					},
																					"nativeSrc": "15070:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "15070:14:11"
																				},
																				"nativeSrc": "15067:40:11",
																				"nodeType": "YulIf",
																				"src": "15067:40:11"
																			},
																			{
																				"nativeSrc": "15120:5:11",
																				"nodeType": "YulLeave",
																				"src": "15120:5:11"
																			}
																		]
																	},
																	"nativeSrc": "14944:191:11",
																	"nodeType": "YulCase",
																	"src": "14944:191:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14949:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14949:1:11",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "14865:4:11",
																"nodeType": "YulIdentifier",
																"src": "14865:4:11"
															},
															"nativeSrc": "14858:277:11",
															"nodeType": "YulSwitch",
															"src": "14858:277:11"
														},
														{
															"body": {
																"nativeSrc": "15267:123:11",
																"nodeType": "YulBlock",
																"src": "15267:123:11",
																"statements": [
																	{
																		"nativeSrc": "15281:28:11",
																		"nodeType": "YulAssignment",
																		"src": "15281:28:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "15294:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "15294:4:11"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "15300:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "15300:8:11"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "15290:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "15290:3:11"
																			},
																			"nativeSrc": "15290:19:11",
																			"nodeType": "YulFunctionCall",
																			"src": "15290:19:11"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "15281:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "15281:5:11"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15340:22:11",
																			"nodeType": "YulBlock",
																			"src": "15340:22:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "15342:16:11",
																							"nodeType": "YulIdentifier",
																							"src": "15342:16:11"
																						},
																						"nativeSrc": "15342:18:11",
																						"nodeType": "YulFunctionCall",
																						"src": "15342:18:11"
																					},
																					"nativeSrc": "15342:18:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "15342:18:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "15328:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "15328:5:11"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "15335:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "15335:3:11"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "15325:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "15325:2:11"
																			},
																			"nativeSrc": "15325:14:11",
																			"nodeType": "YulFunctionCall",
																			"src": "15325:14:11"
																		},
																		"nativeSrc": "15322:40:11",
																		"nodeType": "YulIf",
																		"src": "15322:40:11"
																	},
																	{
																		"nativeSrc": "15375:5:11",
																		"nodeType": "YulLeave",
																		"src": "15375:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "15170:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "15170:4:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15176:2:11",
																						"nodeType": "YulLiteral",
																						"src": "15176:2:11",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15167:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "15167:2:11"
																				},
																				"nativeSrc": "15167:12:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15167:12:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "15184:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "15184:8:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15194:2:11",
																						"nodeType": "YulLiteral",
																						"src": "15194:2:11",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15181:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "15181:2:11"
																				},
																				"nativeSrc": "15181:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15181:16:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15163:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15163:3:11"
																		},
																		"nativeSrc": "15163:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15163:35:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "15219:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "15219:4:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15225:3:11",
																						"nodeType": "YulLiteral",
																						"src": "15225:3:11",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15216:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "15216:2:11"
																				},
																				"nativeSrc": "15216:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15216:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "15234:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "15234:8:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15244:2:11",
																						"nodeType": "YulLiteral",
																						"src": "15244:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15231:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "15231:2:11"
																				},
																				"nativeSrc": "15231:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15231:16:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15212:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15212:3:11"
																		},
																		"nativeSrc": "15212:36:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15212:36:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15147:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "15147:2:11"
																},
																"nativeSrc": "15147:111:11",
																"nodeType": "YulFunctionCall",
																"src": "15147:111:11"
															},
															"nativeSrc": "15144:246:11",
															"nodeType": "YulIf",
															"src": "15144:246:11"
														},
														{
															"nativeSrc": "15400:57:11",
															"nodeType": "YulAssignment",
															"src": "15400:57:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15434:1:11",
																		"nodeType": "YulLiteral",
																		"src": "15434:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "15437:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "15437:4:11"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "15443:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "15443:8:11"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "15453:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15453:3:11"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "15415:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "15415:18:11"
																},
																"nativeSrc": "15415:42:11",
																"nodeType": "YulFunctionCall",
																"src": "15415:42:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15400:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "15400:5:11"
																},
																{
																	"name": "base",
																	"nativeSrc": "15407:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15407:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15496:22:11",
																"nodeType": "YulBlock",
																"src": "15496:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15498:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "15498:16:11"
																			},
																			"nativeSrc": "15498:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "15498:18:11"
																		},
																		"nativeSrc": "15498:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "15498:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "15473:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "15473:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "15484:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "15484:3:11"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "15489:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "15489:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "15480:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15480:3:11"
																		},
																		"nativeSrc": "15480:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15480:14:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15470:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "15470:2:11"
																},
																"nativeSrc": "15470:25:11",
																"nodeType": "YulFunctionCall",
																"src": "15470:25:11"
															},
															"nativeSrc": "15467:51:11",
															"nodeType": "YulIf",
															"src": "15467:51:11"
														},
														{
															"nativeSrc": "15527:25:11",
															"nodeType": "YulAssignment",
															"src": "15527:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "15540:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "15540:5:11"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "15547:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "15547:4:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15536:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15536:3:11"
																},
																"nativeSrc": "15536:16:11",
																"nodeType": "YulFunctionCall",
																"src": "15536:16:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15527:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "15527:5:11"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "14485:1073:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "14515:4:11",
														"nodeType": "YulTypedName",
														"src": "14515:4:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "14521:8:11",
														"nodeType": "YulTypedName",
														"src": "14521:8:11",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "14531:3:11",
														"nodeType": "YulTypedName",
														"src": "14531:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "14539:5:11",
														"nodeType": "YulTypedName",
														"src": "14539:5:11",
														"type": ""
													}
												],
												"src": "14485:1073:11"
											},
											{
												"body": {
													"nativeSrc": "15628:217:11",
													"nodeType": "YulBlock",
													"src": "15628:217:11",
													"statements": [
														{
															"nativeSrc": "15638:31:11",
															"nodeType": "YulAssignment",
															"src": "15638:31:11",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "15664:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "15664:4:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15646:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "15646:17:11"
																},
																"nativeSrc": "15646:23:11",
																"nodeType": "YulFunctionCall",
																"src": "15646:23:11"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "15638:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15638:4:11"
																}
															]
														},
														{
															"nativeSrc": "15678:37:11",
															"nodeType": "YulAssignment",
															"src": "15678:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "15706:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "15706:8:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "15690:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "15690:15:11"
																},
																"nativeSrc": "15690:25:11",
																"nodeType": "YulFunctionCall",
																"src": "15690:25:11"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "15678:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "15678:8:11"
																}
															]
														},
														{
															"nativeSrc": "15725:113:11",
															"nodeType": "YulAssignment",
															"src": "15725:113:11",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "15755:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "15755:4:11"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "15761:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "15761:8:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15771:66:11",
																		"nodeType": "YulLiteral",
																		"src": "15771:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "15734:20:11",
																	"nodeType": "YulIdentifier",
																	"src": "15734:20:11"
																},
																"nativeSrc": "15734:104:11",
																"nodeType": "YulFunctionCall",
																"src": "15734:104:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15725:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "15725:5:11"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "15564:281:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "15603:4:11",
														"nodeType": "YulTypedName",
														"src": "15603:4:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "15609:8:11",
														"nodeType": "YulTypedName",
														"src": "15609:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "15622:5:11",
														"nodeType": "YulTypedName",
														"src": "15622:5:11",
														"type": ""
													}
												],
												"src": "15564:281:11"
											},
											{
												"body": {
													"nativeSrc": "15899:362:11",
													"nodeType": "YulBlock",
													"src": "15899:362:11",
													"statements": [
														{
															"nativeSrc": "15909:25:11",
															"nodeType": "YulAssignment",
															"src": "15909:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15932:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "15932:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15914:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "15914:17:11"
																},
																"nativeSrc": "15914:20:11",
																"nodeType": "YulFunctionCall",
																"src": "15914:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15909:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "15909:1:11"
																}
															]
														},
														{
															"nativeSrc": "15943:25:11",
															"nodeType": "YulAssignment",
															"src": "15943:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15966:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "15966:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15948:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "15948:17:11"
																},
																"nativeSrc": "15948:20:11",
																"nodeType": "YulFunctionCall",
																"src": "15948:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15943:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "15943:1:11"
																}
															]
														},
														{
															"nativeSrc": "15977:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "15977:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16000:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "16000:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16003:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "16003:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15996:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15996:3:11"
																},
																"nativeSrc": "15996:9:11",
																"nodeType": "YulFunctionCall",
																"src": "15996:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "15981:11:11",
																	"nodeType": "YulTypedName",
																	"src": "15981:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16014:41:11",
															"nodeType": "YulAssignment",
															"src": "16014:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "16043:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "16043:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16025:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "16025:17:11"
																},
																"nativeSrc": "16025:30:11",
																"nodeType": "YulFunctionCall",
																"src": "16025:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "16014:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "16014:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16232:22:11",
																"nodeType": "YulBlock",
																"src": "16232:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16234:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "16234:16:11"
																			},
																			"nativeSrc": "16234:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "16234:18:11"
																		},
																		"nativeSrc": "16234:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "16234:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "16165:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "16165:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "16158:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "16158:6:11"
																				},
																				"nativeSrc": "16158:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "16158:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "16188:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "16188:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "16195:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "16195:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "16204:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "16204:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "16191:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "16191:3:11"
																						},
																						"nativeSrc": "16191:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "16191:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "16185:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "16185:2:11"
																				},
																				"nativeSrc": "16185:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "16185:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "16138:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "16138:2:11"
																		},
																		"nativeSrc": "16138:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16138:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16118:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16118:6:11"
																},
																"nativeSrc": "16118:113:11",
																"nodeType": "YulFunctionCall",
																"src": "16118:113:11"
															},
															"nativeSrc": "16115:139:11",
															"nodeType": "YulIf",
															"src": "16115:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "15851:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15882:1:11",
														"nodeType": "YulTypedName",
														"src": "15882:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15885:1:11",
														"nodeType": "YulTypedName",
														"src": "15885:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "15891:7:11",
														"nodeType": "YulTypedName",
														"src": "15891:7:11",
														"type": ""
													}
												],
												"src": "15851:410:11"
											},
											{
												"body": {
													"nativeSrc": "16312:149:11",
													"nodeType": "YulBlock",
													"src": "16312:149:11",
													"statements": [
														{
															"nativeSrc": "16322:25:11",
															"nodeType": "YulAssignment",
															"src": "16322:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16345:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "16345:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16327:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "16327:17:11"
																},
																"nativeSrc": "16327:20:11",
																"nodeType": "YulFunctionCall",
																"src": "16327:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16322:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "16322:1:11"
																}
															]
														},
														{
															"nativeSrc": "16356:25:11",
															"nodeType": "YulAssignment",
															"src": "16356:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16379:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "16379:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16361:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "16361:17:11"
																},
																"nativeSrc": "16361:20:11",
																"nodeType": "YulFunctionCall",
																"src": "16361:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16356:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "16356:1:11"
																}
															]
														},
														{
															"nativeSrc": "16390:17:11",
															"nodeType": "YulAssignment",
															"src": "16390:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16402:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "16402:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16405:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "16405:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16398:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16398:3:11"
																},
																"nativeSrc": "16398:9:11",
																"nodeType": "YulFunctionCall",
																"src": "16398:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16390:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16390:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16432:22:11",
																"nodeType": "YulBlock",
																"src": "16432:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16434:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "16434:16:11"
																			},
																			"nativeSrc": "16434:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "16434:18:11"
																		},
																		"nativeSrc": "16434:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "16434:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16423:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "16423:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16429:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "16429:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16420:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "16420:2:11"
																},
																"nativeSrc": "16420:11:11",
																"nodeType": "YulFunctionCall",
																"src": "16420:11:11"
															},
															"nativeSrc": "16417:37:11",
															"nodeType": "YulIf",
															"src": "16417:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "16267:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16298:1:11",
														"nodeType": "YulTypedName",
														"src": "16298:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16301:1:11",
														"nodeType": "YulTypedName",
														"src": "16301:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16307:4:11",
														"nodeType": "YulTypedName",
														"src": "16307:4:11",
														"type": ""
													}
												],
												"src": "16267:194:11"
											},
											{
												"body": {
													"nativeSrc": "16573:71:11",
													"nodeType": "YulBlock",
													"src": "16573:71:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16595:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "16595:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16603:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16603:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16591:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16591:3:11"
																		},
																		"nativeSrc": "16591:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16591:14:11"
																	},
																	{
																		"hexValue": "5265666572726572206d656d626572736869702065787069726564",
																		"kind": "string",
																		"nativeSrc": "16607:29:11",
																		"nodeType": "YulLiteral",
																		"src": "16607:29:11",
																		"type": "",
																		"value": "Referrer membership expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16584:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16584:6:11"
																},
																"nativeSrc": "16584:53:11",
																"nodeType": "YulFunctionCall",
																"src": "16584:53:11"
															},
															"nativeSrc": "16584:53:11",
															"nodeType": "YulExpressionStatement",
															"src": "16584:53:11"
														}
													]
												},
												"name": "store_literal_in_memory_421668a66e5be01199ddd2da64023ed8dd947063fb73ad1701a973a1f9efebf2",
												"nativeSrc": "16467:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16565:6:11",
														"nodeType": "YulTypedName",
														"src": "16565:6:11",
														"type": ""
													}
												],
												"src": "16467:177:11"
											},
											{
												"body": {
													"nativeSrc": "16796:220:11",
													"nodeType": "YulBlock",
													"src": "16796:220:11",
													"statements": [
														{
															"nativeSrc": "16806:74:11",
															"nodeType": "YulAssignment",
															"src": "16806:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16872:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16872:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16877:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16877:2:11",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16813:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "16813:58:11"
																},
																"nativeSrc": "16813:67:11",
																"nodeType": "YulFunctionCall",
																"src": "16813:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16806:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16806:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16978:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16978:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_421668a66e5be01199ddd2da64023ed8dd947063fb73ad1701a973a1f9efebf2",
																	"nativeSrc": "16889:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "16889:88:11"
																},
																"nativeSrc": "16889:93:11",
																"nodeType": "YulFunctionCall",
																"src": "16889:93:11"
															},
															"nativeSrc": "16889:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "16889:93:11"
														},
														{
															"nativeSrc": "16991:19:11",
															"nodeType": "YulAssignment",
															"src": "16991:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17002:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17002:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17007:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17007:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16998:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16998:3:11"
																},
																"nativeSrc": "16998:12:11",
																"nodeType": "YulFunctionCall",
																"src": "16998:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16991:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16991:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_421668a66e5be01199ddd2da64023ed8dd947063fb73ad1701a973a1f9efebf2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16650:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16784:3:11",
														"nodeType": "YulTypedName",
														"src": "16784:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16792:3:11",
														"nodeType": "YulTypedName",
														"src": "16792:3:11",
														"type": ""
													}
												],
												"src": "16650:366:11"
											},
											{
												"body": {
													"nativeSrc": "17193:248:11",
													"nodeType": "YulBlock",
													"src": "17193:248:11",
													"statements": [
														{
															"nativeSrc": "17203:26:11",
															"nodeType": "YulAssignment",
															"src": "17203:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17215:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "17215:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17226:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17226:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17211:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17211:3:11"
																},
																"nativeSrc": "17211:18:11",
																"nodeType": "YulFunctionCall",
																"src": "17211:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17203:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17203:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17250:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17250:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17261:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17261:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17246:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17246:3:11"
																		},
																		"nativeSrc": "17246:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17246:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17269:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "17269:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17275:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17275:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17265:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17265:3:11"
																		},
																		"nativeSrc": "17265:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17265:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17239:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17239:6:11"
																},
																"nativeSrc": "17239:47:11",
																"nodeType": "YulFunctionCall",
																"src": "17239:47:11"
															},
															"nativeSrc": "17239:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "17239:47:11"
														},
														{
															"nativeSrc": "17295:139:11",
															"nodeType": "YulAssignment",
															"src": "17295:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17429:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17429:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_421668a66e5be01199ddd2da64023ed8dd947063fb73ad1701a973a1f9efebf2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17303:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "17303:124:11"
																},
																"nativeSrc": "17303:131:11",
																"nodeType": "YulFunctionCall",
																"src": "17303:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17295:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17295:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_421668a66e5be01199ddd2da64023ed8dd947063fb73ad1701a973a1f9efebf2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17022:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17173:9:11",
														"nodeType": "YulTypedName",
														"src": "17173:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17188:4:11",
														"nodeType": "YulTypedName",
														"src": "17188:4:11",
														"type": ""
													}
												],
												"src": "17022:419:11"
											},
											{
												"body": {
													"nativeSrc": "17553:60:11",
													"nodeType": "YulBlock",
													"src": "17553:60:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17575:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "17575:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17583:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17583:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17571:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17571:3:11"
																		},
																		"nativeSrc": "17571:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17571:14:11"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "17587:18:11",
																		"nodeType": "YulLiteral",
																		"src": "17587:18:11",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17564:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17564:6:11"
																},
																"nativeSrc": "17564:42:11",
																"nodeType": "YulFunctionCall",
																"src": "17564:42:11"
															},
															"nativeSrc": "17564:42:11",
															"nodeType": "YulExpressionStatement",
															"src": "17564:42:11"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "17447:166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17545:6:11",
														"nodeType": "YulTypedName",
														"src": "17545:6:11",
														"type": ""
													}
												],
												"src": "17447:166:11"
											},
											{
												"body": {
													"nativeSrc": "17765:220:11",
													"nodeType": "YulBlock",
													"src": "17765:220:11",
													"statements": [
														{
															"nativeSrc": "17775:74:11",
															"nodeType": "YulAssignment",
															"src": "17775:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17841:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17841:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17846:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17846:2:11",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17782:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "17782:58:11"
																},
																"nativeSrc": "17782:67:11",
																"nodeType": "YulFunctionCall",
																"src": "17782:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17775:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17775:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17947:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17947:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "17858:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "17858:88:11"
																},
																"nativeSrc": "17858:93:11",
																"nodeType": "YulFunctionCall",
																"src": "17858:93:11"
															},
															"nativeSrc": "17858:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "17858:93:11"
														},
														{
															"nativeSrc": "17960:19:11",
															"nodeType": "YulAssignment",
															"src": "17960:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17971:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17971:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17976:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17976:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17967:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17967:3:11"
																},
																"nativeSrc": "17967:12:11",
																"nodeType": "YulFunctionCall",
																"src": "17967:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17960:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17960:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17619:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17753:3:11",
														"nodeType": "YulTypedName",
														"src": "17753:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17761:3:11",
														"nodeType": "YulTypedName",
														"src": "17761:3:11",
														"type": ""
													}
												],
												"src": "17619:366:11"
											},
											{
												"body": {
													"nativeSrc": "18162:248:11",
													"nodeType": "YulBlock",
													"src": "18162:248:11",
													"statements": [
														{
															"nativeSrc": "18172:26:11",
															"nodeType": "YulAssignment",
															"src": "18172:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18184:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "18184:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18195:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18195:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18180:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18180:3:11"
																},
																"nativeSrc": "18180:18:11",
																"nodeType": "YulFunctionCall",
																"src": "18180:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18172:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18172:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18219:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18219:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18230:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18230:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18215:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18215:3:11"
																		},
																		"nativeSrc": "18215:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18215:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18238:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "18238:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18244:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18244:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18234:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18234:3:11"
																		},
																		"nativeSrc": "18234:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18234:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18208:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18208:6:11"
																},
																"nativeSrc": "18208:47:11",
																"nodeType": "YulFunctionCall",
																"src": "18208:47:11"
															},
															"nativeSrc": "18208:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "18208:47:11"
														},
														{
															"nativeSrc": "18264:139:11",
															"nodeType": "YulAssignment",
															"src": "18264:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18398:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "18398:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18272:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "18272:124:11"
																},
																"nativeSrc": "18272:131:11",
																"nodeType": "YulFunctionCall",
																"src": "18272:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18264:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18264:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17991:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18142:9:11",
														"nodeType": "YulTypedName",
														"src": "18142:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18157:4:11",
														"nodeType": "YulTypedName",
														"src": "18157:4:11",
														"type": ""
													}
												],
												"src": "17991:419:11"
											},
											{
												"body": {
													"nativeSrc": "18481:53:11",
													"nodeType": "YulBlock",
													"src": "18481:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18498:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18498:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18521:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "18521:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "18503:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "18503:17:11"
																		},
																		"nativeSrc": "18503:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18503:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18491:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18491:6:11"
																},
																"nativeSrc": "18491:37:11",
																"nodeType": "YulFunctionCall",
																"src": "18491:37:11"
															},
															"nativeSrc": "18491:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "18491:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "18416:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18469:5:11",
														"nodeType": "YulTypedName",
														"src": "18469:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18476:3:11",
														"nodeType": "YulTypedName",
														"src": "18476:3:11",
														"type": ""
													}
												],
												"src": "18416:118:11"
											},
											{
												"body": {
													"nativeSrc": "18638:124:11",
													"nodeType": "YulBlock",
													"src": "18638:124:11",
													"statements": [
														{
															"nativeSrc": "18648:26:11",
															"nodeType": "YulAssignment",
															"src": "18648:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18660:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "18660:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18671:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18671:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18656:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18656:3:11"
																},
																"nativeSrc": "18656:18:11",
																"nodeType": "YulFunctionCall",
																"src": "18656:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18648:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18648:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18728:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18728:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18741:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18741:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18752:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18752:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18737:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18737:3:11"
																		},
																		"nativeSrc": "18737:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18737:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18684:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "18684:43:11"
																},
																"nativeSrc": "18684:71:11",
																"nodeType": "YulFunctionCall",
																"src": "18684:71:11"
															},
															"nativeSrc": "18684:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "18684:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "18540:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18610:9:11",
														"nodeType": "YulTypedName",
														"src": "18610:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18622:6:11",
														"nodeType": "YulTypedName",
														"src": "18622:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18633:4:11",
														"nodeType": "YulTypedName",
														"src": "18633:4:11",
														"type": ""
													}
												],
												"src": "18540:222:11"
											},
											{
												"body": {
													"nativeSrc": "18922:288:11",
													"nodeType": "YulBlock",
													"src": "18922:288:11",
													"statements": [
														{
															"nativeSrc": "18932:26:11",
															"nodeType": "YulAssignment",
															"src": "18932:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18944:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "18944:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18955:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18955:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18940:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18940:3:11"
																},
																"nativeSrc": "18940:18:11",
																"nodeType": "YulFunctionCall",
																"src": "18940:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18932:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18932:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19012:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19012:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19025:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19025:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19036:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19036:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19021:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19021:3:11"
																		},
																		"nativeSrc": "19021:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19021:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18968:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "18968:43:11"
																},
																"nativeSrc": "18968:71:11",
																"nodeType": "YulFunctionCall",
																"src": "18968:71:11"
															},
															"nativeSrc": "18968:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "18968:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19093:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19093:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19106:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19106:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19117:2:11",
																				"nodeType": "YulLiteral",
																				"src": "19117:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19102:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19102:3:11"
																		},
																		"nativeSrc": "19102:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19102:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19049:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19049:43:11"
																},
																"nativeSrc": "19049:72:11",
																"nodeType": "YulFunctionCall",
																"src": "19049:72:11"
															},
															"nativeSrc": "19049:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "19049:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19175:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19175:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19188:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19188:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19199:2:11",
																				"nodeType": "YulLiteral",
																				"src": "19199:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19184:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19184:3:11"
																		},
																		"nativeSrc": "19184:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19184:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19131:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19131:43:11"
																},
																"nativeSrc": "19131:72:11",
																"nodeType": "YulFunctionCall",
																"src": "19131:72:11"
															},
															"nativeSrc": "19131:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "19131:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18768:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18878:9:11",
														"nodeType": "YulTypedName",
														"src": "18878:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18890:6:11",
														"nodeType": "YulTypedName",
														"src": "18890:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18898:6:11",
														"nodeType": "YulTypedName",
														"src": "18898:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18906:6:11",
														"nodeType": "YulTypedName",
														"src": "18906:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18917:4:11",
														"nodeType": "YulTypedName",
														"src": "18917:4:11",
														"type": ""
													}
												],
												"src": "18768:442:11"
											},
											{
												"body": {
													"nativeSrc": "19342:206:11",
													"nodeType": "YulBlock",
													"src": "19342:206:11",
													"statements": [
														{
															"nativeSrc": "19352:26:11",
															"nodeType": "YulAssignment",
															"src": "19352:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19364:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "19364:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19375:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19375:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19360:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19360:3:11"
																},
																"nativeSrc": "19360:18:11",
																"nodeType": "YulFunctionCall",
																"src": "19360:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19352:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19352:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19432:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19432:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19445:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19445:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19456:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19456:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19441:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19441:3:11"
																		},
																		"nativeSrc": "19441:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19441:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19388:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19388:43:11"
																},
																"nativeSrc": "19388:71:11",
																"nodeType": "YulFunctionCall",
																"src": "19388:71:11"
															},
															"nativeSrc": "19388:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "19388:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19513:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19513:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19526:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19526:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19537:2:11",
																				"nodeType": "YulLiteral",
																				"src": "19537:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19522:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19522:3:11"
																		},
																		"nativeSrc": "19522:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19522:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "19469:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19469:43:11"
																},
																"nativeSrc": "19469:72:11",
																"nodeType": "YulFunctionCall",
																"src": "19469:72:11"
															},
															"nativeSrc": "19469:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "19469:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "19216:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19306:9:11",
														"nodeType": "YulTypedName",
														"src": "19306:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19318:6:11",
														"nodeType": "YulTypedName",
														"src": "19318:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19326:6:11",
														"nodeType": "YulTypedName",
														"src": "19326:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19337:4:11",
														"nodeType": "YulTypedName",
														"src": "19337:4:11",
														"type": ""
													}
												],
												"src": "19216:332:11"
											},
											{
												"body": {
													"nativeSrc": "19660:64:11",
													"nodeType": "YulBlock",
													"src": "19660:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19682:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "19682:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19690:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19690:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19678:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19678:3:11"
																		},
																		"nativeSrc": "19678:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19678:14:11"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "19694:22:11",
																		"nodeType": "YulLiteral",
																		"src": "19694:22:11",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19671:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19671:6:11"
																},
																"nativeSrc": "19671:46:11",
																"nodeType": "YulFunctionCall",
																"src": "19671:46:11"
															},
															"nativeSrc": "19671:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "19671:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "19554:170:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19652:6:11",
														"nodeType": "YulTypedName",
														"src": "19652:6:11",
														"type": ""
													}
												],
												"src": "19554:170:11"
											},
											{
												"body": {
													"nativeSrc": "19876:220:11",
													"nodeType": "YulBlock",
													"src": "19876:220:11",
													"statements": [
														{
															"nativeSrc": "19886:74:11",
															"nodeType": "YulAssignment",
															"src": "19886:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19952:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19952:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19957:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19957:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19893:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "19893:58:11"
																},
																"nativeSrc": "19893:67:11",
																"nodeType": "YulFunctionCall",
																"src": "19893:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19886:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19886:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20058:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20058:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "19969:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "19969:88:11"
																},
																"nativeSrc": "19969:93:11",
																"nodeType": "YulFunctionCall",
																"src": "19969:93:11"
															},
															"nativeSrc": "19969:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "19969:93:11"
														},
														{
															"nativeSrc": "20071:19:11",
															"nodeType": "YulAssignment",
															"src": "20071:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20082:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20082:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20087:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20087:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20078:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20078:3:11"
																},
																"nativeSrc": "20078:12:11",
																"nodeType": "YulFunctionCall",
																"src": "20078:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20071:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20071:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19730:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19864:3:11",
														"nodeType": "YulTypedName",
														"src": "19864:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19872:3:11",
														"nodeType": "YulTypedName",
														"src": "19872:3:11",
														"type": ""
													}
												],
												"src": "19730:366:11"
											},
											{
												"body": {
													"nativeSrc": "20273:248:11",
													"nodeType": "YulBlock",
													"src": "20273:248:11",
													"statements": [
														{
															"nativeSrc": "20283:26:11",
															"nodeType": "YulAssignment",
															"src": "20283:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20295:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "20295:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20306:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20306:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20291:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20291:3:11"
																},
																"nativeSrc": "20291:18:11",
																"nodeType": "YulFunctionCall",
																"src": "20291:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20283:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "20283:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20330:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20330:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20341:1:11",
																				"nodeType": "YulLiteral",
																				"src": "20341:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20326:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20326:3:11"
																		},
																		"nativeSrc": "20326:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20326:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20349:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "20349:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20355:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20355:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20345:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20345:3:11"
																		},
																		"nativeSrc": "20345:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20345:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20319:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20319:6:11"
																},
																"nativeSrc": "20319:47:11",
																"nodeType": "YulFunctionCall",
																"src": "20319:47:11"
															},
															"nativeSrc": "20319:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "20319:47:11"
														},
														{
															"nativeSrc": "20375:139:11",
															"nodeType": "YulAssignment",
															"src": "20375:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20509:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "20509:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20383:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "20383:124:11"
																},
																"nativeSrc": "20383:131:11",
																"nodeType": "YulFunctionCall",
																"src": "20383:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20375:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "20375:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20102:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20253:9:11",
														"nodeType": "YulTypedName",
														"src": "20253:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20268:4:11",
														"nodeType": "YulTypedName",
														"src": "20268:4:11",
														"type": ""
													}
												],
												"src": "20102:419:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_enum$_MEMBERSHIP_TYPE_$1362(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_MEMBERSHIP_TYPE_$1362(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_MEMBERSHIP_TYPE_$1362(value)\n    }\n\n    function abi_decode_tuple_t_enum$_MEMBERSHIP_TYPE_$1362(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_MEMBERSHIP_TYPE_$1362(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5cbd542351d7fdfb7f89b17d4ac17a7a16041856bb9eaf5833ca04c408480857(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not a member\")\n\n    }\n\n    function abi_encode_t_stringliteral_5cbd542351d7fdfb7f89b17d4ac17a7a16041856bb9eaf5833ca04c408480857_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5cbd542351d7fdfb7f89b17d4ac17a7a16041856bb9eaf5833ca04c408480857(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5cbd542351d7fdfb7f89b17d4ac17a7a16041856bb9eaf5833ca04c408480857__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5cbd542351d7fdfb7f89b17d4ac17a7a16041856bb9eaf5833ca04c408480857_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_b89e19d8ece4c02a72d5a02c02781c01f06d56f014875c79921678b2ba553b29(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid membership type\")\n\n    }\n\n    function abi_encode_t_stringliteral_b89e19d8ece4c02a72d5a02c02781c01f06d56f014875c79921678b2ba553b29_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_b89e19d8ece4c02a72d5a02c02781c01f06d56f014875c79921678b2ba553b29(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b89e19d8ece4c02a72d5a02c02781c01f06d56f014875c79921678b2ba553b29__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b89e19d8ece4c02a72d5a02c02781c01f06d56f014875c79921678b2ba553b29_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function validator_assert_t_enum$_MEMBERSHIP_TYPE_$1362(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_MEMBERSHIP_TYPE_$1362(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_MEMBERSHIP_TYPE_$1362(value)\n    }\n\n    function convert_t_enum$_MEMBERSHIP_TYPE_$1362_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_MEMBERSHIP_TYPE_$1362(value)\n    }\n\n    function abi_encode_t_enum$_MEMBERSHIP_TYPE_$1362_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_MEMBERSHIP_TYPE_$1362_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_MEMBERSHIP_TYPE_$1362_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_enum$_MEMBERSHIP_TYPE_$1362_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_421668a66e5be01199ddd2da64023ed8dd947063fb73ad1701a973a1f9efebf2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Referrer membership expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_421668a66e5be01199ddd2da64023ed8dd947063fb73ad1701a973a1f9efebf2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_421668a66e5be01199ddd2da64023ed8dd947063fb73ad1701a973a1f9efebf2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_421668a66e5be01199ddd2da64023ed8dd947063fb73ad1701a973a1f9efebf2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_421668a66e5be01199ddd2da64023ed8dd947063fb73ad1701a973a1f9efebf2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101f9575f3560e01c806376809ce311610118578063a217fddf116100ab578063b46948761161007a578063b4694876146105b5578063d547741f146105e5578063dd62ed3e14610601578063ea4bbaf414610631578063ec87621c14610661576101f9565b8063a217fddf1461052d578063a61b93cc1461054b578063a683dfab14610569578063a9059cbb14610585576101f9565b80638621026a116100e75780638621026a1461049157806391d14854146104c157806395d89b41146104f1578063a10f469e1461050f576101f9565b806376809ce31461042d5780638456cb591461044b57806384a3a0f31461045557806385290fa114610473576101f9565b80632f2ff15d116101905780633f4ba83a1161015f5780633f4ba83a146103a55780634b6e2331146103af5780635c975abb146103df57806370a08231146103fd576101f9565b80632f2ff15d146103315780632ff2e9dc1461034d578063313ce5671461036b57806336568abe14610389576101f9565b806318160ddd116101cc57806318160ddd1461029757806323b872dd146102b5578063248a9ca3146102e5578063265a5eea14610315576101f9565b806301ffc9a7146101fd57806306fdde031461022d578063095ea7b31461024b5780630ca2a4001461027b575b5f5ffd5b61021760048036038101906102129190611d00565b61067f565b6040516102249190611d45565b60405180910390f35b6102356106f8565b6040516102429190611dce565b60405180910390f35b61026560048036038101906102609190611e7b565b610788565b6040516102729190611d45565b60405180910390f35b61029560048036038101906102909190611e7b565b6107aa565b005b61029f610837565b6040516102ac9190611ec8565b60405180910390f35b6102cf60048036038101906102ca9190611ee1565b610840565b6040516102dc9190611d45565b60405180910390f35b6102ff60048036038101906102fa9190611f64565b61086e565b60405161030c9190611f9e565b60405180910390f35b61032f600480360381019061032a9190611fda565b61088b565b005b61034b60048036038101906103469190612005565b610bac565b005b610355610bce565b6040516103629190611ec8565b60405180910390f35b610373610bed565b604051610380919061205e565b60405180910390f35b6103a3600480360381019061039e9190612005565b610bf5565b005b6103ad610c70565b005b6103c960048036038101906103c49190611fda565b610ca5565b6040516103d69190611ec8565b60405180910390f35b6103e7610cba565b6040516103f49190611d45565b60405180910390f35b61041760048036038101906104129190612077565b610ccf565b6040516104249190611ec8565b60405180910390f35b610435610d14565b604051610442919061205e565b60405180910390f35b610453610d19565b005b61045d610d4e565b60405161046a9190611ec8565b60405180910390f35b61047b610d6b565b6040516104889190611f9e565b60405180910390f35b6104ab60048036038101906104a69190612077565b610d8f565b6040516104b89190611ec8565b60405180910390f35b6104db60048036038101906104d69190612005565b610e2d565b6040516104e89190611d45565b60405180910390f35b6104f9610e91565b6040516105069190611dce565b60405180910390f35b610517610f21565b6040516105249190611f9e565b60405180910390f35b610535610f45565b6040516105429190611f9e565b60405180910390f35b610553610f4b565b6040516105609190611f9e565b60405180910390f35b610583600480360381019061057e9190612077565b610f6f565b005b61059f600480360381019061059a9190611e7b565b61111a565b6040516105ac9190611d45565b60405180910390f35b6105cf60048036038101906105ca9190612077565b61113c565b6040516105dc9190611ec8565b60405180910390f35b6105ff60048036038101906105fa9190612005565b611151565b005b61061b600480360381019061061691906120a2565b611173565b6040516106289190611ec8565b60405180910390f35b61064b60048036038101906106469190612077565b6111f5565b6040516106589190611ec8565b60405180910390f35b61066961120a565b6040516106769190611f9e565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806106f157506106f08261122e565b5b9050919050565b6060600380546107079061210d565b80601f01602080910402602001604051908101604052809291908181526020018280546107339061210d565b801561077e5780601f106107555761010080835404028352916020019161077e565b820191905f5260205f20905b81548152906001019060200180831161076157829003601f168201915b5050505050905090565b5f5f610792611297565b905061079f81858561129e565b600191505092915050565b6107b26112b0565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b086107dc816112fa565b816107e633610ccf565b1015610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e90612187565b60405180910390fd5b61083233848461130e565b505050565b5f600254905090565b5f5f61084a611297565b90506108578582856113fe565b61086285858561130e565b60019150509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b6108936112b0565b6108bd7f829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d463633610e2d565b6108fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f3906121ef565b60405180910390fd5b5f60075f8360028111156109135761091261220d565b5b60028111156109255761092461220d565b5b81526020019081526020015f205490508061093f33610ccf565b1015610980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097790612187565b60405180910390fd5b61098a3382611490565b5f5f600281111561099e5761099d61220d565b5b8360028111156109b1576109b061220d565b5b036109c15762278d009050610a6c565b600160028111156109d5576109d461220d565b5b8360028111156109e8576109e761220d565b5b036109f8576276a7009050610a6b565b600280811115610a0b57610a0a61220d565b5b836002811115610a1e57610a1d61220d565b5b03610a2f576301e133809050610a6a565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6190612284565b60405180910390fd5b5b5b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054421015610b09578060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610afd91906122cf565b92505081905550610b57565b8042610b1591906122cf565b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b3373ffffffffffffffffffffffffffffffffffffffff167fe2c5b6420b508a46b55a5cb55c7340a67492866d4f51461ee443958079fe83578483604051610b9f929190612348565b60405180910390a2505050565b610bb58261086e565b610bbe816112fa565b610bc8838361150f565b50505050565b6002600a610bdc919061249e565b620f4240610bea91906124e8565b81565b5f6012905090565b610bfd611297565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c61576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c6b82826115f9565b505050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610c9a816112fa565b610ca26116e3565b50565b6007602052805f5260405f205f915090505481565b5f60055f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b600281565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610d43816112fa565b610d4b611744565b50565b6002600a610d5c919061249e565b600a610d6891906124e8565b81565b7f5620a1113a72b02a617976b3f6b15600dd7a8b3a916a9ca01e23119d989a054381565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20544210610ddc575f9050610e28565b4260085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610e259190612529565b90505b919050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610ea09061210d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ecc9061210d565b8015610f175780601f10610eee57610100808354040283529160200191610f17565b820191905f5260205f20905b815481529060010190602001808311610efa57829003601f168201915b5050505050905090565b7f829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d463681565b5f5f1b81565b7f123c69cc12368838cca6d46b7505bec842d9e85a26aff07e23aa57ad59dac6ba81565b610f776112b0565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610fa1816112fa565b60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20544210611020576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611017906125a6565b60405180910390fd5b6002600a61102e919061249e565b600a61103a91906124e8565b60095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461108591906122cf565b925050819055506110af826002600a61109e919061249e565b600a6110aa91906124e8565b6117a6565b8173ffffffffffffffffffffffffffffffffffffffff167fe02a129f98418d04669038a9874f706689ba7726c0c0e82c67319ec8ca9001ea6002600a6110f5919061249e565b600a61110191906124e8565b60405161110e9190611ec8565b60405180910390a25050565b5f5f611124611297565b905061113181858561130e565b600191505092915050565b6009602052805f5260405f205f915090505481565b61115a8261086e565b611163816112fa565b61116d83836115f9565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6008602052805f5260405f205f915090505481565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0881565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6112ab8383836001611825565b505050565b6112b8610cba565b156112f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ef9061260e565b60405180910390fd5b565b61130b81611306611297565b6119f4565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361137e575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611375919061263b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113ee575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113e5919061263b565b60405180910390fd5b6113f9838383611a45565b505050565b5f6114098484611173565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461148a578181101561147b578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161147293929190612654565b60405180910390fd5b61148984848484035f611825565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611500575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114f7919061263b565b60405180910390fd5b61150b825f83611a45565b5050565b5f61151a8383610e2d565b6115ef57600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061158c611297565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506115f3565b5f90505b92915050565b5f6116048383610e2d565b156116d9575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611676611297565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506116dd565b5f90505b92915050565b6116eb611c5e565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61172d611297565b60405161173a919061263b565b60405180910390a1565b61174c6112b0565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861178f611297565b60405161179c919061263b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611816575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161180d919061263b565b60405180910390fd5b6118215f8383611a45565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611895575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161188c919061263b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611905575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016118fc919061263b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156119ee578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516119e59190611ec8565b60405180910390a35b50505050565b6119fe8282610e2d565b611a415780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611a38929190612689565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a95578060025f828254611a8991906122cf565b92505081905550611b63565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611b1e578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611b1593929190612654565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611baa578060025f8282540392505081905550611bf4565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611c519190611ec8565b60405180910390a3505050565b611c66610cba565b611ca5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c9c906126fa565b60405180910390fd5b565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611cdf81611cab565b8114611ce9575f5ffd5b50565b5f81359050611cfa81611cd6565b92915050565b5f60208284031215611d1557611d14611ca7565b5b5f611d2284828501611cec565b91505092915050565b5f8115159050919050565b611d3f81611d2b565b82525050565b5f602082019050611d585f830184611d36565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611da082611d5e565b611daa8185611d68565b9350611dba818560208601611d78565b611dc381611d86565b840191505092915050565b5f6020820190508181035f830152611de68184611d96565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e1782611dee565b9050919050565b611e2781611e0d565b8114611e31575f5ffd5b50565b5f81359050611e4281611e1e565b92915050565b5f819050919050565b611e5a81611e48565b8114611e64575f5ffd5b50565b5f81359050611e7581611e51565b92915050565b5f5f60408385031215611e9157611e90611ca7565b5b5f611e9e85828601611e34565b9250506020611eaf85828601611e67565b9150509250929050565b611ec281611e48565b82525050565b5f602082019050611edb5f830184611eb9565b92915050565b5f5f5f60608486031215611ef857611ef7611ca7565b5b5f611f0586828701611e34565b9350506020611f1686828701611e34565b9250506040611f2786828701611e67565b9150509250925092565b5f819050919050565b611f4381611f31565b8114611f4d575f5ffd5b50565b5f81359050611f5e81611f3a565b92915050565b5f60208284031215611f7957611f78611ca7565b5b5f611f8684828501611f50565b91505092915050565b611f9881611f31565b82525050565b5f602082019050611fb15f830184611f8f565b92915050565b60038110611fc3575f5ffd5b50565b5f81359050611fd481611fb7565b92915050565b5f60208284031215611fef57611fee611ca7565b5b5f611ffc84828501611fc6565b91505092915050565b5f5f6040838503121561201b5761201a611ca7565b5b5f61202885828601611f50565b925050602061203985828601611e34565b9150509250929050565b5f60ff82169050919050565b61205881612043565b82525050565b5f6020820190506120715f83018461204f565b92915050565b5f6020828403121561208c5761208b611ca7565b5b5f61209984828501611e34565b91505092915050565b5f5f604083850312156120b8576120b7611ca7565b5b5f6120c585828601611e34565b92505060206120d685828601611e34565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061212457607f821691505b602082108103612137576121366120e0565b5b50919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f612171601483611d68565b915061217c8261213d565b602082019050919050565b5f6020820190508181035f83015261219e81612165565b9050919050565b7f43616c6c6572206973206e6f742061206d656d626572000000000000000000005f82015250565b5f6121d9601683611d68565b91506121e4826121a5565b602082019050919050565b5f6020820190508181035f830152612206816121cd565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f496e76616c6964206d656d6265727368697020747970650000000000000000005f82015250565b5f61226e601783611d68565b91506122798261223a565b602082019050919050565b5f6020820190508181035f83015261229b81612262565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122d982611e48565b91506122e483611e48565b92508282019050808211156122fc576122fb6122a2565b5b92915050565b600381106123135761231261220d565b5b50565b5f81905061232382612302565b919050565b5f61233282612316565b9050919050565b61234281612328565b82525050565b5f60408201905061235b5f830185612339565b6123686020830184611eb9565b9392505050565b5f8160011c9050919050565b5f5f8291508390505b60018511156123c4578086048111156123a05761239f6122a2565b5b60018516156123af5780820291505b80810290506123bd8561236f565b9450612384565b94509492505050565b5f826123dc5760019050612497565b816123e9575f9050612497565b81600181146123ff576002811461240957612438565b6001915050612497565b60ff84111561241b5761241a6122a2565b5b8360020a915084821115612432576124316122a2565b5b50612497565b5060208310610133831016604e8410600b841016171561246d5782820a905083811115612468576124676122a2565b5b612497565b61247a848484600161237b565b92509050818404811115612491576124906122a2565b5b81810290505b9392505050565b5f6124a882611e48565b91506124b383612043565b92506124e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846123cd565b905092915050565b5f6124f282611e48565b91506124fd83611e48565b925082820261250b81611e48565b91508282048414831517612522576125216122a2565b5b5092915050565b5f61253382611e48565b915061253e83611e48565b9250828203905081811115612556576125556122a2565b5b92915050565b7f5265666572726572206d656d62657273686970206578706972656400000000005f82015250565b5f612590601b83611d68565b915061259b8261255c565b602082019050919050565b5f6020820190508181035f8301526125bd81612584565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6125f8601083611d68565b9150612603826125c4565b602082019050919050565b5f6020820190508181035f830152612625816125ec565b9050919050565b61263581611e0d565b82525050565b5f60208201905061264e5f83018461262c565b92915050565b5f6060820190506126675f83018661262c565b6126746020830185611eb9565b6126816040830184611eb9565b949350505050565b5f60408201905061269c5f83018561262c565b6126a96020830184611f8f565b9392505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6126e4601483611d68565b91506126ef826126b0565b602082019050919050565b5f6020820190508181035f830152612711816126d8565b905091905056fea2646970667358221220efd26e149ae0f01f2e76854dbd775d5708059c092fe3346dbcc79dcf2836b12564736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76809CE3 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB4694876 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xB4694876 EQ PUSH2 0x5B5 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0xEA4BBAF4 EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xEC87621C EQ PUSH2 0x661 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0xA61B93CC EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xA683DFAB EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x585 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x8621026A GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8621026A EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xA10F469E EQ PUSH2 0x50F JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x76809CE3 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x84A3A0F3 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0x85290FA1 EQ PUSH2 0x473 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x190 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x15F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x4B6E2331 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3FD JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x389 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1CC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x265A5EEA EQ PUSH2 0x315 JUMPI PUSH2 0x1F9 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xCA2A400 EQ PUSH2 0x27B JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29F PUSH2 0x837 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1FDA JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0xBAC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x355 PUSH2 0xBCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x205E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0xBF5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AD PUSH2 0xC70 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x1FDA JUMP JUMPDEST PUSH2 0xCA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E7 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x435 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x205E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x453 PUSH2 0xD19 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45D PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x488 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0xD8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F9 PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x1DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x517 PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x535 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x553 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0xF6F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST PUSH2 0x111A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0x113C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x1151 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x616 SWAP2 SWAP1 PUSH2 0x20A2 JUMP JUMPDEST PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0x11F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x669 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x676 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x6F1 JUMPI POP PUSH2 0x6F0 DUP3 PUSH2 0x122E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x707 SWAP1 PUSH2 0x210D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x733 SWAP1 PUSH2 0x210D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x77E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x755 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x77E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x761 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x792 PUSH2 0x1297 JUMP JUMPDEST SWAP1 POP PUSH2 0x79F DUP2 DUP6 DUP6 PUSH2 0x129E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7B2 PUSH2 0x12B0 JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x7DC DUP2 PUSH2 0x12FA JUMP JUMPDEST DUP2 PUSH2 0x7E6 CALLER PUSH2 0xCCF JUMP JUMPDEST LT ISZERO PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81E SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x832 CALLER DUP5 DUP5 PUSH2 0x130E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x84A PUSH2 0x1297 JUMP JUMPDEST SWAP1 POP PUSH2 0x857 DUP6 DUP3 DUP6 PUSH2 0x13FE JUMP JUMPDEST PUSH2 0x862 DUP6 DUP6 DUP6 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x893 PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x8BD PUSH32 0x829B824E2329E205435D941C9F13BAF578548505283D29261236D8E6596D4636 CALLER PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x8FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F3 SWAP1 PUSH2 0x21EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x913 JUMPI PUSH2 0x912 PUSH2 0x220D JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x925 JUMPI PUSH2 0x924 PUSH2 0x220D JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0x93F CALLER PUSH2 0xCCF JUMP JUMPDEST LT ISZERO PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x977 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x98A CALLER DUP3 PUSH2 0x1490 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x99E JUMPI PUSH2 0x99D PUSH2 0x220D JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9B1 JUMPI PUSH2 0x9B0 PUSH2 0x220D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x9C1 JUMPI PUSH3 0x278D00 SWAP1 POP PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9D5 JUMPI PUSH2 0x9D4 PUSH2 0x220D JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9E8 JUMPI PUSH2 0x9E7 PUSH2 0x220D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x9F8 JUMPI PUSH3 0x76A700 SWAP1 POP PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xA0B JUMPI PUSH2 0xA0A PUSH2 0x220D JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA1E JUMPI PUSH2 0xA1D PUSH2 0x220D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xA2F JUMPI PUSH4 0x1E13380 SWAP1 POP PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP1 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0xB09 JUMPI DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB57 JUMP JUMPDEST DUP1 TIMESTAMP PUSH2 0xB15 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2C5B6420B508A46B55A5CB55C7340A67492866D4F51461EE443958079FE8357 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB9F SWAP3 SWAP2 SWAP1 PUSH2 0x2348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xBB5 DUP3 PUSH2 0x86E JUMP JUMPDEST PUSH2 0xBBE DUP2 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0xBC8 DUP4 DUP4 PUSH2 0x150F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0xA PUSH2 0xBDC SWAP2 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBFD PUSH2 0x1297 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6B DUP3 DUP3 PUSH2 0x15F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0xC9A DUP2 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0xCA2 PUSH2 0x16E3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0xD43 DUP2 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0xD4B PUSH2 0x1744 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0xA PUSH2 0xD5C SWAP2 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0xA PUSH2 0xD68 SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH32 0x5620A1113A72B02A617976B3F6B15600DD7A8B3A916A9CA01E23119D989A0543 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT PUSH2 0xDDC JUMPI PUSH0 SWAP1 POP PUSH2 0xE28 JUMP JUMPDEST TIMESTAMP PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xE25 SWAP2 SWAP1 PUSH2 0x2529 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xEA0 SWAP1 PUSH2 0x210D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xECC SWAP1 PUSH2 0x210D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF17 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEEE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF17 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEFA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x829B824E2329E205435D941C9F13BAF578548505283D29261236D8E6596D4636 DUP2 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH32 0x123C69CC12368838CCA6D46B7505BEC842D9E85A26AFF07E23AA57AD59DAC6BA DUP2 JUMP JUMPDEST PUSH2 0xF77 PUSH2 0x12B0 JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0xFA1 DUP2 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT PUSH2 0x1020 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1017 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xA PUSH2 0x102E SWAP2 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0xA PUSH2 0x103A SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1085 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10AF DUP3 PUSH1 0x2 PUSH1 0xA PUSH2 0x109E SWAP2 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0xA PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST PUSH2 0x17A6 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE02A129F98418D04669038A9874F706689BA7726C0C0E82C67319EC8CA9001EA PUSH1 0x2 PUSH1 0xA PUSH2 0x10F5 SWAP2 SWAP1 PUSH2 0x249E JUMP JUMPDEST PUSH1 0xA PUSH2 0x1101 SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110E SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1124 PUSH2 0x1297 JUMP JUMPDEST SWAP1 POP PUSH2 0x1131 DUP2 DUP6 DUP6 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x115A DUP3 PUSH2 0x86E JUMP JUMPDEST PUSH2 0x1163 DUP2 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x116D DUP4 DUP4 PUSH2 0x15F9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12AB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1825 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12B8 PUSH2 0xCBA JUMP JUMPDEST ISZERO PUSH2 0x12F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EF SWAP1 PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x130B DUP2 PUSH2 0x1306 PUSH2 0x1297 JUMP JUMPDEST PUSH2 0x19F4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x137E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1375 SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13EE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E5 SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F9 DUP4 DUP4 DUP4 PUSH2 0x1A45 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1409 DUP5 DUP5 PUSH2 0x1173 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x148A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x147B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1472 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1489 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1825 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1500 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F7 SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x150B DUP3 PUSH0 DUP4 PUSH2 0x1A45 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x151A DUP4 DUP4 PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x15EF JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x158C PUSH2 0x1297 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x15F3 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1604 DUP4 DUP4 PUSH2 0xE2D JUMP JUMPDEST ISZERO PUSH2 0x16D9 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1676 PUSH2 0x1297 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x16DD JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16EB PUSH2 0x1C5E JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x172D PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173A SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x174C PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x178F PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179C SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1816 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180D SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1821 PUSH0 DUP4 DUP4 PUSH2 0x1A45 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1895 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188C SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1905 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18FC SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x19EE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x19E5 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x19FE DUP3 DUP3 PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x1A41 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A38 SWAP3 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A95 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A89 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B63 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1B1E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B15 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BAA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1BF4 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C51 SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1C66 PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x1CA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C9C SWAP1 PUSH2 0x26FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDF DUP2 PUSH2 0x1CAB JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CFA DUP2 PUSH2 0x1CD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D15 JUMPI PUSH2 0x1D14 PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D22 DUP5 DUP3 DUP6 ADD PUSH2 0x1CEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D3F DUP2 PUSH2 0x1D2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D58 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA0 DUP3 PUSH2 0x1D5E JUMP JUMPDEST PUSH2 0x1DAA DUP2 DUP6 PUSH2 0x1D68 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DBA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x1DC3 DUP2 PUSH2 0x1D86 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DE6 DUP2 DUP5 PUSH2 0x1D96 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E17 DUP3 PUSH2 0x1DEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E27 DUP2 PUSH2 0x1E0D JUMP JUMPDEST DUP2 EQ PUSH2 0x1E31 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E42 DUP2 PUSH2 0x1E1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E5A DUP2 PUSH2 0x1E48 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E64 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E75 DUP2 PUSH2 0x1E51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E91 JUMPI PUSH2 0x1E90 PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E9E DUP6 DUP3 DUP7 ADD PUSH2 0x1E34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EAF DUP6 DUP3 DUP7 ADD PUSH2 0x1E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC2 DUP2 PUSH2 0x1E48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EDB PUSH0 DUP4 ADD DUP5 PUSH2 0x1EB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EF8 JUMPI PUSH2 0x1EF7 PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F05 DUP7 DUP3 DUP8 ADD PUSH2 0x1E34 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F16 DUP7 DUP3 DUP8 ADD PUSH2 0x1E34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F27 DUP7 DUP3 DUP8 ADD PUSH2 0x1E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F43 DUP2 PUSH2 0x1F31 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F4D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F5E DUP2 PUSH2 0x1F3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F79 JUMPI PUSH2 0x1F78 PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F86 DUP5 DUP3 DUP6 ADD PUSH2 0x1F50 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F98 DUP2 PUSH2 0x1F31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FB1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1FC3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FD4 DUP2 PUSH2 0x1FB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FEF JUMPI PUSH2 0x1FEE PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FFC DUP5 DUP3 DUP6 ADD PUSH2 0x1FC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x201B JUMPI PUSH2 0x201A PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2028 DUP6 DUP3 DUP7 ADD PUSH2 0x1F50 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2039 DUP6 DUP3 DUP7 ADD PUSH2 0x1E34 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2058 DUP2 PUSH2 0x2043 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2071 PUSH0 DUP4 ADD DUP5 PUSH2 0x204F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x208C JUMPI PUSH2 0x208B PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2099 DUP5 DUP3 DUP6 ADD PUSH2 0x1E34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20B8 JUMPI PUSH2 0x20B7 PUSH2 0x1CA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20C5 DUP6 DUP3 DUP7 ADD PUSH2 0x1E34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1E34 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2124 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2137 JUMPI PUSH2 0x2136 PUSH2 0x20E0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2171 PUSH1 0x14 DUP4 PUSH2 0x1D68 JUMP JUMPDEST SWAP2 POP PUSH2 0x217C DUP3 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x219E DUP2 PUSH2 0x2165 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742061206D656D62657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21D9 PUSH1 0x16 DUP4 PUSH2 0x1D68 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E4 DUP3 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2206 DUP2 PUSH2 0x21CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E76616C6964206D656D626572736869702074797065000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x226E PUSH1 0x17 DUP4 PUSH2 0x1D68 JUMP JUMPDEST SWAP2 POP PUSH2 0x2279 DUP3 PUSH2 0x223A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x229B DUP2 PUSH2 0x2262 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22D9 DUP3 PUSH2 0x1E48 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E4 DUP4 PUSH2 0x1E48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22FC JUMPI PUSH2 0x22FB PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2313 JUMPI PUSH2 0x2312 PUSH2 0x220D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2323 DUP3 PUSH2 0x2302 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2332 DUP3 PUSH2 0x2316 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2342 DUP2 PUSH2 0x2328 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x235B PUSH0 DUP4 ADD DUP6 PUSH2 0x2339 JUMP JUMPDEST PUSH2 0x2368 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EB9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x23C4 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x23A0 JUMPI PUSH2 0x239F PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x23AF JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x23BD DUP6 PUSH2 0x236F JUMP JUMPDEST SWAP5 POP PUSH2 0x2384 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x23DC JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH2 0x23E9 JUMPI PUSH0 SWAP1 POP PUSH2 0x2497 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x23FF JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2409 JUMPI PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2497 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x241B JUMPI PUSH2 0x241A PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2432 JUMPI PUSH2 0x2431 PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2497 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x246D JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2468 JUMPI PUSH2 0x2467 PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST PUSH2 0x2497 JUMP JUMPDEST PUSH2 0x247A DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x237B JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2491 JUMPI PUSH2 0x2490 PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24A8 DUP3 PUSH2 0x1E48 JUMP JUMPDEST SWAP2 POP PUSH2 0x24B3 DUP4 PUSH2 0x2043 JUMP JUMPDEST SWAP3 POP PUSH2 0x24E0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x23CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24F2 DUP3 PUSH2 0x1E48 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FD DUP4 PUSH2 0x1E48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x250B DUP2 PUSH2 0x1E48 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2522 JUMPI PUSH2 0x2521 PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2533 DUP3 PUSH2 0x1E48 JUMP JUMPDEST SWAP2 POP PUSH2 0x253E DUP4 PUSH2 0x1E48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2556 JUMPI PUSH2 0x2555 PUSH2 0x22A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265666572726572206D656D6265727368697020657870697265640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2590 PUSH1 0x1B DUP4 PUSH2 0x1D68 JUMP JUMPDEST SWAP2 POP PUSH2 0x259B DUP3 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25BD DUP2 PUSH2 0x2584 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25F8 PUSH1 0x10 DUP4 PUSH2 0x1D68 JUMP JUMPDEST SWAP2 POP PUSH2 0x2603 DUP3 PUSH2 0x25C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2625 DUP2 PUSH2 0x25EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2635 DUP2 PUSH2 0x1E0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x264E PUSH0 DUP4 ADD DUP5 PUSH2 0x262C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2667 PUSH0 DUP4 ADD DUP7 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x2674 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EB9 JUMP JUMPDEST PUSH2 0x2681 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EB9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x269C PUSH0 DUP4 ADD DUP6 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x26A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F8F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26E4 PUSH1 0x14 DUP4 PUSH2 0x1D68 JUMP JUMPDEST SWAP2 POP PUSH2 0x26EF DUP3 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2711 DUP2 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xD2 PUSH15 0x149AE0F01F2E76854DBD775D570805 SWAP13 MULMOD 0x2F 0xE3 CALLVALUE PUSH14 0xBCC79DCF2836B12564736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "230:4680:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2720:220:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2849:97:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3510:1092:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;327:66:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2588:76:10;;;:::i;:::-;;908:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1615:84:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;288:33:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2459:72;;;:::i;:::-;;756:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4648:260;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;536:62:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;604:64:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:461;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3315:178:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1105:50:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1002:51:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;400:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1779:89:4:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2720:220:10:-;1239:19:3;:17;:19::i;:::-;439:25:10::1;2464:16:0;2475:4;2464:10;:16::i;:::-;2856:6:10::2;2831:21;2841:10;2831:9;:21::i;:::-;:31;;2823:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2897:36;2907:10;2919:5;2926:6;2897:9;:36::i;:::-;1268:1:3::1;2720:220:10::0;;:::o;2849:97:4:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;3510:1092:10:-;1239:19:3;:17;:19::i;:::-;2315:32:10::1;574:24;2336:10;2315:7;:32::i;:::-;2307:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;3612:13:::2;3628:16;:32;3645:14;3628:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;3612:48;;3703:5;3678:21;3688:10;3678:9;:21::i;:::-;:30;;3670:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3744:24;3750:10;3762:5;3744;:24::i;:::-;3779:16;3881:23;3863:41;;;;;;;;:::i;:::-;;:14;:41;;;;;;;;:::i;:::-;;::::0;3859:348:::2;;3931:7;3920:18;;3859:348;;;3977:25;3959:43;;;;;;;;:::i;:::-;;:14;:43;;;;;;;;:::i;:::-;;::::0;3955:252:::2;;4029:7;4018:18;;3955:252;;;4075:22;4057:40:::0;::::2;;;;;;;:::i;:::-;;:14;:40;;;;;;;;:::i;:::-;;::::0;4053:154:::2;;4124:8;4113:19;;4053:154;;;4163:33;;;;;;;;;;:::i;:::-;;;;;;;;4053:154;3955:252;3859:348;4340:16;:28;4357:10;4340:28;;;;;;;;;;;;;;;;4322:15;:46;4318:205;;;4416:8;4384:16;:28;4401:10;4384:28;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;4318:205;;;4504:8;4486:15;:26;;;;:::i;:::-;4455:16;:28;4472:10;4455:28;;;;;;;;;;;;;;;:57;;;;4318:205;4558:10;4538:57;;;4570:14;4586:8;4538:57;;;;;;;:::i;:::-;;;;;;;;3602:1000;;3510:1092:::0;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;327:66:10:-;320:1;379:2;:13;;;;:::i;:::-;368:7;:25;;;;:::i;:::-;327:66;:::o;2707:82:4:-;2756:5;2780:2;2773:9;;2707:82;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2588:76:10:-;439:25;2464:16:0;2475:4;2464:10;:16::i;:::-;2647:10:10::1;:8;:10::i;:::-;2588:76:::0;:::o;908:59::-;;;;;;;;;;;;;;;;;:::o;1615:84:3:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;3004:116:4:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;288:33:10:-;320:1;288:33;:::o;2459:72::-;439:25;2464:16:0;2475:4;2464:10;:16::i;:::-;2516:8:10::1;:6;:8::i;:::-;2459:72:::0;:::o;756:60::-;320:1;804:2;:11;;;;:::i;:::-;798:2;:18;;;;:::i;:::-;756:60;:::o;470:::-;507:23;470:60;:::o;4648:260::-;4721:7;4763:16;:24;4780:6;4763:24;;;;;;;;;;;;;;;;4744:15;:43;4740:162;;4810:1;4803:8;;;;4740:162;4876:15;4849:16;:24;4866:6;4849:24;;;;;;;;;;;;;;;;:42;;;;:::i;:::-;4842:49;;4648:260;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1981:93:4:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;536:62:10:-;574:24;536:62;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;604:64:10:-;643:25;604:64;:::o;2985:461::-;1239:19:3;:17;:19::i;:::-;439:25:10::1;2464:16:0;2475:4;2464:10;:16::i;:::-;3168::10::2;:26;3185:8;3168:26;;;;;;;;;;;;;;;;3150:15;:44;3142:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;320:1;804:2;:11;;;;:::i;:::-;798:2;:18;;;;:::i;:::-;3294:15;:25;3310:8;3294:25;;;;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;;;;;;;;3348:32;3354:8;320:1;804:2;:11;;;;:::i;:::-;798:2;:18;;;;:::i;:::-;3348:5;:32::i;:::-;3413:8;3396:43;;;320:1;804:2;:11;;;;:::i;:::-;798:2;:18;;;;:::i;:::-;3396:43;;;;;;:::i;:::-;;;;;;;;1268:1:3::1;2985:461:10::0;:::o;3315:178:4:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;1105:50:10:-;;;;;;;;;;;;;;;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3551:140:4:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;1002:51:10:-;;;;;;;;;;;;;;;;;:::o;400:64::-;439:25;400:64;:::o;763:146:8:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8726:128:4:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1767:106:3:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;5393:300:4:-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;2433:117:3:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;2186:115::-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;7458:208:4:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;6008:1107:4:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;1945:106:3:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;88:117:11:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:118::-;4183:24;4201:5;4183:24;:::i;:::-;4178:3;4171:37;4096:118;;:::o;4220:222::-;4313:4;4351:2;4340:9;4336:18;4328:26;;4364:71;4432:1;4421:9;4417:17;4408:6;4364:71;:::i;:::-;4220:222;;;;:::o;4448:619::-;4525:6;4533;4541;4590:2;4578:9;4569:7;4565:23;4561:32;4558:119;;;4596:79;;:::i;:::-;4558:119;4716:1;4741:53;4786:7;4777:6;4766:9;4762:22;4741:53;:::i;:::-;4731:63;;4687:117;4843:2;4869:53;4914:7;4905:6;4894:9;4890:22;4869:53;:::i;:::-;4859:63;;4814:118;4971:2;4997:53;5042:7;5033:6;5022:9;5018:22;4997:53;:::i;:::-;4987:63;;4942:118;4448:619;;;;;:::o;5073:77::-;5110:7;5139:5;5128:16;;5073:77;;;:::o;5156:122::-;5229:24;5247:5;5229:24;:::i;:::-;5222:5;5219:35;5209:63;;5268:1;5265;5258:12;5209:63;5156:122;:::o;5284:139::-;5330:5;5368:6;5355:20;5346:29;;5384:33;5411:5;5384:33;:::i;:::-;5284:139;;;;:::o;5429:329::-;5488:6;5537:2;5525:9;5516:7;5512:23;5508:32;5505:119;;;5543:79;;:::i;:::-;5505:119;5663:1;5688:53;5733:7;5724:6;5713:9;5709:22;5688:53;:::i;:::-;5678:63;;5634:117;5429:329;;;;:::o;5764:118::-;5851:24;5869:5;5851:24;:::i;:::-;5846:3;5839:37;5764:118;;:::o;5888:222::-;5981:4;6019:2;6008:9;6004:18;5996:26;;6032:71;6100:1;6089:9;6085:17;6076:6;6032:71;:::i;:::-;5888:222;;;;:::o;6116:119::-;6209:1;6202:5;6199:12;6189:40;;6225:1;6222;6215:12;6189:40;6116:119;:::o;6241:179::-;6307:5;6345:6;6332:20;6323:29;;6361:53;6408:5;6361:53;:::i;:::-;6241:179;;;;:::o;6426:369::-;6505:6;6554:2;6542:9;6533:7;6529:23;6525:32;6522:119;;;6560:79;;:::i;:::-;6522:119;6680:1;6705:73;6770:7;6761:6;6750:9;6746:22;6705:73;:::i;:::-;6695:83;;6651:137;6426:369;;;;:::o;6801:474::-;6869:6;6877;6926:2;6914:9;6905:7;6901:23;6897:32;6894:119;;;6932:79;;:::i;:::-;6894:119;7052:1;7077:53;7122:7;7113:6;7102:9;7098:22;7077:53;:::i;:::-;7067:63;;7023:117;7179:2;7205:53;7250:7;7241:6;7230:9;7226:22;7205:53;:::i;:::-;7195:63;;7150:118;6801:474;;;;;:::o;7281:86::-;7316:7;7356:4;7349:5;7345:16;7334:27;;7281:86;;;:::o;7373:112::-;7456:22;7472:5;7456:22;:::i;:::-;7451:3;7444:35;7373:112;;:::o;7491:214::-;7580:4;7618:2;7607:9;7603:18;7595:26;;7631:67;7695:1;7684:9;7680:17;7671:6;7631:67;:::i;:::-;7491:214;;;;:::o;7711:329::-;7770:6;7819:2;7807:9;7798:7;7794:23;7790:32;7787:119;;;7825:79;;:::i;:::-;7787:119;7945:1;7970:53;8015:7;8006:6;7995:9;7991:22;7970:53;:::i;:::-;7960:63;;7916:117;7711:329;;;;:::o;8046:474::-;8114:6;8122;8171:2;8159:9;8150:7;8146:23;8142:32;8139:119;;;8177:79;;:::i;:::-;8139:119;8297:1;8322:53;8367:7;8358:6;8347:9;8343:22;8322:53;:::i;:::-;8312:63;;8268:117;8424:2;8450:53;8495:7;8486:6;8475:9;8471:22;8450:53;:::i;:::-;8440:63;;8395:118;8046:474;;;;;:::o;8526:180::-;8574:77;8571:1;8564:88;8671:4;8668:1;8661:15;8695:4;8692:1;8685:15;8712:320;8756:6;8793:1;8787:4;8783:12;8773:22;;8840:1;8834:4;8830:12;8861:18;8851:81;;8917:4;8909:6;8905:17;8895:27;;8851:81;8979:2;8971:6;8968:14;8948:18;8945:38;8942:84;;8998:18;;:::i;:::-;8942:84;8763:269;8712:320;;;:::o;9038:170::-;9178:22;9174:1;9166:6;9162:14;9155:46;9038:170;:::o;9214:366::-;9356:3;9377:67;9441:2;9436:3;9377:67;:::i;:::-;9370:74;;9453:93;9542:3;9453:93;:::i;:::-;9571:2;9566:3;9562:12;9555:19;;9214:366;;;:::o;9586:419::-;9752:4;9790:2;9779:9;9775:18;9767:26;;9839:9;9833:4;9829:20;9825:1;9814:9;9810:17;9803:47;9867:131;9993:4;9867:131;:::i;:::-;9859:139;;9586:419;;;:::o;10011:172::-;10151:24;10147:1;10139:6;10135:14;10128:48;10011:172;:::o;10189:366::-;10331:3;10352:67;10416:2;10411:3;10352:67;:::i;:::-;10345:74;;10428:93;10517:3;10428:93;:::i;:::-;10546:2;10541:3;10537:12;10530:19;;10189:366;;;:::o;10561:419::-;10727:4;10765:2;10754:9;10750:18;10742:26;;10814:9;10808:4;10804:20;10800:1;10789:9;10785:17;10778:47;10842:131;10968:4;10842:131;:::i;:::-;10834:139;;10561:419;;;:::o;10986:180::-;11034:77;11031:1;11024:88;11131:4;11128:1;11121:15;11155:4;11152:1;11145:15;11172:173;11312:25;11308:1;11300:6;11296:14;11289:49;11172:173;:::o;11351:366::-;11493:3;11514:67;11578:2;11573:3;11514:67;:::i;:::-;11507:74;;11590:93;11679:3;11590:93;:::i;:::-;11708:2;11703:3;11699:12;11692:19;;11351:366;;;:::o;11723:419::-;11889:4;11927:2;11916:9;11912:18;11904:26;;11976:9;11970:4;11966:20;11962:1;11951:9;11947:17;11940:47;12004:131;12130:4;12004:131;:::i;:::-;11996:139;;11723:419;;;:::o;12148:180::-;12196:77;12193:1;12186:88;12293:4;12290:1;12283:15;12317:4;12314:1;12307:15;12334:191;12374:3;12393:20;12411:1;12393:20;:::i;:::-;12388:25;;12427:20;12445:1;12427:20;:::i;:::-;12422:25;;12470:1;12467;12463:9;12456:16;;12491:3;12488:1;12485:10;12482:36;;;12498:18;;:::i;:::-;12482:36;12334:191;;;;:::o;12531:125::-;12624:1;12617:5;12614:12;12604:46;;12630:18;;:::i;:::-;12604:46;12531:125;:::o;12662:151::-;12719:7;12748:5;12737:16;;12754:53;12801:5;12754:53;:::i;:::-;12662:151;;;:::o;12819:::-;12887:9;12920:44;12958:5;12920:44;:::i;:::-;12907:57;;12819:151;;;:::o;12976:167::-;13081:55;13130:5;13081:55;:::i;:::-;13076:3;13069:68;12976:167;;:::o;13149:368::-;13288:4;13326:2;13315:9;13311:18;13303:26;;13339:89;13425:1;13414:9;13410:17;13401:6;13339:89;:::i;:::-;13438:72;13506:2;13495:9;13491:18;13482:6;13438:72;:::i;:::-;13149:368;;;;;:::o;13523:102::-;13565:8;13612:5;13609:1;13605:13;13584:34;;13523:102;;;:::o;13631:848::-;13692:5;13699:4;13723:6;13714:15;;13747:5;13738:14;;13761:712;13782:1;13772:8;13769:15;13761:712;;;13877:4;13872:3;13868:14;13862:4;13859:24;13856:50;;;13886:18;;:::i;:::-;13856:50;13936:1;13926:8;13922:16;13919:451;;;14351:4;14344:5;14340:16;14331:25;;13919:451;14401:4;14395;14391:15;14383:23;;14431:32;14454:8;14431:32;:::i;:::-;14419:44;;13761:712;;;13631:848;;;;;;;:::o;14485:1073::-;14539:5;14730:8;14720:40;;14751:1;14742:10;;14753:5;;14720:40;14779:4;14769:36;;14796:1;14787:10;;14798:5;;14769:36;14865:4;14913:1;14908:27;;;;14949:1;14944:191;;;;14858:277;;14908:27;14926:1;14917:10;;14928:5;;;14944:191;14989:3;14979:8;14976:17;14973:43;;;14996:18;;:::i;:::-;14973:43;15045:8;15042:1;15038:16;15029:25;;15080:3;15073:5;15070:14;15067:40;;;15087:18;;:::i;:::-;15067:40;15120:5;;;14858:277;;15244:2;15234:8;15231:16;15225:3;15219:4;15216:13;15212:36;15194:2;15184:8;15181:16;15176:2;15170:4;15167:12;15163:35;15147:111;15144:246;;;15300:8;15294:4;15290:19;15281:28;;15335:3;15328:5;15325:14;15322:40;;;15342:18;;:::i;:::-;15322:40;15375:5;;15144:246;15415:42;15453:3;15443:8;15437:4;15434:1;15415:42;:::i;:::-;15400:57;;;;15489:4;15484:3;15480:14;15473:5;15470:25;15467:51;;;15498:18;;:::i;:::-;15467:51;15547:4;15540:5;15536:16;15527:25;;14485:1073;;;;;;:::o;15564:281::-;15622:5;15646:23;15664:4;15646:23;:::i;:::-;15638:31;;15690:25;15706:8;15690:25;:::i;:::-;15678:37;;15734:104;15771:66;15761:8;15755:4;15734:104;:::i;:::-;15725:113;;15564:281;;;;:::o;15851:410::-;15891:7;15914:20;15932:1;15914:20;:::i;:::-;15909:25;;15948:20;15966:1;15948:20;:::i;:::-;15943:25;;16003:1;16000;15996:9;16025:30;16043:11;16025:30;:::i;:::-;16014:41;;16204:1;16195:7;16191:15;16188:1;16185:22;16165:1;16158:9;16138:83;16115:139;;16234:18;;:::i;:::-;16115:139;15899:362;15851:410;;;;:::o;16267:194::-;16307:4;16327:20;16345:1;16327:20;:::i;:::-;16322:25;;16361:20;16379:1;16361:20;:::i;:::-;16356:25;;16405:1;16402;16398:9;16390:17;;16429:1;16423:4;16420:11;16417:37;;;16434:18;;:::i;:::-;16417:37;16267:194;;;;:::o;16467:177::-;16607:29;16603:1;16595:6;16591:14;16584:53;16467:177;:::o;16650:366::-;16792:3;16813:67;16877:2;16872:3;16813:67;:::i;:::-;16806:74;;16889:93;16978:3;16889:93;:::i;:::-;17007:2;17002:3;16998:12;16991:19;;16650:366;;;:::o;17022:419::-;17188:4;17226:2;17215:9;17211:18;17203:26;;17275:9;17269:4;17265:20;17261:1;17250:9;17246:17;17239:47;17303:131;17429:4;17303:131;:::i;:::-;17295:139;;17022:419;;;:::o;17447:166::-;17587:18;17583:1;17575:6;17571:14;17564:42;17447:166;:::o;17619:366::-;17761:3;17782:67;17846:2;17841:3;17782:67;:::i;:::-;17775:74;;17858:93;17947:3;17858:93;:::i;:::-;17976:2;17971:3;17967:12;17960:19;;17619:366;;;:::o;17991:419::-;18157:4;18195:2;18184:9;18180:18;18172:26;;18244:9;18238:4;18234:20;18230:1;18219:9;18215:17;18208:47;18272:131;18398:4;18272:131;:::i;:::-;18264:139;;17991:419;;;:::o;18416:118::-;18503:24;18521:5;18503:24;:::i;:::-;18498:3;18491:37;18416:118;;:::o;18540:222::-;18633:4;18671:2;18660:9;18656:18;18648:26;;18684:71;18752:1;18741:9;18737:17;18728:6;18684:71;:::i;:::-;18540:222;;;;:::o;18768:442::-;18917:4;18955:2;18944:9;18940:18;18932:26;;18968:71;19036:1;19025:9;19021:17;19012:6;18968:71;:::i;:::-;19049:72;19117:2;19106:9;19102:18;19093:6;19049:72;:::i;:::-;19131;19199:2;19188:9;19184:18;19175:6;19131:72;:::i;:::-;18768:442;;;;;;:::o;19216:332::-;19337:4;19375:2;19364:9;19360:18;19352:26;;19388:71;19456:1;19445:9;19441:17;19432:6;19388:71;:::i;:::-;19469:72;19537:2;19526:9;19522:18;19513:6;19469:72;:::i;:::-;19216:332;;;;;:::o;19554:170::-;19694:22;19690:1;19682:6;19678:14;19671:46;19554:170;:::o;19730:366::-;19872:3;19893:67;19957:2;19952:3;19893:67;:::i;:::-;19886:74;;19969:93;20058:3;19969:93;:::i;:::-;20087:2;20082:3;20078:12;20071:19;;19730:366;;;:::o;20102:419::-;20268:4;20306:2;20295:9;20291:18;20283:26;;20355:9;20349:4;20345:20;20341:1;20330:9;20326:17;20319:47;20383:131;20509:4;20383:131;:::i;:::-;20375:139;;20102:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2012400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "374",
								"INITIAL_SUPPLY()": "infinite",
								"MANAGER_ROLE()": "457",
								"MEMBER_ROLE()": "436",
								"REFERRAL_REWARD()": "infinite",
								"STAFF_ROLE()": "437",
								"TRAINER_ROLE()": "392",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2939",
								"decimal()": "377",
								"decimals()": "428",
								"getRemainingMembershipTime(address)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3188",
								"membershipExpiry(address)": "2912",
								"membershipPrices(uint8)": "2779",
								"name()": "infinite",
								"pause()": "infinite",
								"paused()": "2562",
								"payStaff(address,uint256)": "infinite",
								"purchaseMembership(uint8)": "infinite",
								"referralBonuses(address)": "2846",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"rewardReferral(address)": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2478",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 230,
									"end": 4910,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 230,
									"end": 4910,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 230,
									"end": 4910,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1398,
									"end": 2040,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "47796D546F6B656E000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "47594D0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1521,
									"end": 1560,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 1550,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 1550,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1552,
									"end": 1559,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1521,
									"end": 1531,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1521,
									"end": 1531,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1521,
									"end": 1531,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1521,
									"end": 1560,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1521,
									"end": 1560,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1521,
									"end": 1560,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1521,
									"end": 1560,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1521,
									"end": 1560,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1521,
									"end": 1560,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1570,
									"end": 1603,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 439,
									"end": 464,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08"
								},
								{
									"begin": 1595,
									"end": 1602,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1570,
									"end": 1580,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1570,
									"end": 1580,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1570,
									"end": 1580,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1570,
									"end": 1603,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1570,
									"end": 1603,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1570,
									"end": 1603,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1570,
									"end": 1603,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1570,
									"end": 1603,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1570,
									"end": 1603,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1712,
									"end": 1714,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "A"
								},
								{
									"begin": 1712,
									"end": 1723,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1712,
									"end": 1723,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1712,
									"end": 1723,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1712,
									"end": 1723,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1712,
									"end": 1723,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1712,
									"end": 1723,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1712,
									"end": 1723,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1706,
									"end": 1708,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1706,
									"end": 1724,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1706,
									"end": 1724,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1706,
									"end": 1724,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1706,
									"end": 1724,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1706,
									"end": 1724,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1706,
									"end": 1724,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1706,
									"end": 1724,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1678,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1679,
									"end": 1702,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1662,
									"end": 1703,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1662,
									"end": 1703,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1662,
									"end": 1703,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1724,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1724,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1724,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1724,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1810,
									"end": 1812,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "A"
								},
								{
									"begin": 1810,
									"end": 1821,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1810,
									"end": 1821,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1810,
									"end": 1821,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1810,
									"end": 1821,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1810,
									"end": 1821,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1810,
									"end": 1821,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1810,
									"end": 1821,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1803,
									"end": 1806,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "8C"
								},
								{
									"begin": 1803,
									"end": 1822,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1803,
									"end": 1822,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1803,
									"end": 1822,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1803,
									"end": 1822,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1803,
									"end": 1822,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1803,
									"end": 1822,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1803,
									"end": 1822,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1773,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1774,
									"end": 1799,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1757,
									"end": 1800,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1757,
									"end": 1800,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1757,
									"end": 1800,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1822,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1822,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1822,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1757,
									"end": 1822,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1903,
									"end": 1905,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "A"
								},
								{
									"begin": 1903,
									"end": 1914,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1903,
									"end": 1914,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1903,
									"end": 1914,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1903,
									"end": 1914,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1903,
									"end": 1914,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1903,
									"end": 1914,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1903,
									"end": 1914,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 1899,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1F4"
								},
								{
									"begin": 1896,
									"end": 1915,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1896,
									"end": 1915,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 1915,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 1915,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1896,
									"end": 1915,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 1915,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1896,
									"end": 1915,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1869,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1870,
									"end": 1892,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1853,
									"end": 1893,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1853,
									"end": 1893,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1853,
									"end": 1893,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1853,
									"end": 1893,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1915,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1915,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1915,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1915,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2032,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 2008,
									"end": 2015,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 379,
									"end": 381,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "A"
								},
								{
									"begin": 379,
									"end": 392,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 379,
									"end": 392,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 379,
									"end": 392,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 379,
									"end": 392,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 379,
									"end": 392,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 379,
									"end": 392,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 379,
									"end": 392,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 368,
									"end": 375,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "F4240"
								},
								{
									"begin": 368,
									"end": 393,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 368,
									"end": 393,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 368,
									"end": 393,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 368,
									"end": 393,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 368,
									"end": 393,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 368,
									"end": 393,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 368,
									"end": 393,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2007,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2002,
									"end": 2007,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2002,
									"end": 2007,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2032,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2002,
									"end": 2032,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2032,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2002,
									"end": 2032,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 2002,
									"end": 2032,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1398,
									"end": 2040,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 230,
									"end": 4910,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 230,
									"end": 4910,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "116"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 11,
									"value": "116"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "123"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 11,
									"value": "123"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3482,
									"end": 3483,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3475,
									"end": 3483,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3475,
									"end": 3483,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "145"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 11,
									"value": "145"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "146"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 11,
									"value": "146"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "150"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "151"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 11,
									"value": "151"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 11,
									"value": "150"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "153"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "154"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 11,
									"value": "154"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "155"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 11,
									"value": "155"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "156"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 11,
									"value": "156"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "157"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "158"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 11,
									"value": "158"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 11,
									"value": "157"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 11,
									"value": "153"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "161"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 11,
									"value": "161"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "163"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 11,
									"value": "163"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "165"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 11,
									"value": "165"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "166"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "167"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 11,
									"value": "167"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 11,
									"value": "166"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "168"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 11,
									"value": "168"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "169"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 11,
									"value": "169"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "171"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "172"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 11,
									"value": "172"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "173"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 11,
									"value": "173"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "170"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 11,
									"value": "171"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "174"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 11,
									"value": "174"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 11,
									"value": "175"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "177"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "175"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 11,
									"value": "177"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "178"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "179"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 11,
									"value": "179"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 11,
									"value": "178"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 11,
									"value": "170"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6429,
									"end": 6609,
									"name": "tag",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 6429,
									"end": 6609,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6477,
									"end": 6554,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6474,
									"end": 6475,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6467,
									"end": 6555,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6574,
									"end": 6578,
									"name": "PUSH",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 6571,
									"end": 6572,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 6564,
									"end": 6579,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6598,
									"end": 6602,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 6595,
									"end": 6596,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6588,
									"end": 6603,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 6615,
									"end": 6717,
									"name": "tag",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 6615,
									"end": 6717,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6657,
									"end": 6665,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6704,
									"end": 6709,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6701,
									"end": 6702,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 6697,
									"end": 6710,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 6676,
									"end": 6710,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6676,
									"end": 6710,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6615,
									"end": 6717,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6615,
									"end": 6717,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6615,
									"end": 6717,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6615,
									"end": 6717,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "tag",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6784,
									"end": 6789,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6795,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6815,
									"end": 6821,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6806,
									"end": 6821,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6806,
									"end": 6821,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6839,
									"end": 6844,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6830,
									"end": 6844,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6830,
									"end": 6844,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "tag",
									"source": 11,
									"value": "183"
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6874,
									"end": 6875,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 6864,
									"end": 6872,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6861,
									"end": 6876,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "185"
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6969,
									"end": 6973,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 6964,
									"end": 6967,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 6960,
									"end": 6974,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 6954,
									"end": 6958,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6951,
									"end": 6975,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 6948,
									"end": 6998,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6948,
									"end": 6998,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "186"
								},
								{
									"begin": 6948,
									"end": 6998,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6978,
									"end": 6996,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "187"
								},
								{
									"begin": 6978,
									"end": 6996,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 6978,
									"end": 6996,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6978,
									"end": 6996,
									"name": "tag",
									"source": 11,
									"value": "187"
								},
								{
									"begin": 6978,
									"end": 6996,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6948,
									"end": 6998,
									"name": "tag",
									"source": 11,
									"value": "186"
								},
								{
									"begin": 6948,
									"end": 6998,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7028,
									"end": 7029,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 7018,
									"end": 7026,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7014,
									"end": 7030,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 7011,
									"end": 7462,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7011,
									"end": 7462,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "188"
								},
								{
									"begin": 7011,
									"end": 7462,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7443,
									"end": 7447,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 7436,
									"end": 7441,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7432,
									"end": 7448,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 7423,
									"end": 7448,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7423,
									"end": 7448,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7011,
									"end": 7462,
									"name": "tag",
									"source": 11,
									"value": "188"
								},
								{
									"begin": 7011,
									"end": 7462,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 7487,
									"end": 7491,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7483,
									"end": 7498,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 7475,
									"end": 7498,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7475,
									"end": 7498,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7523,
									"end": 7555,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "189"
								},
								{
									"begin": 7546,
									"end": 7554,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7523,
									"end": 7555,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 7523,
									"end": 7555,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7523,
									"end": 7555,
									"name": "tag",
									"source": 11,
									"value": "189"
								},
								{
									"begin": 7523,
									"end": 7555,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7511,
									"end": 7555,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 7511,
									"end": 7555,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "183"
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "tag",
									"source": 11,
									"value": "185"
								},
								{
									"begin": 6853,
									"end": 7565,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6723,
									"end": 7571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6723,
									"end": 7571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "tag",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7631,
									"end": 7636,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7822,
									"end": 7830,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7812,
									"end": 7852,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "191"
								},
								{
									"begin": 7812,
									"end": 7852,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7843,
									"end": 7844,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 7834,
									"end": 7844,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7834,
									"end": 7844,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7845,
									"end": 7850,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "190"
								},
								{
									"begin": 7845,
									"end": 7850,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7812,
									"end": 7852,
									"name": "tag",
									"source": 11,
									"value": "191"
								},
								{
									"begin": 7812,
									"end": 7852,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7871,
									"end": 7875,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7861,
									"end": 7897,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "192"
								},
								{
									"begin": 7861,
									"end": 7897,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7888,
									"end": 7889,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7879,
									"end": 7889,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7879,
									"end": 7889,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7890,
									"end": 7895,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "190"
								},
								{
									"begin": 7890,
									"end": 7895,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7861,
									"end": 7897,
									"name": "tag",
									"source": 11,
									"value": "192"
								},
								{
									"begin": 7861,
									"end": 7897,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7957,
									"end": 7961,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8005,
									"end": 8006,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "194"
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8041,
									"end": 8042,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "195"
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7950,
									"end": 8227,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "193"
								},
								{
									"begin": 7950,
									"end": 8227,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "tag",
									"source": 11,
									"value": "194"
								},
								{
									"begin": 8000,
									"end": 8027,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8018,
									"end": 8019,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8009,
									"end": 8019,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8009,
									"end": 8019,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8020,
									"end": 8025,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8020,
									"end": 8025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "190"
								},
								{
									"begin": 8020,
									"end": 8025,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "tag",
									"source": 11,
									"value": "195"
								},
								{
									"begin": 8036,
									"end": 8227,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8081,
									"end": 8084,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 8071,
									"end": 8079,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8068,
									"end": 8085,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 8065,
									"end": 8108,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8065,
									"end": 8108,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "196"
								},
								{
									"begin": 8065,
									"end": 8108,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8088,
									"end": 8106,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "197"
								},
								{
									"begin": 8088,
									"end": 8106,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 8088,
									"end": 8106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8088,
									"end": 8106,
									"name": "tag",
									"source": 11,
									"value": "197"
								},
								{
									"begin": 8088,
									"end": 8106,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8065,
									"end": 8108,
									"name": "tag",
									"source": 11,
									"value": "196"
								},
								{
									"begin": 8065,
									"end": 8108,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8137,
									"end": 8145,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8134,
									"end": 8135,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 8130,
									"end": 8146,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 8121,
									"end": 8146,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8121,
									"end": 8146,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8172,
									"end": 8175,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8165,
									"end": 8170,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8162,
									"end": 8176,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 8159,
									"end": 8199,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8159,
									"end": 8199,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "198"
								},
								{
									"begin": 8159,
									"end": 8199,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8179,
									"end": 8197,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "199"
								},
								{
									"begin": 8179,
									"end": 8197,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 8179,
									"end": 8197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8179,
									"end": 8197,
									"name": "tag",
									"source": 11,
									"value": "199"
								},
								{
									"begin": 8179,
									"end": 8197,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8159,
									"end": 8199,
									"name": "tag",
									"source": 11,
									"value": "198"
								},
								{
									"begin": 8159,
									"end": 8199,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8212,
									"end": 8217,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8212,
									"end": 8217,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "190"
								},
								{
									"begin": 8212,
									"end": 8217,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7950,
									"end": 8227,
									"name": "tag",
									"source": 11,
									"value": "193"
								},
								{
									"begin": 7950,
									"end": 8227,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7950,
									"end": 8227,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8336,
									"end": 8338,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8326,
									"end": 8334,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8323,
									"end": 8339,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 8317,
									"end": 8320,
									"name": "PUSH",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 8311,
									"end": 8315,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8308,
									"end": 8321,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 8304,
									"end": 8340,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8286,
									"end": 8288,
									"name": "PUSH",
									"source": 11,
									"value": "4E"
								},
								{
									"begin": 8276,
									"end": 8284,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8273,
									"end": 8289,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 8268,
									"end": 8270,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 8262,
									"end": 8266,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8259,
									"end": 8271,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 8255,
									"end": 8290,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8239,
									"end": 8350,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 8236,
									"end": 8482,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8236,
									"end": 8482,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "200"
								},
								{
									"begin": 8236,
									"end": 8482,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8392,
									"end": 8400,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8386,
									"end": 8390,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8382,
									"end": 8401,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 8373,
									"end": 8401,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8373,
									"end": 8401,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8427,
									"end": 8430,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8420,
									"end": 8425,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8417,
									"end": 8431,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 8414,
									"end": 8454,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8414,
									"end": 8454,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "201"
								},
								{
									"begin": 8414,
									"end": 8454,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8434,
									"end": 8452,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "202"
								},
								{
									"begin": 8434,
									"end": 8452,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 8434,
									"end": 8452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8434,
									"end": 8452,
									"name": "tag",
									"source": 11,
									"value": "202"
								},
								{
									"begin": 8434,
									"end": 8452,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8414,
									"end": 8454,
									"name": "tag",
									"source": 11,
									"value": "201"
								},
								{
									"begin": 8414,
									"end": 8454,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8467,
									"end": 8472,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "190"
								},
								{
									"begin": 8467,
									"end": 8472,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8236,
									"end": 8482,
									"name": "tag",
									"source": 11,
									"value": "200"
								},
								{
									"begin": 8236,
									"end": 8482,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8507,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "203"
								},
								{
									"begin": 8545,
									"end": 8548,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8543,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8529,
									"end": 8533,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8526,
									"end": 8527,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8507,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 8507,
									"end": 8549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8507,
									"end": 8549,
									"name": "tag",
									"source": 11,
									"value": "203"
								},
								{
									"begin": 8507,
									"end": 8549,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8492,
									"end": 8549,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 8492,
									"end": 8549,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8492,
									"end": 8549,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8492,
									"end": 8549,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8581,
									"end": 8585,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8576,
									"end": 8579,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8572,
									"end": 8586,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 8565,
									"end": 8570,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8562,
									"end": 8587,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 8559,
									"end": 8610,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8559,
									"end": 8610,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "204"
								},
								{
									"begin": 8559,
									"end": 8610,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8590,
									"end": 8608,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "205"
								},
								{
									"begin": 8590,
									"end": 8608,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 8590,
									"end": 8608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8590,
									"end": 8608,
									"name": "tag",
									"source": 11,
									"value": "205"
								},
								{
									"begin": 8590,
									"end": 8608,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8559,
									"end": 8610,
									"name": "tag",
									"source": 11,
									"value": "204"
								},
								{
									"begin": 8559,
									"end": 8610,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8639,
									"end": 8643,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8632,
									"end": 8637,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8628,
									"end": 8644,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 8619,
									"end": 8644,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8619,
									"end": 8644,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "tag",
									"source": 11,
									"value": "190"
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7577,
									"end": 8650,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7577,
									"end": 8650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8656,
									"end": 8742,
									"name": "tag",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 8656,
									"end": 8742,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8691,
									"end": 8698,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8731,
									"end": 8735,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 8724,
									"end": 8729,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8720,
									"end": 8736,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8709,
									"end": 8736,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8709,
									"end": 8736,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8656,
									"end": 8742,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8656,
									"end": 8742,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8656,
									"end": 8742,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8656,
									"end": 8742,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8806,
									"end": 8811,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8830,
									"end": 8853,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "208"
								},
								{
									"begin": 8848,
									"end": 8852,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8830,
									"end": 8853,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 8830,
									"end": 8853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8830,
									"end": 8853,
									"name": "tag",
									"source": 11,
									"value": "208"
								},
								{
									"begin": 8830,
									"end": 8853,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8822,
									"end": 8853,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8822,
									"end": 8853,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8874,
									"end": 8899,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "209"
								},
								{
									"begin": 8890,
									"end": 8898,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8874,
									"end": 8899,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 8874,
									"end": 8899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8874,
									"end": 8899,
									"name": "tag",
									"source": 11,
									"value": "209"
								},
								{
									"begin": 8874,
									"end": 8899,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8862,
									"end": 8899,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 8862,
									"end": 8899,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8918,
									"end": 9022,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "210"
								},
								{
									"begin": 8955,
									"end": 9021,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8945,
									"end": 8953,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8939,
									"end": 8943,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8918,
									"end": 9022,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 8918,
									"end": 9022,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8918,
									"end": 9022,
									"name": "tag",
									"source": 11,
									"value": "210"
								},
								{
									"begin": 8918,
									"end": 9022,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8909,
									"end": 9022,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8909,
									"end": 9022,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8748,
									"end": 9029,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8748,
									"end": 9029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9075,
									"end": 9082,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9098,
									"end": 9118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "212"
								},
								{
									"begin": 9116,
									"end": 9117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9098,
									"end": 9118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 9098,
									"end": 9118,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9098,
									"end": 9118,
									"name": "tag",
									"source": 11,
									"value": "212"
								},
								{
									"begin": 9098,
									"end": 9118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9093,
									"end": 9118,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9093,
									"end": 9118,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9132,
									"end": 9152,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "213"
								},
								{
									"begin": 9150,
									"end": 9151,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 9132,
									"end": 9152,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 9132,
									"end": 9152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9132,
									"end": 9152,
									"name": "tag",
									"source": 11,
									"value": "213"
								},
								{
									"begin": 9132,
									"end": 9152,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9127,
									"end": 9152,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 9127,
									"end": 9152,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9187,
									"end": 9188,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9184,
									"end": 9185,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9180,
									"end": 9189,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 9209,
									"end": 9239,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "214"
								},
								{
									"begin": 9227,
									"end": 9238,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 9209,
									"end": 9239,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 9209,
									"end": 9239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9209,
									"end": 9239,
									"name": "tag",
									"source": 11,
									"value": "214"
								},
								{
									"begin": 9209,
									"end": 9239,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9198,
									"end": 9239,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9198,
									"end": 9239,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9388,
									"end": 9389,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9379,
									"end": 9386,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9375,
									"end": 9390,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 9372,
									"end": 9373,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 9369,
									"end": 9391,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 9349,
									"end": 9350,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 9342,
									"end": 9351,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 9322,
									"end": 9405,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 9299,
									"end": 9438,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "215"
								},
								{
									"begin": 9299,
									"end": 9438,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 9418,
									"end": 9436,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "216"
								},
								{
									"begin": 9418,
									"end": 9436,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 9418,
									"end": 9436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9418,
									"end": 9436,
									"name": "tag",
									"source": 11,
									"value": "216"
								},
								{
									"begin": 9418,
									"end": 9436,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9299,
									"end": 9438,
									"name": "tag",
									"source": 11,
									"value": "215"
								},
								{
									"begin": 9299,
									"end": 9438,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9083,
									"end": 9445,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9035,
									"end": 9445,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9035,
									"end": 9445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9451,
									"end": 9631,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 9451,
									"end": 9631,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9499,
									"end": 9576,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9496,
									"end": 9497,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9489,
									"end": 9577,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 9596,
									"end": 9600,
									"name": "PUSH",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 9593,
									"end": 9594,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 9586,
									"end": 9601,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 9620,
									"end": 9624,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 9617,
									"end": 9618,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9610,
									"end": 9625,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 9637,
									"end": 9755,
									"name": "tag",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 9637,
									"end": 9755,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9724,
									"end": 9748,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "219"
								},
								{
									"begin": 9742,
									"end": 9747,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 9724,
									"end": 9748,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 9724,
									"end": 9748,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9724,
									"end": 9748,
									"name": "tag",
									"source": 11,
									"value": "219"
								},
								{
									"begin": 9724,
									"end": 9748,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9719,
									"end": 9722,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9712,
									"end": 9749,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 9637,
									"end": 9755,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9637,
									"end": 9755,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9637,
									"end": 9755,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9761,
									"end": 9983,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 9761,
									"end": 9983,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9854,
									"end": 9858,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9892,
									"end": 9894,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 9881,
									"end": 9890,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9877,
									"end": 9895,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9869,
									"end": 9895,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9869,
									"end": 9895,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9905,
									"end": 9976,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "221"
								},
								{
									"begin": 9973,
									"end": 9974,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9962,
									"end": 9971,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 9958,
									"end": 9975,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9949,
									"end": 9955,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 9905,
									"end": 9976,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 9905,
									"end": 9976,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9905,
									"end": 9976,
									"name": "tag",
									"source": 11,
									"value": "221"
								},
								{
									"begin": 9905,
									"end": 9976,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9761,
									"end": 9983,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 9761,
									"end": 9983,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9761,
									"end": 9983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9761,
									"end": 9983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9761,
									"end": 9983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9989,
									"end": 10180,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 9989,
									"end": 10180,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10029,
									"end": 10032,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 10048,
									"end": 10068,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "223"
								},
								{
									"begin": 10066,
									"end": 10067,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10048,
									"end": 10068,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 10048,
									"end": 10068,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10048,
									"end": 10068,
									"name": "tag",
									"source": 11,
									"value": "223"
								},
								{
									"begin": 10048,
									"end": 10068,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10043,
									"end": 10068,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 10043,
									"end": 10068,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10082,
									"end": 10102,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "224"
								},
								{
									"begin": 10100,
									"end": 10101,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 10082,
									"end": 10102,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 10082,
									"end": 10102,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10082,
									"end": 10102,
									"name": "tag",
									"source": 11,
									"value": "224"
								},
								{
									"begin": 10082,
									"end": 10102,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10077,
									"end": 10102,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 10077,
									"end": 10102,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10125,
									"end": 10126,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10122,
									"end": 10123,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10118,
									"end": 10127,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10111,
									"end": 10127,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 10111,
									"end": 10127,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10146,
									"end": 10149,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 10143,
									"end": 10144,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10140,
									"end": 10150,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 10137,
									"end": 10173,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 10137,
									"end": 10173,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "225"
								},
								{
									"begin": 10137,
									"end": 10173,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 10153,
									"end": 10171,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "226"
								},
								{
									"begin": 10153,
									"end": 10171,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 10153,
									"end": 10171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10153,
									"end": 10171,
									"name": "tag",
									"source": 11,
									"value": "226"
								},
								{
									"begin": 10153,
									"end": 10171,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10137,
									"end": 10173,
									"name": "tag",
									"source": 11,
									"value": "225"
								},
								{
									"begin": 10137,
									"end": 10173,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9989,
									"end": 10180,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 9989,
									"end": 10180,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9989,
									"end": 10180,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9989,
									"end": 10180,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9989,
									"end": 10180,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10186,
									"end": 10304,
									"name": "tag",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 10186,
									"end": 10304,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10273,
									"end": 10297,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "228"
								},
								{
									"begin": 10291,
									"end": 10296,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 10273,
									"end": 10297,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 10273,
									"end": 10297,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10273,
									"end": 10297,
									"name": "tag",
									"source": 11,
									"value": "228"
								},
								{
									"begin": 10273,
									"end": 10297,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10268,
									"end": 10271,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10261,
									"end": 10298,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 10186,
									"end": 10304,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10186,
									"end": 10304,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10186,
									"end": 10304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10310,
									"end": 10752,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 10310,
									"end": 10752,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10459,
									"end": 10463,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 10497,
									"end": 10499,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 10486,
									"end": 10495,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10482,
									"end": 10500,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10474,
									"end": 10500,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 10474,
									"end": 10500,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10510,
									"end": 10581,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "230"
								},
								{
									"begin": 10578,
									"end": 10579,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 10567,
									"end": 10576,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 10563,
									"end": 10580,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10554,
									"end": 10560,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 10510,
									"end": 10581,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 10510,
									"end": 10581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10510,
									"end": 10581,
									"name": "tag",
									"source": 11,
									"value": "230"
								},
								{
									"begin": 10510,
									"end": 10581,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10591,
									"end": 10663,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "231"
								},
								{
									"begin": 10659,
									"end": 10661,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 10648,
									"end": 10657,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 10644,
									"end": 10662,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10635,
									"end": 10641,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 10591,
									"end": 10663,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 10591,
									"end": 10663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10591,
									"end": 10663,
									"name": "tag",
									"source": 11,
									"value": "231"
								},
								{
									"begin": 10591,
									"end": 10663,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10673,
									"end": 10745,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "232"
								},
								{
									"begin": 10741,
									"end": 10743,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 10730,
									"end": 10739,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 10726,
									"end": 10744,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10717,
									"end": 10723,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 10673,
									"end": 10745,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 10673,
									"end": 10745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10673,
									"end": 10745,
									"name": "tag",
									"source": 11,
									"value": "232"
								},
								{
									"begin": 10673,
									"end": 10745,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10310,
									"end": 10752,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 10310,
									"end": 10752,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 10310,
									"end": 10752,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10310,
									"end": 10752,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10310,
									"end": 10752,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10310,
									"end": 10752,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10310,
									"end": 10752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10758,
									"end": 10980,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 10758,
									"end": 10980,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10851,
									"end": 10855,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 10889,
									"end": 10891,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 10878,
									"end": 10887,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10874,
									"end": 10892,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10866,
									"end": 10892,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 10866,
									"end": 10892,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10902,
									"end": 10973,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "234"
								},
								{
									"begin": 10970,
									"end": 10971,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 10959,
									"end": 10968,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 10955,
									"end": 10972,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10946,
									"end": 10952,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 10902,
									"end": 10973,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 10902,
									"end": 10973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10902,
									"end": 10973,
									"name": "tag",
									"source": 11,
									"value": "234"
								},
								{
									"begin": 10902,
									"end": 10973,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10758,
									"end": 10980,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 10758,
									"end": 10980,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 10758,
									"end": 10980,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10758,
									"end": 10980,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10758,
									"end": 10980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 230,
									"end": 4910,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 230,
									"end": 4910,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 230,
									"end": 4910,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 230,
									"end": 4910,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 230,
									"end": 4910,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 230,
									"end": 4910,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 230,
									"end": 4910,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 230,
									"end": 4910,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 230,
									"end": 4910,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220efd26e149ae0f01f2e76854dbd775d5708059c092fe3346dbcc79dcf2836b12564736f6c634300081c0033",
									".code": [
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "76809CE3"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "B4694876"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "B4694876"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "EA4BBAF4"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "EC87621C"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "A61B93CC"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "A683DFAB"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "8621026A"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "8621026A"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "A10F469E"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "76809CE3"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "84A3A0F3"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "85290FA1"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "4B6E2331"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "2FF2E9DC"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "265A5EEA"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "CA2A400"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 4910,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2720,
											"end": 2940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2720,
											"end": 2940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 3510,
											"end": 4602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 3510,
											"end": 4602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 393,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 327,
											"end": 393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 327,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 327,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 327,
											"end": 393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 327,
											"end": 393,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 327,
											"end": 393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 327,
											"end": 393,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 393,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 327,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 327,
											"end": 393,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 327,
											"end": 393,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 327,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 327,
											"end": 393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 327,
											"end": 393,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 327,
											"end": 393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 327,
											"end": 393,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 393,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 327,
											"end": 393,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 327,
											"end": 393,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 327,
											"end": 393,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 327,
											"end": 393,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 327,
											"end": 393,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2588,
											"end": 2664,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 2588,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 2588,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2588,
											"end": 2664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2664,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 2588,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2664,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 908,
											"end": 967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 908,
											"end": 967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 908,
											"end": 967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 288,
											"end": 321,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 288,
											"end": 321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 288,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 288,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 288,
											"end": 321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 288,
											"end": 321,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 288,
											"end": 321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 288,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 321,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 288,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 288,
											"end": 321,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 288,
											"end": 321,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 288,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 288,
											"end": 321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 288,
											"end": 321,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 288,
											"end": 321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 288,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 321,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 288,
											"end": 321,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 288,
											"end": 321,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 288,
											"end": 321,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 288,
											"end": 321,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 288,
											"end": 321,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2531,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2459,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2459,
											"end": 2531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2531,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2459,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2531,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 756,
											"end": 816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 756,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 756,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 756,
											"end": 816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 816,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 756,
											"end": 816,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 756,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 756,
											"end": 816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 816,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 470,
											"end": 530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 470,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 470,
											"end": 530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 470,
											"end": 530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 530,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 470,
											"end": 530,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 470,
											"end": 530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 470,
											"end": 530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 530,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 4648,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 4648,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4648,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 536,
											"end": 598,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 536,
											"end": 598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 536,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 536,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 536,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 536,
											"end": 598,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 536,
											"end": 598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 536,
											"end": 598,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 598,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 536,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 536,
											"end": 598,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 536,
											"end": 598,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 536,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 536,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 536,
											"end": 598,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 536,
											"end": 598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 536,
											"end": 598,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 598,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 536,
											"end": 598,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 536,
											"end": 598,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 536,
											"end": 598,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 536,
											"end": 598,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 536,
											"end": 598,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 604,
											"end": 668,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 604,
											"end": 668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 604,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 604,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 604,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 604,
											"end": 668,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 604,
											"end": 668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 604,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 668,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 604,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 604,
											"end": 668,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 604,
											"end": 668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 604,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 604,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 604,
											"end": 668,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 604,
											"end": 668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 604,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 668,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 604,
											"end": 668,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 604,
											"end": 668,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 604,
											"end": 668,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 604,
											"end": 668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 604,
											"end": 668,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2985,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 2985,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1105,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 1105,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1105,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1002,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1002,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1002,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 400,
											"end": 464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 400,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 400,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 400,
											"end": 464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 464,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 400,
											"end": 464,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 400,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 400,
											"end": 464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 464,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2475,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2856,
											"end": 2862,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2852,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 2841,
											"end": 2851,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2840,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2831,
											"end": 2852,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2852,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 2831,
											"end": 2852,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2862,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2831,
											"end": 2862,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 2823,
											"end": 2887,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2823,
											"end": 2887,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2933,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2907,
											"end": 2917,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2919,
											"end": 2924,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2926,
											"end": 2932,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 2897,
											"end": 2933,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2933,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2897,
											"end": 2933,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1269,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 574,
											"end": 598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "829B824E2329E205435D941C9F13BAF578548505283D29261236D8E6596D4636"
										},
										{
											"begin": 2336,
											"end": 2346,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2315,
											"end": 2322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2315,
											"end": 2347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2315,
											"end": 2347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2315,
											"end": 2347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 2307,
											"end": 2374,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2307,
											"end": 2374,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3644,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3659,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3628,
											"end": 3660,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3628,
											"end": 3660,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3660,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3660,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3703,
											"end": 3708,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3699,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 3688,
											"end": 3698,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3687,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 3678,
											"end": 3699,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3699,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 3678,
											"end": 3699,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3708,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3708,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 3670,
											"end": 3733,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 3670,
											"end": 3733,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3768,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 3750,
											"end": 3760,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3767,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3749,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 3744,
											"end": 3768,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3768,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 3744,
											"end": 3768,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3795,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3904,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3863,
											"end": 3904,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3877,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3863,
											"end": 3904,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3863,
											"end": 3904,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3904,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3859,
											"end": 4207,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 3859,
											"end": 4207,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3938,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "278D00"
										},
										{
											"begin": 3920,
											"end": 3938,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3938,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3859,
											"end": 4207,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3859,
											"end": 4207,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3859,
											"end": 4207,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 3859,
											"end": 4207,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3977,
											"end": 4002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3959,
											"end": 4002,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 3973,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3959,
											"end": 4002,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3959,
											"end": 4002,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 4002,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3955,
											"end": 4207,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 3955,
											"end": 4207,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "76A700"
										},
										{
											"begin": 4018,
											"end": 4036,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4036,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3955,
											"end": 4207,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 3955,
											"end": 4207,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3955,
											"end": 4207,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 3955,
											"end": 4207,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4075,
											"end": 4097,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4057,
											"end": 4097,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4057,
											"end": 4097,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4071,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4057,
											"end": 4097,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 4057,
											"end": 4097,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4097,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4207,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4053,
											"end": 4207,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4132,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1E13380"
										},
										{
											"begin": 4113,
											"end": 4132,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4113,
											"end": 4132,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4207,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 4053,
											"end": 4207,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4207,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4053,
											"end": 4207,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 4163,
											"end": 4196,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4196,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4207,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 4053,
											"end": 4207,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3955,
											"end": 4207,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 3955,
											"end": 4207,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3859,
											"end": 4207,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3859,
											"end": 4207,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4356,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4367,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4368,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4322,
											"end": 4337,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4523,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4523,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 4318,
											"end": 4523,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4424,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4400,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4411,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4412,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 4384,
											"end": 4424,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4424,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4523,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 4318,
											"end": 4523,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4523,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 4318,
											"end": 4523,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4504,
											"end": 4512,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4501,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4512,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 4486,
											"end": 4512,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4512,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4512,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 4486,
											"end": 4512,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4512,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 4486,
											"end": 4512,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4471,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4482,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4455,
											"end": 4483,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4512,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4512,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4512,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4512,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4523,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 4318,
											"end": 4523,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4568,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "E2C5B6420B508A46B55A5CB55C7340A67492866D4F51461EE443958079FE8357"
										},
										{
											"begin": 4570,
											"end": 4584,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4594,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 4538,
											"end": 4595,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4595,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 3602,
											"end": 4602,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3602,
											"end": 4602,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 4602,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 4602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 393,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 327,
											"end": 393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 381,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 379,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 379,
											"end": 392,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 379,
											"end": 392,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 379,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 379,
											"end": 392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 379,
											"end": 392,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 379,
											"end": 392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 10,
											"value": "F4240"
										},
										{
											"begin": 368,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 368,
											"end": 393,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 368,
											"end": 393,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 368,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 368,
											"end": 393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 368,
											"end": 393,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 368,
											"end": 393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 327,
											"end": 393,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 327,
											"end": 393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2588,
											"end": 2664,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2588,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2647,
											"end": 2655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2647,
											"end": 2657,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2657,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2647,
											"end": 2657,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 967,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 908,
											"end": 967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 288,
											"end": 321,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 288,
											"end": 321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 288,
											"end": 321,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 288,
											"end": 321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2531,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2459,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 2516,
											"end": 2522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 2516,
											"end": 2524,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 2516,
											"end": 2524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2531,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 756,
											"end": 816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 804,
											"end": 806,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 804,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 804,
											"end": 815,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 804,
											"end": 815,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 804,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 804,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 804,
											"end": 815,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 804,
											"end": 815,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 798,
											"end": 816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 798,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 798,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 798,
											"end": 816,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 756,
											"end": 816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 470,
											"end": 530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 507,
											"end": 530,
											"name": "PUSH",
											"source": 10,
											"value": "5620A1113A72B02A617976B3F6B15600DD7A8B3A916A9CA01E23119D989A0543"
										},
										{
											"begin": 470,
											"end": 530,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 470,
											"end": 530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4721,
											"end": 4728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4763,
											"end": 4779,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4786,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4759,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4787,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4740,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4740,
											"end": 4902,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4810,
											"end": 4811,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4811,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 4811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4803,
											"end": 4811,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4740,
											"end": 4902,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4740,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4876,
											"end": 4891,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 4872,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4849,
											"end": 4891,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 4849,
											"end": 4891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4891,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4849,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 536,
											"end": 598,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 536,
											"end": 598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH",
											"source": 10,
											"value": "829B824E2329E205435D941C9F13BAF578548505283D29261236D8E6596D4636"
										},
										{
											"begin": 536,
											"end": 598,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 536,
											"end": 598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 668,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 604,
											"end": 668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 643,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "123C69CC12368838CCA6D46B7505BEC842D9E85A26AFF07E23AA57AD59DAC6BA"
										},
										{
											"begin": 604,
											"end": 668,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 604,
											"end": 668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 439,
											"end": 464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 2475,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3184,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3193,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3194,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3165,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3194,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3142,
											"end": 3226,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 3142,
											"end": 3226,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 804,
											"end": 806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 804,
											"end": 815,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 798,
											"end": 800,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 798,
											"end": 816,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3309,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3318,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3319,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 3294,
											"end": 3338,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3338,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3348,
											"end": 3380,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3354,
											"end": 3362,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 804,
											"end": 806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 804,
											"end": 815,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 798,
											"end": 800,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 798,
											"end": 816,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3348,
											"end": 3353,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3348,
											"end": 3380,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3348,
											"end": 3380,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3348,
											"end": 3380,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3421,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "E02A129F98418D04669038A9874F706689BA7726C0C0E82C67319EC8CA9001EA"
										},
										{
											"begin": 320,
											"end": 321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 804,
											"end": 806,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 804,
											"end": 815,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 804,
											"end": 815,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 798,
											"end": 800,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 798,
											"end": 816,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 798,
											"end": 816,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3396,
											"end": 3439,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3439,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1269,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 400,
											"end": 464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 439,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08"
										},
										{
											"begin": 400,
											"end": 464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 400,
											"end": 464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 4183,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4171,
											"end": 4208,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4417,
											"end": 4434,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 4364,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "tag",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4569,
											"end": 4576,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4565,
											"end": 4588,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4561,
											"end": 4593,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 4596,
											"end": 4675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "tag",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 4786,
											"end": 4793,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4777,
											"end": 4783,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4762,
											"end": 4784,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 4741,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "tag",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4687,
											"end": 4804,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 4914,
											"end": 4921,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4894,
											"end": 4903,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 4869,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "tag",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4932,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4971,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 4997,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "tag",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 5060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 5067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5110,
											"end": 5117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5144,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5073,
											"end": 5150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 5247,
											"end": 5252,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 5229,
											"end": 5253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "tag",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5222,
											"end": 5227,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5219,
											"end": 5254,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5270,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5156,
											"end": 5278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 5384,
											"end": 5417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "tag",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5539,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5516,
											"end": 5523,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5512,
											"end": 5535,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5508,
											"end": 5540,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 5543,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "tag",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "tag",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 5733,
											"end": 5740,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5713,
											"end": 5722,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5709,
											"end": 5731,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 5688,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "tag",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5634,
											"end": 5751,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 5851,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "tag",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5846,
											"end": 5849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5876,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5981,
											"end": 5985,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6008,
											"end": 6017,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6022,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6098,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6085,
											"end": 6102,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 6032,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "tag",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 6110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6235,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 6116,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6209,
											"end": 6210,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 6202,
											"end": 6207,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6211,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6189,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 6189,
											"end": 6229,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6222,
											"end": 6223,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6215,
											"end": 6227,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6189,
											"end": 6229,
											"name": "tag",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 6189,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6235,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6420,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 6241,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6307,
											"end": 6312,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6345,
											"end": 6351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6332,
											"end": 6352,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6323,
											"end": 6352,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6323,
											"end": 6352,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6361,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 6408,
											"end": 6413,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6361,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 6361,
											"end": 6414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6361,
											"end": 6414,
											"name": "tag",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 6361,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6420,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6420,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6420,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6420,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6426,
											"end": 6795,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 6426,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6505,
											"end": 6511,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6554,
											"end": 6556,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6542,
											"end": 6551,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6533,
											"end": 6540,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6529,
											"end": 6552,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6525,
											"end": 6557,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6522,
											"end": 6641,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6522,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 6522,
											"end": 6641,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6560,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 6560,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 6560,
											"end": 6639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6560,
											"end": 6639,
											"name": "tag",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 6560,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6522,
											"end": 6641,
											"name": "tag",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 6522,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 6770,
											"end": 6777,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6761,
											"end": 6767,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6750,
											"end": 6759,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6746,
											"end": 6768,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 6705,
											"end": 6778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6778,
											"name": "tag",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 6705,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6695,
											"end": 6778,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6695,
											"end": 6778,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6651,
											"end": 6788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6426,
											"end": 6795,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6426,
											"end": 6795,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6426,
											"end": 6795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6426,
											"end": 6795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6426,
											"end": 6795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6801,
											"end": 7275,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 6801,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6869,
											"end": 6875,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6877,
											"end": 6883,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6926,
											"end": 6928,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6914,
											"end": 6923,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6905,
											"end": 6912,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6901,
											"end": 6924,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6897,
											"end": 6929,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6894,
											"end": 7013,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6894,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 6894,
											"end": 7013,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6932,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 6932,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 6932,
											"end": 7011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6932,
											"end": 7011,
											"name": "tag",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 6932,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6894,
											"end": 7013,
											"name": "tag",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 6894,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7053,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 7122,
											"end": 7129,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7119,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7102,
											"end": 7111,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7098,
											"end": 7120,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7077,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 7077,
											"end": 7130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7077,
											"end": 7130,
											"name": "tag",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 7077,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7067,
											"end": 7130,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7067,
											"end": 7130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7023,
											"end": 7140,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7179,
											"end": 7181,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7205,
											"end": 7258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 7250,
											"end": 7257,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7241,
											"end": 7247,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7230,
											"end": 7239,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7226,
											"end": 7248,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 7205,
											"end": 7258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7258,
											"name": "tag",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 7205,
											"end": 7258,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7150,
											"end": 7268,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6801,
											"end": 7275,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6801,
											"end": 7275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6801,
											"end": 7275,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6801,
											"end": 7275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6801,
											"end": 7275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6801,
											"end": 7275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7367,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 7281,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7316,
											"end": 7323,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7356,
											"end": 7360,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7349,
											"end": 7354,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7361,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7361,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7367,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7367,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7367,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7373,
											"end": 7485,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 7373,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 7472,
											"end": 7477,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 7456,
											"end": 7478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "tag",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7451,
											"end": 7454,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7479,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7373,
											"end": 7485,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7373,
											"end": 7485,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7373,
											"end": 7485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7491,
											"end": 7705,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 7491,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7580,
											"end": 7584,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7618,
											"end": 7620,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7607,
											"end": 7616,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7603,
											"end": 7621,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7595,
											"end": 7621,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7595,
											"end": 7621,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7631,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 7695,
											"end": 7696,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7693,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7680,
											"end": 7697,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7671,
											"end": 7677,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7631,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 7631,
											"end": 7698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7631,
											"end": 7698,
											"name": "tag",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 7631,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7491,
											"end": 7705,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7491,
											"end": 7705,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7491,
											"end": 7705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7491,
											"end": 7705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7491,
											"end": 7705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7711,
											"end": 8040,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 7711,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7776,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7819,
											"end": 7821,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7807,
											"end": 7816,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7798,
											"end": 7805,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7794,
											"end": 7817,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7790,
											"end": 7822,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7787,
											"end": 7906,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7787,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 7787,
											"end": 7906,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7825,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 7825,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 7825,
											"end": 7904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7825,
											"end": 7904,
											"name": "tag",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 7825,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7787,
											"end": 7906,
											"name": "tag",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 7787,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7945,
											"end": 7946,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 8015,
											"end": 8022,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8006,
											"end": 8012,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7995,
											"end": 8004,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7991,
											"end": 8013,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7970,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 7970,
											"end": 8023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7970,
											"end": 8023,
											"name": "tag",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 7970,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7960,
											"end": 8023,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7960,
											"end": 8023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7916,
											"end": 8033,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7711,
											"end": 8040,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7711,
											"end": 8040,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7711,
											"end": 8040,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7711,
											"end": 8040,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7711,
											"end": 8040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8046,
											"end": 8520,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 8046,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8114,
											"end": 8120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8128,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8171,
											"end": 8173,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8159,
											"end": 8168,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8150,
											"end": 8157,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8142,
											"end": 8174,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8139,
											"end": 8258,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8139,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 8139,
											"end": 8258,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8177,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 8177,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 8177,
											"end": 8256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8177,
											"end": 8256,
											"name": "tag",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 8177,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8139,
											"end": 8258,
											"name": "tag",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 8139,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8297,
											"end": 8298,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8322,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 8367,
											"end": 8374,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8358,
											"end": 8364,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8347,
											"end": 8356,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8343,
											"end": 8365,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8322,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 8322,
											"end": 8375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8322,
											"end": 8375,
											"name": "tag",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 8322,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8312,
											"end": 8375,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8312,
											"end": 8375,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8268,
											"end": 8385,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8424,
											"end": 8426,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8450,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 8495,
											"end": 8502,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8486,
											"end": 8492,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8475,
											"end": 8484,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8471,
											"end": 8493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8450,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 8450,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8450,
											"end": 8503,
											"name": "tag",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 8450,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8440,
											"end": 8503,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8440,
											"end": 8503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8395,
											"end": 8513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8046,
											"end": 8520,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8046,
											"end": 8520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8046,
											"end": 8520,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8046,
											"end": 8520,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8046,
											"end": 8520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8046,
											"end": 8520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8526,
											"end": 8706,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 8526,
											"end": 8706,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8574,
											"end": 8651,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8571,
											"end": 8572,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8564,
											"end": 8652,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8671,
											"end": 8675,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 8668,
											"end": 8669,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8661,
											"end": 8676,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8695,
											"end": 8699,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8692,
											"end": 8693,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8685,
											"end": 8700,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8712,
											"end": 9032,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 8712,
											"end": 9032,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8756,
											"end": 8762,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8793,
											"end": 8794,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 8787,
											"end": 8791,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8783,
											"end": 8795,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 8773,
											"end": 8795,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8773,
											"end": 8795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8840,
											"end": 8841,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8834,
											"end": 8838,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8830,
											"end": 8842,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8861,
											"end": 8879,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8851,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 8851,
											"end": 8932,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8917,
											"end": 8921,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 8909,
											"end": 8915,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8905,
											"end": 8922,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8895,
											"end": 8922,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8895,
											"end": 8922,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8851,
											"end": 8932,
											"name": "tag",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 8851,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8979,
											"end": 8981,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8968,
											"end": 8982,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 8948,
											"end": 8966,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8945,
											"end": 8983,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8942,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 8942,
											"end": 9026,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8998,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 8998,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 8998,
											"end": 9016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8998,
											"end": 9016,
											"name": "tag",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 8998,
											"end": 9016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8942,
											"end": 9026,
											"name": "tag",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 8942,
											"end": 9026,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8763,
											"end": 9032,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8712,
											"end": 9032,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8712,
											"end": 9032,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8712,
											"end": 9032,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8712,
											"end": 9032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9038,
											"end": 9208,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 9038,
											"end": 9208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9178,
											"end": 9200,
											"name": "PUSH",
											"source": 11,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 9174,
											"end": 9175,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9162,
											"end": 9176,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9155,
											"end": 9201,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9038,
											"end": 9208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9038,
											"end": 9208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9214,
											"end": 9580,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 9214,
											"end": 9580,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9356,
											"end": 9359,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9377,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "557"
										},
										{
											"begin": 9441,
											"end": 9443,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 9436,
											"end": 9439,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9377,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 9377,
											"end": 9444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9377,
											"end": 9444,
											"name": "tag",
											"source": 11,
											"value": "557"
										},
										{
											"begin": 9377,
											"end": 9444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9370,
											"end": 9444,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9370,
											"end": 9444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9453,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "558"
										},
										{
											"begin": 9542,
											"end": 9545,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9453,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 9453,
											"end": 9546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9453,
											"end": 9546,
											"name": "tag",
											"source": 11,
											"value": "558"
										},
										{
											"begin": 9453,
											"end": 9546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9571,
											"end": 9573,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9566,
											"end": 9569,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9562,
											"end": 9574,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9555,
											"end": 9574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9555,
											"end": 9574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9214,
											"end": 9580,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9214,
											"end": 9580,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9214,
											"end": 9580,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9214,
											"end": 9580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9586,
											"end": 10005,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 9586,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9752,
											"end": 9756,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9790,
											"end": 9792,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9779,
											"end": 9788,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9775,
											"end": 9793,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9767,
											"end": 9793,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9767,
											"end": 9793,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9839,
											"end": 9848,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9833,
											"end": 9837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9829,
											"end": 9849,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9825,
											"end": 9826,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9814,
											"end": 9823,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9810,
											"end": 9827,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9803,
											"end": 9850,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9867,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 9993,
											"end": 9997,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9867,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 9867,
											"end": 9998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9867,
											"end": 9998,
											"name": "tag",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 9867,
											"end": 9998,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9859,
											"end": 9998,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9859,
											"end": 9998,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9586,
											"end": 10005,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9586,
											"end": 10005,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9586,
											"end": 10005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9586,
											"end": 10005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10011,
											"end": 10183,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 10011,
											"end": 10183,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10151,
											"end": 10175,
											"name": "PUSH",
											"source": 11,
											"value": "43616C6C6572206973206E6F742061206D656D62657200000000000000000000"
										},
										{
											"begin": 10147,
											"end": 10148,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10139,
											"end": 10145,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10135,
											"end": 10149,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10128,
											"end": 10176,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10011,
											"end": 10183,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10011,
											"end": 10183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10189,
											"end": 10555,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 10189,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10331,
											"end": 10334,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10352,
											"end": 10419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 10416,
											"end": 10418,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 10411,
											"end": 10414,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10352,
											"end": 10419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 10352,
											"end": 10419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10352,
											"end": 10419,
											"name": "tag",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 10352,
											"end": 10419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10345,
											"end": 10419,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10345,
											"end": 10419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10428,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 10517,
											"end": 10520,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10428,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 10428,
											"end": 10521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10428,
											"end": 10521,
											"name": "tag",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 10428,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10546,
											"end": 10548,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10541,
											"end": 10544,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10537,
											"end": 10549,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10530,
											"end": 10549,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10530,
											"end": 10549,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10189,
											"end": 10555,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10189,
											"end": 10555,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10189,
											"end": 10555,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10189,
											"end": 10555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10561,
											"end": 10980,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 10561,
											"end": 10980,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10727,
											"end": 10731,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10767,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10754,
											"end": 10763,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10750,
											"end": 10768,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10742,
											"end": 10768,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10742,
											"end": 10768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10814,
											"end": 10823,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10808,
											"end": 10812,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10804,
											"end": 10824,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10800,
											"end": 10801,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10785,
											"end": 10802,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10778,
											"end": 10825,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10842,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 10968,
											"end": 10972,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10842,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 10842,
											"end": 10973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10842,
											"end": 10973,
											"name": "tag",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 10842,
											"end": 10973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10834,
											"end": 10973,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10834,
											"end": 10973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10561,
											"end": 10980,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10561,
											"end": 10980,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10561,
											"end": 10980,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10561,
											"end": 10980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10986,
											"end": 11166,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 10986,
											"end": 11166,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11034,
											"end": 11111,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11031,
											"end": 11032,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11024,
											"end": 11112,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11131,
											"end": 11135,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 11128,
											"end": 11129,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11121,
											"end": 11136,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11155,
											"end": 11159,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11152,
											"end": 11153,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11145,
											"end": 11160,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11172,
											"end": 11345,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 11172,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "PUSH",
											"source": 11,
											"value": "496E76616C6964206D656D626572736869702074797065000000000000000000"
										},
										{
											"begin": 11308,
											"end": 11309,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11300,
											"end": 11306,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11296,
											"end": 11310,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11289,
											"end": 11338,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11172,
											"end": 11345,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11172,
											"end": 11345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11351,
											"end": 11717,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 11351,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11493,
											"end": 11496,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11514,
											"end": 11581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 11578,
											"end": 11580,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 11573,
											"end": 11576,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11514,
											"end": 11581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 11514,
											"end": 11581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11514,
											"end": 11581,
											"name": "tag",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 11514,
											"end": 11581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11507,
											"end": 11581,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11507,
											"end": 11581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11590,
											"end": 11683,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "571"
										},
										{
											"begin": 11679,
											"end": 11682,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11590,
											"end": 11683,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 11590,
											"end": 11683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11590,
											"end": 11683,
											"name": "tag",
											"source": 11,
											"value": "571"
										},
										{
											"begin": 11590,
											"end": 11683,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11708,
											"end": 11710,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11703,
											"end": 11706,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11699,
											"end": 11711,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11351,
											"end": 11717,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11351,
											"end": 11717,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11351,
											"end": 11717,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11351,
											"end": 11717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11723,
											"end": 12142,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 11723,
											"end": 12142,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11889,
											"end": 11893,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11927,
											"end": 11929,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11916,
											"end": 11925,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11912,
											"end": 11930,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11904,
											"end": 11930,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11904,
											"end": 11930,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11976,
											"end": 11985,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11970,
											"end": 11974,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11966,
											"end": 11986,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11962,
											"end": 11963,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11951,
											"end": 11960,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11947,
											"end": 11964,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11940,
											"end": 11987,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12004,
											"end": 12135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 12130,
											"end": 12134,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12004,
											"end": 12135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 12004,
											"end": 12135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12004,
											"end": 12135,
											"name": "tag",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 12004,
											"end": 12135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11996,
											"end": 12135,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11996,
											"end": 12135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11723,
											"end": 12142,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11723,
											"end": 12142,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11723,
											"end": 12142,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11723,
											"end": 12142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12148,
											"end": 12328,
											"name": "tag",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 12148,
											"end": 12328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12196,
											"end": 12273,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12193,
											"end": 12194,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12186,
											"end": 12274,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12293,
											"end": 12297,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 12290,
											"end": 12291,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12283,
											"end": 12298,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12317,
											"end": 12321,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12314,
											"end": 12315,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12307,
											"end": 12322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12334,
											"end": 12525,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 12334,
											"end": 12525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12374,
											"end": 12377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12393,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "576"
										},
										{
											"begin": 12411,
											"end": 12412,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12393,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 12393,
											"end": 12413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12393,
											"end": 12413,
											"name": "tag",
											"source": 11,
											"value": "576"
										},
										{
											"begin": 12393,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12388,
											"end": 12413,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12388,
											"end": 12413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12427,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "577"
										},
										{
											"begin": 12445,
											"end": 12446,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12427,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 12427,
											"end": 12447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12427,
											"end": 12447,
											"name": "tag",
											"source": 11,
											"value": "577"
										},
										{
											"begin": 12427,
											"end": 12447,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12422,
											"end": 12447,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12422,
											"end": 12447,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12470,
											"end": 12471,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12467,
											"end": 12468,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12463,
											"end": 12472,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12456,
											"end": 12472,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12456,
											"end": 12472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12491,
											"end": 12494,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12488,
											"end": 12489,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12485,
											"end": 12495,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12482,
											"end": 12518,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12482,
											"end": 12518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 12482,
											"end": 12518,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12498,
											"end": 12516,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 12498,
											"end": 12516,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 12498,
											"end": 12516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12498,
											"end": 12516,
											"name": "tag",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 12498,
											"end": 12516,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12482,
											"end": 12518,
											"name": "tag",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 12482,
											"end": 12518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12334,
											"end": 12525,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12334,
											"end": 12525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12334,
											"end": 12525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12334,
											"end": 12525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12334,
											"end": 12525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12531,
											"end": 12656,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 12531,
											"end": 12656,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12624,
											"end": 12625,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 12617,
											"end": 12622,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12614,
											"end": 12626,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12604,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 12604,
											"end": 12650,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12630,
											"end": 12648,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "582"
										},
										{
											"begin": 12630,
											"end": 12648,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 12630,
											"end": 12648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12630,
											"end": 12648,
											"name": "tag",
											"source": 11,
											"value": "582"
										},
										{
											"begin": 12630,
											"end": 12648,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12604,
											"end": 12650,
											"name": "tag",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 12604,
											"end": 12650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12531,
											"end": 12656,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12531,
											"end": 12656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12662,
											"end": 12813,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 12662,
											"end": 12813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12719,
											"end": 12726,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12748,
											"end": 12753,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12737,
											"end": 12753,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12737,
											"end": 12753,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12754,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 12801,
											"end": 12806,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12754,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 12754,
											"end": 12807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12754,
											"end": 12807,
											"name": "tag",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 12754,
											"end": 12807,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12662,
											"end": 12813,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12662,
											"end": 12813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12662,
											"end": 12813,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12662,
											"end": 12813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12819,
											"end": 12970,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 12819,
											"end": 12970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12887,
											"end": 12896,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12920,
											"end": 12964,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 12958,
											"end": 12963,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12920,
											"end": 12964,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 12920,
											"end": 12964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12920,
											"end": 12964,
											"name": "tag",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 12920,
											"end": 12964,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12907,
											"end": 12964,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12907,
											"end": 12964,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12819,
											"end": 12970,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12819,
											"end": 12970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12819,
											"end": 12970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12819,
											"end": 12970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12976,
											"end": 13143,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 12976,
											"end": 13143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13081,
											"end": 13136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 13130,
											"end": 13135,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13081,
											"end": 13136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 13081,
											"end": 13136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13081,
											"end": 13136,
											"name": "tag",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 13081,
											"end": 13136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13076,
											"end": 13079,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13069,
											"end": 13137,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12976,
											"end": 13143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12976,
											"end": 13143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12976,
											"end": 13143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13149,
											"end": 13517,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 13149,
											"end": 13517,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13288,
											"end": 13292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13326,
											"end": 13328,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13315,
											"end": 13324,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13311,
											"end": 13329,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13303,
											"end": 13329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13303,
											"end": 13329,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13339,
											"end": 13428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 13425,
											"end": 13426,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13414,
											"end": 13423,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13410,
											"end": 13427,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13401,
											"end": 13407,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13339,
											"end": 13428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 13339,
											"end": 13428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13339,
											"end": 13428,
											"name": "tag",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 13339,
											"end": 13428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13438,
											"end": 13510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "591"
										},
										{
											"begin": 13506,
											"end": 13508,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13495,
											"end": 13504,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13491,
											"end": 13509,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13482,
											"end": 13488,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13438,
											"end": 13510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 13438,
											"end": 13510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13438,
											"end": 13510,
											"name": "tag",
											"source": 11,
											"value": "591"
										},
										{
											"begin": 13438,
											"end": 13510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13149,
											"end": 13517,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 13149,
											"end": 13517,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13149,
											"end": 13517,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13149,
											"end": 13517,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13149,
											"end": 13517,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13149,
											"end": 13517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13523,
											"end": 13625,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 13523,
											"end": 13625,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13565,
											"end": 13573,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13612,
											"end": 13617,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13609,
											"end": 13610,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13605,
											"end": 13618,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 13584,
											"end": 13618,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13584,
											"end": 13618,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13523,
											"end": 13625,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13523,
											"end": 13625,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13523,
											"end": 13625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13523,
											"end": 13625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13631,
											"end": 14479,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 13631,
											"end": 14479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13692,
											"end": 13697,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13699,
											"end": 13703,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13723,
											"end": 13729,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13714,
											"end": 13729,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13714,
											"end": 13729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13747,
											"end": 13752,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13738,
											"end": 13752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13738,
											"end": 13752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13761,
											"end": 14473,
											"name": "tag",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 13761,
											"end": 14473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13782,
											"end": 13783,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13772,
											"end": 13780,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13769,
											"end": 13784,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13761,
											"end": 14473,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13761,
											"end": 14473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 13761,
											"end": 14473,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13877,
											"end": 13881,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13872,
											"end": 13875,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13868,
											"end": 13882,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13862,
											"end": 13866,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13859,
											"end": 13883,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13856,
											"end": 13906,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13856,
											"end": 13906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 13856,
											"end": 13906,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13886,
											"end": 13904,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 13886,
											"end": 13904,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 13886,
											"end": 13904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13886,
											"end": 13904,
											"name": "tag",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 13886,
											"end": 13904,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13856,
											"end": 13906,
											"name": "tag",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 13856,
											"end": 13906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13936,
											"end": 13937,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13926,
											"end": 13934,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13922,
											"end": 13938,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13919,
											"end": 14370,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13919,
											"end": 14370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "599"
										},
										{
											"begin": 13919,
											"end": 14370,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14351,
											"end": 14355,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14344,
											"end": 14349,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14340,
											"end": 14356,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 14331,
											"end": 14356,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14331,
											"end": 14356,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13919,
											"end": 14370,
											"name": "tag",
											"source": 11,
											"value": "599"
										},
										{
											"begin": 13919,
											"end": 14370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14401,
											"end": 14405,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14395,
											"end": 14399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14391,
											"end": 14406,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 14383,
											"end": 14406,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14383,
											"end": 14406,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14431,
											"end": 14463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "600"
										},
										{
											"begin": 14454,
											"end": 14462,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14431,
											"end": 14463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 14431,
											"end": 14463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14431,
											"end": 14463,
											"name": "tag",
											"source": 11,
											"value": "600"
										},
										{
											"begin": 14431,
											"end": 14463,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14419,
											"end": 14463,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 14419,
											"end": 14463,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13761,
											"end": 14473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 13761,
											"end": 14473,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13761,
											"end": 14473,
											"name": "tag",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 13761,
											"end": 14473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13631,
											"end": 14479,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 13631,
											"end": 14479,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13631,
											"end": 14479,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 13631,
											"end": 14479,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13631,
											"end": 14479,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13631,
											"end": 14479,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13631,
											"end": 14479,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13631,
											"end": 14479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14485,
											"end": 15558,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 14485,
											"end": 15558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14539,
											"end": 14544,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14730,
											"end": 14738,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14720,
											"end": 14760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "602"
										},
										{
											"begin": 14720,
											"end": 14760,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14751,
											"end": 14752,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 14742,
											"end": 14752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14742,
											"end": 14752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14753,
											"end": 14758,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 14753,
											"end": 14758,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14720,
											"end": 14760,
											"name": "tag",
											"source": 11,
											"value": "602"
										},
										{
											"begin": 14720,
											"end": 14760,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14779,
											"end": 14783,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14769,
											"end": 14805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "603"
										},
										{
											"begin": 14769,
											"end": 14805,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14796,
											"end": 14797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14787,
											"end": 14797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14787,
											"end": 14797,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14798,
											"end": 14803,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 14798,
											"end": 14803,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14769,
											"end": 14805,
											"name": "tag",
											"source": 11,
											"value": "603"
										},
										{
											"begin": 14769,
											"end": 14805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14865,
											"end": 14869,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14913,
											"end": 14914,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 14908,
											"end": 14935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14908,
											"end": 14935,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14908,
											"end": 14935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "605"
										},
										{
											"begin": 14908,
											"end": 14935,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14949,
											"end": 14950,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 14944,
											"end": 15135,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14944,
											"end": 15135,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14944,
											"end": 15135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 14944,
											"end": 15135,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14858,
											"end": 15135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "604"
										},
										{
											"begin": 14858,
											"end": 15135,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14908,
											"end": 14935,
											"name": "tag",
											"source": 11,
											"value": "605"
										},
										{
											"begin": 14908,
											"end": 14935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14926,
											"end": 14927,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 14917,
											"end": 14927,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14917,
											"end": 14927,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14928,
											"end": 14933,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14928,
											"end": 14933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 14928,
											"end": 14933,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14944,
											"end": 15135,
											"name": "tag",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 14944,
											"end": 15135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14989,
											"end": 14992,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 14979,
											"end": 14987,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14976,
											"end": 14993,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14973,
											"end": 15016,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14973,
											"end": 15016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "607"
										},
										{
											"begin": 14973,
											"end": 15016,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14996,
											"end": 15014,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "608"
										},
										{
											"begin": 14996,
											"end": 15014,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 14996,
											"end": 15014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14996,
											"end": 15014,
											"name": "tag",
											"source": 11,
											"value": "608"
										},
										{
											"begin": 14996,
											"end": 15014,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14973,
											"end": 15016,
											"name": "tag",
											"source": 11,
											"value": "607"
										},
										{
											"begin": 14973,
											"end": 15016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15045,
											"end": 15053,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15042,
											"end": 15043,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 15038,
											"end": 15054,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15029,
											"end": 15054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15080,
											"end": 15083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15073,
											"end": 15078,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15070,
											"end": 15084,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 15067,
											"end": 15107,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15067,
											"end": 15107,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "609"
										},
										{
											"begin": 15067,
											"end": 15107,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15087,
											"end": 15105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "610"
										},
										{
											"begin": 15087,
											"end": 15105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 15087,
											"end": 15105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15087,
											"end": 15105,
											"name": "tag",
											"source": 11,
											"value": "610"
										},
										{
											"begin": 15087,
											"end": 15105,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15067,
											"end": 15107,
											"name": "tag",
											"source": 11,
											"value": "609"
										},
										{
											"begin": 15067,
											"end": 15107,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15120,
											"end": 15125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15120,
											"end": 15125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 15120,
											"end": 15125,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14858,
											"end": 15135,
											"name": "tag",
											"source": 11,
											"value": "604"
										},
										{
											"begin": 14858,
											"end": 15135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14858,
											"end": 15135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15244,
											"end": 15246,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15234,
											"end": 15242,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15231,
											"end": 15247,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 15225,
											"end": 15228,
											"name": "PUSH",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 15219,
											"end": 15223,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15216,
											"end": 15229,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 15212,
											"end": 15248,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15194,
											"end": 15196,
											"name": "PUSH",
											"source": 11,
											"value": "4E"
										},
										{
											"begin": 15184,
											"end": 15192,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15181,
											"end": 15197,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 15176,
											"end": 15178,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 15170,
											"end": 15174,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15167,
											"end": 15179,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 15163,
											"end": 15198,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15147,
											"end": 15258,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 15144,
											"end": 15390,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15144,
											"end": 15390,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 15144,
											"end": 15390,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15300,
											"end": 15308,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15294,
											"end": 15298,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15290,
											"end": 15309,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 15281,
											"end": 15309,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15281,
											"end": 15309,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15335,
											"end": 15338,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15328,
											"end": 15333,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15325,
											"end": 15339,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 15322,
											"end": 15362,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15322,
											"end": 15362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "612"
										},
										{
											"begin": 15322,
											"end": 15362,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15342,
											"end": 15360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "613"
										},
										{
											"begin": 15342,
											"end": 15360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 15342,
											"end": 15360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15342,
											"end": 15360,
											"name": "tag",
											"source": 11,
											"value": "613"
										},
										{
											"begin": 15342,
											"end": 15360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15322,
											"end": 15362,
											"name": "tag",
											"source": 11,
											"value": "612"
										},
										{
											"begin": 15322,
											"end": 15362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15375,
											"end": 15380,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 15375,
											"end": 15380,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15144,
											"end": 15390,
											"name": "tag",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 15144,
											"end": 15390,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15415,
											"end": 15457,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "614"
										},
										{
											"begin": 15453,
											"end": 15456,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15443,
											"end": 15451,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15437,
											"end": 15441,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15434,
											"end": 15435,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15415,
											"end": 15457,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 15415,
											"end": 15457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15415,
											"end": 15457,
											"name": "tag",
											"source": 11,
											"value": "614"
										},
										{
											"begin": 15415,
											"end": 15457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15400,
											"end": 15457,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15400,
											"end": 15457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15400,
											"end": 15457,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15400,
											"end": 15457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15489,
											"end": 15493,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15484,
											"end": 15487,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15480,
											"end": 15494,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 15473,
											"end": 15478,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15470,
											"end": 15495,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 15467,
											"end": 15518,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15467,
											"end": 15518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "615"
										},
										{
											"begin": 15467,
											"end": 15518,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15498,
											"end": 15516,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "616"
										},
										{
											"begin": 15498,
											"end": 15516,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 15498,
											"end": 15516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15498,
											"end": 15516,
											"name": "tag",
											"source": 11,
											"value": "616"
										},
										{
											"begin": 15498,
											"end": 15516,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15467,
											"end": 15518,
											"name": "tag",
											"source": 11,
											"value": "615"
										},
										{
											"begin": 15467,
											"end": 15518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15547,
											"end": 15551,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15540,
											"end": 15545,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15536,
											"end": 15552,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 15527,
											"end": 15552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15527,
											"end": 15552,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14485,
											"end": 15558,
											"name": "tag",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 14485,
											"end": 15558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14485,
											"end": 15558,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 14485,
											"end": 15558,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14485,
											"end": 15558,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14485,
											"end": 15558,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14485,
											"end": 15558,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14485,
											"end": 15558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15564,
											"end": 15845,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 15564,
											"end": 15845,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15622,
											"end": 15627,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15646,
											"end": 15669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "618"
										},
										{
											"begin": 15664,
											"end": 15668,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15646,
											"end": 15669,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 15646,
											"end": 15669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15646,
											"end": 15669,
											"name": "tag",
											"source": 11,
											"value": "618"
										},
										{
											"begin": 15646,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15638,
											"end": 15669,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15638,
											"end": 15669,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 15715,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "619"
										},
										{
											"begin": 15706,
											"end": 15714,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 15715,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 15690,
											"end": 15715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 15715,
											"name": "tag",
											"source": 11,
											"value": "619"
										},
										{
											"begin": 15690,
											"end": 15715,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15678,
											"end": 15715,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15678,
											"end": 15715,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15734,
											"end": 15838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 15771,
											"end": 15837,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15761,
											"end": 15769,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15755,
											"end": 15759,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15734,
											"end": 15838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 15734,
											"end": 15838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15734,
											"end": 15838,
											"name": "tag",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 15734,
											"end": 15838,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15725,
											"end": 15838,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15725,
											"end": 15838,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15564,
											"end": 15845,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15564,
											"end": 15845,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15564,
											"end": 15845,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15564,
											"end": 15845,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15564,
											"end": 15845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15851,
											"end": 16261,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 15851,
											"end": 16261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15891,
											"end": 15898,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15914,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "622"
										},
										{
											"begin": 15932,
											"end": 15933,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15914,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 15914,
											"end": 15934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15914,
											"end": 15934,
											"name": "tag",
											"source": 11,
											"value": "622"
										},
										{
											"begin": 15914,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15909,
											"end": 15934,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15909,
											"end": 15934,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15948,
											"end": 15968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "623"
										},
										{
											"begin": 15966,
											"end": 15967,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15948,
											"end": 15968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 15948,
											"end": 15968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15948,
											"end": 15968,
											"name": "tag",
											"source": 11,
											"value": "623"
										},
										{
											"begin": 15948,
											"end": 15968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15943,
											"end": 15968,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15943,
											"end": 15968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16003,
											"end": 16004,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16000,
											"end": 16001,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15996,
											"end": 16005,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 16025,
											"end": 16055,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "624"
										},
										{
											"begin": 16043,
											"end": 16054,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16025,
											"end": 16055,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 16025,
											"end": 16055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16025,
											"end": 16055,
											"name": "tag",
											"source": 11,
											"value": "624"
										},
										{
											"begin": 16025,
											"end": 16055,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16014,
											"end": 16055,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16014,
											"end": 16055,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16204,
											"end": 16205,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16195,
											"end": 16202,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16191,
											"end": 16206,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 16188,
											"end": 16189,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16185,
											"end": 16207,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 16165,
											"end": 16166,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16158,
											"end": 16167,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16138,
											"end": 16221,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 16115,
											"end": 16254,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "625"
										},
										{
											"begin": 16115,
											"end": 16254,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16252,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "626"
										},
										{
											"begin": 16234,
											"end": 16252,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 16234,
											"end": 16252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16252,
											"name": "tag",
											"source": 11,
											"value": "626"
										},
										{
											"begin": 16234,
											"end": 16252,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16115,
											"end": 16254,
											"name": "tag",
											"source": 11,
											"value": "625"
										},
										{
											"begin": 16115,
											"end": 16254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15899,
											"end": 16261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15851,
											"end": 16261,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15851,
											"end": 16261,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15851,
											"end": 16261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15851,
											"end": 16261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15851,
											"end": 16261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16267,
											"end": 16461,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 16267,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16307,
											"end": 16311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16327,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "628"
										},
										{
											"begin": 16345,
											"end": 16346,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16327,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 16327,
											"end": 16347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16327,
											"end": 16347,
											"name": "tag",
											"source": 11,
											"value": "628"
										},
										{
											"begin": 16327,
											"end": 16347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16322,
											"end": 16347,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16322,
											"end": 16347,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16361,
											"end": 16381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "629"
										},
										{
											"begin": 16379,
											"end": 16380,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16361,
											"end": 16381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 16361,
											"end": 16381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16361,
											"end": 16381,
											"name": "tag",
											"source": 11,
											"value": "629"
										},
										{
											"begin": 16361,
											"end": 16381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16356,
											"end": 16381,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16356,
											"end": 16381,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16405,
											"end": 16406,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16402,
											"end": 16403,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16398,
											"end": 16407,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16390,
											"end": 16407,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16390,
											"end": 16407,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16429,
											"end": 16430,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16423,
											"end": 16427,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16420,
											"end": 16431,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 16417,
											"end": 16454,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16417,
											"end": 16454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "630"
										},
										{
											"begin": 16417,
											"end": 16454,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16434,
											"end": 16452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "631"
										},
										{
											"begin": 16434,
											"end": 16452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 16434,
											"end": 16452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16434,
											"end": 16452,
											"name": "tag",
											"source": 11,
											"value": "631"
										},
										{
											"begin": 16434,
											"end": 16452,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16417,
											"end": 16454,
											"name": "tag",
											"source": 11,
											"value": "630"
										},
										{
											"begin": 16417,
											"end": 16454,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16267,
											"end": 16461,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16267,
											"end": 16461,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16267,
											"end": 16461,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16267,
											"end": 16461,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16267,
											"end": 16461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16467,
											"end": 16644,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 16467,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16607,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "5265666572726572206D656D6265727368697020657870697265640000000000"
										},
										{
											"begin": 16603,
											"end": 16604,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16595,
											"end": 16601,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16591,
											"end": 16605,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16584,
											"end": 16637,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16467,
											"end": 16644,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16467,
											"end": 16644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16650,
											"end": 17016,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 16650,
											"end": 17016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16792,
											"end": 16795,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16813,
											"end": 16880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "634"
										},
										{
											"begin": 16877,
											"end": 16879,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 16872,
											"end": 16875,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16813,
											"end": 16880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 16813,
											"end": 16880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16813,
											"end": 16880,
											"name": "tag",
											"source": 11,
											"value": "634"
										},
										{
											"begin": 16813,
											"end": 16880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16806,
											"end": 16880,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16806,
											"end": 16880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16889,
											"end": 16982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "635"
										},
										{
											"begin": 16978,
											"end": 16981,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16889,
											"end": 16982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 16889,
											"end": 16982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16889,
											"end": 16982,
											"name": "tag",
											"source": 11,
											"value": "635"
										},
										{
											"begin": 16889,
											"end": 16982,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17007,
											"end": 17009,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17002,
											"end": 17005,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16998,
											"end": 17010,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16991,
											"end": 17010,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16991,
											"end": 17010,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16650,
											"end": 17016,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16650,
											"end": 17016,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16650,
											"end": 17016,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16650,
											"end": 17016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17022,
											"end": 17441,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 17022,
											"end": 17441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17188,
											"end": 17192,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17226,
											"end": 17228,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17215,
											"end": 17224,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17211,
											"end": 17229,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17203,
											"end": 17229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17203,
											"end": 17229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17275,
											"end": 17284,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17269,
											"end": 17273,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17265,
											"end": 17285,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17261,
											"end": 17262,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17250,
											"end": 17259,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17246,
											"end": 17263,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17239,
											"end": 17286,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17303,
											"end": 17434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 17429,
											"end": 17433,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17303,
											"end": 17434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 17303,
											"end": 17434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17303,
											"end": 17434,
											"name": "tag",
											"source": 11,
											"value": "637"
										},
										{
											"begin": 17303,
											"end": 17434,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17295,
											"end": 17434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17295,
											"end": 17434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17022,
											"end": 17441,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17022,
											"end": 17441,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17022,
											"end": 17441,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17022,
											"end": 17441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17447,
											"end": 17613,
											"name": "tag",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 17447,
											"end": 17613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17587,
											"end": 17605,
											"name": "PUSH",
											"source": 11,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 17583,
											"end": 17584,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17575,
											"end": 17581,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17571,
											"end": 17585,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17564,
											"end": 17606,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17447,
											"end": 17613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17447,
											"end": 17613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17619,
											"end": 17985,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 17619,
											"end": 17985,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17761,
											"end": 17764,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17782,
											"end": 17849,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "640"
										},
										{
											"begin": 17846,
											"end": 17848,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 17841,
											"end": 17844,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17782,
											"end": 17849,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 17782,
											"end": 17849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17782,
											"end": 17849,
											"name": "tag",
											"source": 11,
											"value": "640"
										},
										{
											"begin": 17782,
											"end": 17849,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17775,
											"end": 17849,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17775,
											"end": 17849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17858,
											"end": 17951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "641"
										},
										{
											"begin": 17947,
											"end": 17950,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17858,
											"end": 17951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 17858,
											"end": 17951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17858,
											"end": 17951,
											"name": "tag",
											"source": 11,
											"value": "641"
										},
										{
											"begin": 17858,
											"end": 17951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17976,
											"end": 17978,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17971,
											"end": 17974,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17967,
											"end": 17979,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17960,
											"end": 17979,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17960,
											"end": 17979,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17619,
											"end": 17985,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17619,
											"end": 17985,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17619,
											"end": 17985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17619,
											"end": 17985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17991,
											"end": 18410,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 17991,
											"end": 18410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18157,
											"end": 18161,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18195,
											"end": 18197,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18184,
											"end": 18193,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18180,
											"end": 18198,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18172,
											"end": 18198,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18172,
											"end": 18198,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18244,
											"end": 18253,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18238,
											"end": 18242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18234,
											"end": 18254,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18231,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18219,
											"end": 18228,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18215,
											"end": 18232,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18208,
											"end": 18255,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18272,
											"end": 18403,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "643"
										},
										{
											"begin": 18398,
											"end": 18402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18272,
											"end": 18403,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 18272,
											"end": 18403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18272,
											"end": 18403,
											"name": "tag",
											"source": 11,
											"value": "643"
										},
										{
											"begin": 18272,
											"end": 18403,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18264,
											"end": 18403,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18264,
											"end": 18403,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17991,
											"end": 18410,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17991,
											"end": 18410,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17991,
											"end": 18410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17991,
											"end": 18410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18416,
											"end": 18534,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 18416,
											"end": 18534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18503,
											"end": 18527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "645"
										},
										{
											"begin": 18521,
											"end": 18526,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18503,
											"end": 18527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 18503,
											"end": 18527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18503,
											"end": 18527,
											"name": "tag",
											"source": 11,
											"value": "645"
										},
										{
											"begin": 18503,
											"end": 18527,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18498,
											"end": 18501,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18491,
											"end": 18528,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18416,
											"end": 18534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18416,
											"end": 18534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18416,
											"end": 18534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18762,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 18540,
											"end": 18762,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18633,
											"end": 18637,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18671,
											"end": 18673,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18660,
											"end": 18669,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18656,
											"end": 18674,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18648,
											"end": 18674,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18648,
											"end": 18674,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18684,
											"end": 18755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "647"
										},
										{
											"begin": 18752,
											"end": 18753,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18741,
											"end": 18750,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18737,
											"end": 18754,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18728,
											"end": 18734,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18684,
											"end": 18755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 18684,
											"end": 18755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18684,
											"end": 18755,
											"name": "tag",
											"source": 11,
											"value": "647"
										},
										{
											"begin": 18684,
											"end": 18755,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18762,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18762,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18768,
											"end": 19210,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 18768,
											"end": 19210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18917,
											"end": 18921,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18955,
											"end": 18957,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 18944,
											"end": 18953,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18940,
											"end": 18958,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18932,
											"end": 18958,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18932,
											"end": 18958,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18968,
											"end": 19039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "649"
										},
										{
											"begin": 19036,
											"end": 19037,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19025,
											"end": 19034,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19021,
											"end": 19038,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19012,
											"end": 19018,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 18968,
											"end": 19039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 18968,
											"end": 19039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18968,
											"end": 19039,
											"name": "tag",
											"source": 11,
											"value": "649"
										},
										{
											"begin": 18968,
											"end": 19039,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19049,
											"end": 19121,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "650"
										},
										{
											"begin": 19117,
											"end": 19119,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19106,
											"end": 19115,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19102,
											"end": 19120,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19093,
											"end": 19099,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 19049,
											"end": 19121,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 19049,
											"end": 19121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19049,
											"end": 19121,
											"name": "tag",
											"source": 11,
											"value": "650"
										},
										{
											"begin": 19049,
											"end": 19121,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19131,
											"end": 19203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "651"
										},
										{
											"begin": 19199,
											"end": 19201,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19188,
											"end": 19197,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19184,
											"end": 19202,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19175,
											"end": 19181,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19131,
											"end": 19203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 19131,
											"end": 19203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19131,
											"end": 19203,
											"name": "tag",
											"source": 11,
											"value": "651"
										},
										{
											"begin": 19131,
											"end": 19203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18768,
											"end": 19210,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 18768,
											"end": 19210,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 18768,
											"end": 19210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18768,
											"end": 19210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18768,
											"end": 19210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18768,
											"end": 19210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18768,
											"end": 19210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19216,
											"end": 19548,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 19216,
											"end": 19548,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19337,
											"end": 19341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19375,
											"end": 19377,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19364,
											"end": 19373,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19360,
											"end": 19378,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19352,
											"end": 19378,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19352,
											"end": 19378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19388,
											"end": 19459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "653"
										},
										{
											"begin": 19456,
											"end": 19457,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19445,
											"end": 19454,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19441,
											"end": 19458,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19432,
											"end": 19438,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 19388,
											"end": 19459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 19388,
											"end": 19459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19388,
											"end": 19459,
											"name": "tag",
											"source": 11,
											"value": "653"
										},
										{
											"begin": 19388,
											"end": 19459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19469,
											"end": 19541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "654"
										},
										{
											"begin": 19537,
											"end": 19539,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19526,
											"end": 19535,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19522,
											"end": 19540,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19513,
											"end": 19519,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19469,
											"end": 19541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 19469,
											"end": 19541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19469,
											"end": 19541,
											"name": "tag",
											"source": 11,
											"value": "654"
										},
										{
											"begin": 19469,
											"end": 19541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19216,
											"end": 19548,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 19216,
											"end": 19548,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19216,
											"end": 19548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19216,
											"end": 19548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19216,
											"end": 19548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19216,
											"end": 19548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19554,
											"end": 19724,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 19554,
											"end": 19724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19694,
											"end": 19716,
											"name": "PUSH",
											"source": 11,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 19690,
											"end": 19691,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19682,
											"end": 19688,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19678,
											"end": 19692,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19671,
											"end": 19717,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19554,
											"end": 19724,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19554,
											"end": 19724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19730,
											"end": 20096,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 19730,
											"end": 20096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19872,
											"end": 19875,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19893,
											"end": 19960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "657"
										},
										{
											"begin": 19957,
											"end": 19959,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 19952,
											"end": 19955,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19893,
											"end": 19960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 19893,
											"end": 19960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19893,
											"end": 19960,
											"name": "tag",
											"source": 11,
											"value": "657"
										},
										{
											"begin": 19893,
											"end": 19960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19886,
											"end": 19960,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19886,
											"end": 19960,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19969,
											"end": 20062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "658"
										},
										{
											"begin": 20058,
											"end": 20061,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19969,
											"end": 20062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 19969,
											"end": 20062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19969,
											"end": 20062,
											"name": "tag",
											"source": 11,
											"value": "658"
										},
										{
											"begin": 19969,
											"end": 20062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20087,
											"end": 20089,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20082,
											"end": 20085,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20078,
											"end": 20090,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19730,
											"end": 20096,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19730,
											"end": 20096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19730,
											"end": 20096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19730,
											"end": 20096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20102,
											"end": 20521,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 20102,
											"end": 20521,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20268,
											"end": 20272,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20306,
											"end": 20308,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20295,
											"end": 20304,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20291,
											"end": 20309,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20283,
											"end": 20309,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20283,
											"end": 20309,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20355,
											"end": 20364,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20349,
											"end": 20353,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20345,
											"end": 20365,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20341,
											"end": 20342,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20330,
											"end": 20339,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20326,
											"end": 20343,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20319,
											"end": 20366,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20383,
											"end": 20514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "660"
										},
										{
											"begin": 20509,
											"end": 20513,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20383,
											"end": 20514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 20383,
											"end": 20514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20383,
											"end": 20514,
											"name": "tag",
											"source": 11,
											"value": "660"
										},
										{
											"begin": 20383,
											"end": 20514,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20375,
											"end": 20514,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20375,
											"end": 20514,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20102,
											"end": 20521,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20102,
											"end": 20521,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20102,
											"end": 20521,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20102,
											"end": 20521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"GymTokenSmartContracts/GymToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"MANAGER_ROLE()": "ec87621c",
							"MEMBER_ROLE()": "a10f469e",
							"REFERRAL_REWARD()": "84a3a0f3",
							"STAFF_ROLE()": "85290fa1",
							"TRAINER_ROLE()": "a61b93cc",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimal()": "76809ce3",
							"decimals()": "313ce567",
							"getRemainingMembershipTime(address)": "8621026a",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"membershipExpiry(address)": "ea4bbaf4",
							"membershipPrices(uint8)": "4b6e2331",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"payStaff(address,uint256)": "0ca2a400",
							"purchaseMembership(uint8)": "265a5eea",
							"referralBonuses(address)": "b4694876",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"rewardReferral(address)": "a683dfab",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum GymToken.MEMBERSHIP_TYPE\",\"name\":\"membershipType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"MembershipPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReferralRewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staff\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StaffPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MEMBER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REFERRAL_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAFF_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRAINER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimal\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"getRemainingMembershipTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"membershipExpiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum GymToken.MEMBERSHIP_TYPE\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"membershipPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staff\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"payStaff\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum GymToken.MEMBERSHIP_TYPE\",\"name\":\"membershipType\",\"type\":\"uint8\"}],\"name\":\"purchaseMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referralBonuses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"rewardReferral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GymTokenSmartContracts/GymToken.sol\":\"GymToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"GymTokenSmartContracts/GymToken.sol\":{\"keccak256\":\"0x0285043e5a3b79dd395a238f6e75cf9e770c5772d994aabd1c76a0fede03554f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa47b730cfa0c3a30c4e343c766b8ea822f8f153ca35725ebb8841209e1b2d29\",\"dweb:/ipfs/Qmf1rHaVxsCgaXomPXNXbpaHwsaQc8R58o8U1GGRjXZibJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 646,
								"contract": "GymTokenSmartContracts/GymToken.sol:GymToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 652,
								"contract": "GymTokenSmartContracts/GymToken.sol:GymToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 654,
								"contract": "GymTokenSmartContracts/GymToken.sol:GymToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 656,
								"contract": "GymTokenSmartContracts/GymToken.sol:GymToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 658,
								"contract": "GymTokenSmartContracts/GymToken.sol:GymToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 533,
								"contract": "GymTokenSmartContracts/GymToken.sol:GymToken",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 26,
								"contract": "GymTokenSmartContracts/GymToken.sol:GymToken",
								"label": "_roles",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1367,
								"contract": "GymTokenSmartContracts/GymToken.sol:GymToken",
								"label": "membershipPrices",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_enum(MEMBERSHIP_TYPE)1362,t_uint256)"
							},
							{
								"astId": 1371,
								"contract": "GymTokenSmartContracts/GymToken.sol:GymToken",
								"label": "membershipExpiry",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1375,
								"contract": "GymTokenSmartContracts/GymToken.sol:GymToken",
								"label": "referralBonuses",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(MEMBERSHIP_TYPE)1362": {
								"encoding": "inplace",
								"label": "enum GymToken.MEMBERSHIP_TYPE",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_enum(MEMBERSHIP_TYPE)1362,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(MEMBERSHIP_TYPE)1362",
								"label": "mapping(enum GymToken.MEMBERSHIP_TYPE => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "GymTokenSmartContracts/GymToken.sol:GymToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "GymTokenSmartContracts/GymToken.sol:GymToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1272
						],
						"ERC165": [
							1296
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1273,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1272,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1297,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1296,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1272,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1296,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1296,
								1308,
								378,
								1272
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1295
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1295,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1254,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1254,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 516,
							"src": "280:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 516,
							"src": "2190:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 516,
							"src": "4430:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1272
						],
						"Pausable": [
							623
						]
					},
					"id": 624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 1273,
							"src": "130:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 520,
										"name": "Context",
										"nameLocations": [
											"632:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1272,
										"src": "632:7:3"
									},
									"id": 521,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:3"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 519,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 623,
							"linearizedBaseContracts": [
								623,
								1272
							],
							"name": "Pausable",
							"nameLocation": "620:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 526,
									"name": "Paused",
									"nameLocation": "730:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "737:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:3"
									},
									"src": "724:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 531,
									"name": "Unpaused",
									"nameLocation": "841:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "850:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:3"
									},
									"src": "835:32:3"
								},
								{
									"constant": false,
									"id": 533,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "873:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 532,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "986:32:3",
										"statements": [
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 537,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "996:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "996:15:3"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 542,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:3"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:3"
									},
									"scope": 623,
									"src": "972:46:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "1229:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "1239:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:3"
											},
											{
												"id": 548,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:3"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 550,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:3"
									},
									"src": "1204:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "1476:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 553,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "1486:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:3"
											},
											{
												"id": 556,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 558,
									"name": "whenPaused",
									"nameLocation": "1463:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:3"
									},
									"src": "1454:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1668:31:3",
										"statements": [
											{
												"expression": {
													"id": 564,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 533,
													"src": "1685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 563,
												"id": 565,
												"nodeType": "Return",
												"src": "1678:14:3"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1662:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:3"
									},
									"scope": 623,
									"src": "1615:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "1818:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1837:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:3"
									},
									"scope": 623,
									"src": "1767:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "1993:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 584,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "2011:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:3"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:3"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:3"
									},
									"scope": 623,
									"src": "1945:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "2235:66:3",
										"statements": [
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 596,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "2245:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 601,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "2281:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 600,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2274:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "2269:25:3"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 594,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 593,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "2221:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:3"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:3"
									},
									"scope": 623,
									"src": "2186:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "2481:69:3",
										"statements": [
											{
												"expression": {
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 612,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "2491:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "2530:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 616,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "2521:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "EmitStatement",
												"src": "2516:27:3"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 610,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 609,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 558,
												"src": "2470:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:3"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:3"
									},
									"scope": 623,
									"src": "2433:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 624,
							"src": "602:1950:3",
							"usedErrors": [],
							"usedEvents": [
								526,
								531
							]
						}
					],
					"src": "105:2448:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1272
						],
						"ERC20": [
							1138
						],
						"IERC20": [
							1216
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1242
						]
					},
					"id": 1139,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 627,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1139,
							"sourceUnit": 1217,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 626,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1216,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 629,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1139,
							"sourceUnit": 1243,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 628,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1242,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 631,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1139,
							"sourceUnit": 1273,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 630,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1272,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 633,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1139,
							"sourceUnit": 516,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 632,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 635,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1272,
										"src": "1133:7:4"
									},
									"id": 636,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 637,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1216,
										"src": "1142:6:4"
									},
									"id": 638,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 639,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1242,
										"src": "1150:14:4"
									},
									"id": 640,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 641,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1166:12:4"
									},
									"id": 642,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 634,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1138,
							"linearizedBaseContracts": [
								1138,
								420,
								1242,
								1216,
								1272
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 646,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1138,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 645,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 643,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 644,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 652,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1138,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 651,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 647,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 650,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 648,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 649,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 654,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1138,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 653,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 656,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1138,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 655,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 658,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1138,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 657,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "1657:57:4",
										"statements": [
											{
												"expression": {
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 666,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "1667:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 667,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "1675:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:4"
											},
											{
												"expression": {
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 670,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "1690:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 671,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "1700:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:4"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 675,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1613:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 660,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1634:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 662,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:4"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:4"
									},
									"scope": 1138,
									"src": "1601:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1229
									],
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "1839:29:4",
										"statements": [
											{
												"expression": {
													"id": 681,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 656,
													"src": "1856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 680,
												"id": 682,
												"nodeType": "Return",
												"src": "1849:12:4"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "1824:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:4"
									},
									"scope": 1138,
									"src": "1779:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1235
									],
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "2043:31:4",
										"statements": [
											{
												"expression": {
													"id": 690,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 658,
													"src": "2060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 689,
												"id": 691,
												"nodeType": "Return",
												"src": "2053:14:4"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:4"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "2028:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 1138,
									"src": "1981:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1241
									],
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "2763:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 698,
												"id": 700,
												"nodeType": "Return",
												"src": "2773:9:4"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:4"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2756:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 696,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:4"
									},
									"scope": 1138,
									"src": "2707:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1165
									],
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "2910:36:4",
										"statements": [
											{
												"expression": {
													"id": 708,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 654,
													"src": "2927:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 707,
												"id": 709,
												"nodeType": "Return",
												"src": "2920:19:4"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:4"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "2901:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:4"
									},
									"scope": 1138,
									"src": "2849:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1173
									],
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "3078:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 719,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "3095:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 721,
													"indexExpression": {
														"id": 720,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "3105:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 718,
												"id": 722,
												"nodeType": "Return",
												"src": "3088:25:4"
											}
										]
									},
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "3023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:4"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "3069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:4"
									},
									"scope": 1138,
									"src": "3004:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1183
									],
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "3390:103:4",
										"statements": [
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 747,
														"src": "3400:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 734,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 736,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "3416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 740,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "3448:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "3455:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "3459:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "3438:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 733,
												"id": 746,
												"nodeType": "Return",
												"src": "3475:11:4"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3333:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3345:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:4"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3384:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:4"
									},
									"scope": 1138,
									"src": "3315:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1193
									],
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "3640:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 758,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "3657:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 760,
														"indexExpression": {
															"id": 759,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "3669:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 762,
													"indexExpression": {
														"id": 761,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "3676:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 763,
												"nodeType": "Return",
												"src": "3650:34:4"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3570:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3585:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:4"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3631:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:4"
									},
									"scope": 1138,
									"src": "3551:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1203
									],
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "4077:107:4",
										"statements": [
											{
												"assignments": [
													776
												],
												"declarations": [
													{
														"constant": false,
														"id": 776,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 788,
														"src": "4087:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 775,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 779,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 777,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "4103:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 781,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "4134:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "4141:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "4150:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 780,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1029,
															1089
														],
														"referencedDeclaration": 1029,
														"src": "4125:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 774,
												"id": 787,
												"nodeType": "Return",
												"src": "4166:11:4"
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "4015:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "4032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:4"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "4071:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 772,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:4"
									},
									"scope": 1138,
									"src": "3998:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1215
									],
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "4869:151:4",
										"statements": [
											{
												"assignments": [
													802
												],
												"declarations": [
													{
														"constant": false,
														"id": 802,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 820,
														"src": "4879:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 801,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 805,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 803,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "4897:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 807,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "4935:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "4941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 809,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "4950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "4919:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 813,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "4976:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "4982:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "4986:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 812,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "4966:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 800,
												"id": 819,
												"nodeType": "Return",
												"src": "5002:11:4"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4798:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4812:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4824:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:4"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4863:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 798,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:4"
									},
									"scope": 1138,
									"src": "4776:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "5462:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 831,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "5476:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 832,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "5472:86:4",
												"trueBody": {
													"id": 844,
													"nodeType": "Block",
													"src": "5496:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 838,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 837,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5517:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 843,
															"nodeType": "RevertStatement",
															"src": "5510:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 846,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "5571:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 847,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "5567:86:4",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "5589:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 853,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 852,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5610:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 858,
															"nodeType": "RevertStatement",
															"src": "5603:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 862,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "5670:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "5676:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "5680:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 861,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "5662:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:4"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5412:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5426:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "5438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:4"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:4"
									},
									"scope": 1138,
									"src": "5393:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "6083:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "6097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 915,
													"nodeType": "Block",
													"src": "6271:362:4",
													"statements": [
														{
															"assignments": [
																890
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 890,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 915,
																	"src": "6285:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 889,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 894,
															"initialValue": {
																"baseExpression": {
																	"id": 891,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "6307:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 893,
																"indexExpression": {
																	"id": 892,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "6317:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 895,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "6340:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 896,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "6354:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 905,
															"nodeType": "IfStatement",
															"src": "6336:115:4",
															"trueBody": {
																"id": 904,
																"nodeType": "Block",
																"src": "6361:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 899,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 871,
																					"src": "6411:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 900,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 890,
																					"src": "6417:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 901,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 875,
																					"src": "6430:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 898,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6386:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 903,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:4"
																	}
																]
															}
														},
														{
															"id": 914,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 906,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 646,
																				"src": "6571:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 908,
																			"indexExpression": {
																				"id": 907,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 871,
																				"src": "6581:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 909,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 890,
																				"src": "6589:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 910,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "6603:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 913,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:4"
																}
															]
														}
													]
												},
												"id": 916,
												"nodeType": "IfStatement",
												"src": "6093:540:4",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "6117:148:4",
													"statements": [
														{
															"expression": {
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 884,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "6233:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 885,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "6249:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 887,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 917,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "6647:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 918,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "6862:206:4",
													"statements": [
														{
															"id": 935,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 929,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 646,
																				"src": "7021:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 931,
																			"indexExpression": {
																				"id": 930,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 873,
																				"src": "7031:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 932,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 875,
																			"src": "7038:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 934,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:4"
																}
															]
														}
													]
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "6643:425:4",
												"trueBody": {
													"id": 928,
													"nodeType": "Block",
													"src": "6665:191:4",
													"statements": [
														{
															"id": 927,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 923,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "6810:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 924,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 875,
																			"src": "6826:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 926,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 939,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "7092:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "7098:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "7102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 938,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "7083:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "EmitStatement",
												"src": "7078:30:4"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "6025:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "6039:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "6051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:4"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:4"
									},
									"scope": 1138,
									"src": "6008:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "7514:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 953,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 954,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 967,
												"nodeType": "IfStatement",
												"src": "7524:91:4",
												"trueBody": {
													"id": 966,
													"nodeType": "Block",
													"src": "7551:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 962,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 960,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 959,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7572:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 965,
															"nodeType": "RevertStatement",
															"src": "7565:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 969,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 973,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "7644:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "7653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 968,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "7624:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:4"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "7473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "7490:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:4"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:4"
									},
									"scope": 1138,
									"src": "7458:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "8040:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 986,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "8054:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 987,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1000,
												"nodeType": "IfStatement",
												"src": "8050:89:4",
												"trueBody": {
													"id": 999,
													"nodeType": "Block",
													"src": "8077:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 993,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 992,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8098:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 998,
															"nodeType": "RevertStatement",
															"src": "8091:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1002,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "8156:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1003,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1007,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "8177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1001,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "8148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:4"
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "7999:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "8016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:4"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:4"
									},
									"scope": 1138,
									"src": "7984:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "8800:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1022,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "8819:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "8826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1024,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "8835:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1021,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1029,
															1089
														],
														"referencedDeclaration": 1089,
														"src": "8810:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:4"
											}
										]
									},
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "8744:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "8759:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "8776:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:4"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:4"
									},
									"scope": 1138,
									"src": "8726:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "9799:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1041,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "9813:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1042,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1055,
												"nodeType": "IfStatement",
												"src": "9809:89:4",
												"trueBody": {
													"id": 1054,
													"nodeType": "Block",
													"src": "9834:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1050,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1048,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1047,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9855:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1053,
															"nodeType": "RevertStatement",
															"src": "9848:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "9911:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1057,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1070,
												"nodeType": "IfStatement",
												"src": "9907:90:4",
												"trueBody": {
													"id": 1069,
													"nodeType": "Block",
													"src": "9934:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1063,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1062,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "9955:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1068,
															"nodeType": "RevertStatement",
															"src": "9948:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1071,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "10006:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1074,
															"indexExpression": {
																"id": 1072,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1032,
																"src": "10018:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1075,
														"indexExpression": {
															"id": 1073,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "10025:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1076,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "10036:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:4"
											},
											{
												"condition": {
													"id": 1079,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1038,
													"src": "10055:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1087,
												"nodeType": "IfStatement",
												"src": "10051:76:4",
												"trueBody": {
													"id": 1086,
													"nodeType": "Block",
													"src": "10066:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1081,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1032,
																		"src": "10094:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1082,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1034,
																		"src": "10101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1083,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "10110:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1080,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "10085:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1085,
															"nodeType": "EmitStatement",
															"src": "10080:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "9719:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "9734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "9751:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "9766:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:4"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:4"
									},
									"scope": 1138,
									"src": "9701:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "10504:388:4",
										"statements": [
											{
												"assignments": [
													1100
												],
												"declarations": [
													{
														"constant": false,
														"id": 1100,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "10514:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1099,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1105,
												"initialValue": {
													"arguments": [
														{
															"id": 1102,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "10551:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1103,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "10558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1101,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "10541:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1106,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "10580:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1108,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1107,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1135,
												"nodeType": "IfStatement",
												"src": "10576:310:4",
												"trueBody": {
													"id": 1134,
													"nodeType": "Block",
													"src": "10619:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1113,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "10637:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1114,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "10656:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1123,
															"nodeType": "IfStatement",
															"src": "10633:130:4",
															"trueBody": {
																"id": 1122,
																"nodeType": "Block",
																"src": "10663:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1117,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "10715:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1118,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1100,
																					"src": "10724:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1119,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1096,
																					"src": "10742:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1116,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10688:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1121,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:4"
																	}
																]
															}
														},
														{
															"id": 1133,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1125,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1092,
																				"src": "10813:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1126,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1094,
																				"src": "10820:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1127,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1100,
																					"src": "10829:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1128,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1096,
																					"src": "10848:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1124,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1029,
																				1089
																			],
																			"referencedDeclaration": 1089,
																			"src": "10804:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1132,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "10440:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "10455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "10472:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:4"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:4"
									},
									"scope": 1138,
									"src": "10415:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1139,
							"src": "1106:9788:4",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1150,
								1159
							]
						}
					],
					"src": "105:10790:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1216
						]
					},
					"id": 1217,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1140,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1141,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1216,
							"linearizedBaseContracts": [
								1216
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1150,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1159,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1216,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1216,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1180,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1216,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1216,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1216,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1216,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1217,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1150,
								1159
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1216
						],
						"IERC20Metadata": [
							1242
						]
					},
					"id": 1243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1218,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1220,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1243,
							"sourceUnit": 1217,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1219,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1216,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1222,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1216,
										"src": "306:6:6"
									},
									"id": 1223,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1221,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1242,
							"linearizedBaseContracts": [
								1242,
								1216
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1226,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1242,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1242,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1238,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1242,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1243,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								1150,
								1159
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1272
						]
					},
					"id": 1273,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1245,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1272,
							"linearizedBaseContracts": [
								1272
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1250,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1249,
												"id": 1252,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1272,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1259,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1258,
												"id": 1261,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1272,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1267,
												"id": 1269,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1272,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1273,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1296
						],
						"IERC165": [
							1308
						]
					},
					"id": 1297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1274,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1276,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1297,
							"sourceUnit": 1309,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1275,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1308,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1278,
										"name": "IERC165",
										"nameLocations": [
											"688:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1308,
										"src": "688:7:8"
									},
									"id": 1279,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1277,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1296,
							"linearizedBaseContracts": [
								1296,
								1308
							],
							"name": "ERC165",
							"nameLocation": "678:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1307
									],
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "845:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1287,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "862:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1289,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "882:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1308_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1308_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1288,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1308",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1286,
												"id": 1293,
												"nodeType": "Return",
												"src": "855:47:8"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "790:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1281,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:8"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "839:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:8"
									},
									"scope": 1296,
									"src": "763:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1297,
							"src": "660:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1308
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1299,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1308,
							"linearizedBaseContracts": [
								1308
							],
							"name": "IERC165",
							"nameLocation": "432:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "818:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1301,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:9"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "861:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:9"
									},
									"scope": 1308,
									"src": "791:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "422:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:9"
				},
				"id": 9
			},
			"GymTokenSmartContracts/GymToken.sol": {
				"ast": {
					"absolutePath": "GymTokenSmartContracts/GymToken.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1272
						],
						"ERC165": [
							1296
						],
						"ERC20": [
							1138
						],
						"GymToken": [
							1702
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1216
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1242
						],
						"Pausable": [
							623
						]
					},
					"id": 1703,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1311,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1703,
							"sourceUnit": 1139,
							"src": "58:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1312,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1703,
							"sourceUnit": 624,
							"src": "114:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1313,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1703,
							"sourceUnit": 296,
							"src": "170:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1314,
										"name": "ERC20",
										"nameLocations": [
											"251:5:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1138,
										"src": "251:5:10"
									},
									"id": 1315,
									"nodeType": "InheritanceSpecifier",
									"src": "251:5:10"
								},
								{
									"baseName": {
										"id": 1316,
										"name": "Pausable",
										"nameLocations": [
											"258:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "258:8:10"
									},
									"id": 1317,
									"nodeType": "InheritanceSpecifier",
									"src": "258:8:10"
								},
								{
									"baseName": {
										"id": 1318,
										"name": "AccessControl",
										"nameLocations": [
											"268:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "268:13:10"
									},
									"id": 1319,
									"nodeType": "InheritanceSpecifier",
									"src": "268:13:10"
								}
							],
							"canonicalName": "GymToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1702,
							"linearizedBaseContracts": [
								1702,
								295,
								1296,
								1308,
								378,
								623,
								1138,
								420,
								1242,
								1216,
								1272
							],
							"name": "GymToken",
							"nameLocation": "239:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "76809ce3",
									"id": 1322,
									"mutability": "constant",
									"name": "decimal",
									"nameLocation": "310:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1702,
									"src": "288:33:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1320,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "288:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1321,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "320:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 1330,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "351:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1702,
									"src": "327:66:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1323,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "327:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1329,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030",
											"id": 1324,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "368:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "379:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"id": 1326,
														"name": "decimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "385:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "379:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1328,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "378:15:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "368:25:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ec87621c",
									"id": 1335,
									"mutability": "constant",
									"name": "MANAGER_ROLE",
									"nameLocation": "424:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1702,
									"src": "400:64:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1331,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "400:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d414e414745525f524f4c45",
												"id": 1333,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "449:14:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08",
													"typeString": "literal_string \"MANAGER_ROLE\""
												},
												"value": "MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08",
													"typeString": "literal_string \"MANAGER_ROLE\""
												}
											],
											"id": 1332,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "439:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1334,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "439:25:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "85290fa1",
									"id": 1340,
									"mutability": "constant",
									"name": "STAFF_ROLE",
									"nameLocation": "494:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1702,
									"src": "470:60:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1336,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "470:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "53544146465f524f4c45",
												"id": 1338,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "517:12:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_5620a1113a72b02a617976b3f6b15600dd7a8b3a916a9ca01e23119d989a0543",
													"typeString": "literal_string \"STAFF_ROLE\""
												},
												"value": "STAFF_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_5620a1113a72b02a617976b3f6b15600dd7a8b3a916a9ca01e23119d989a0543",
													"typeString": "literal_string \"STAFF_ROLE\""
												}
											],
											"id": 1337,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "507:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1339,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "507:23:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a10f469e",
									"id": 1345,
									"mutability": "constant",
									"name": "MEMBER_ROLE",
									"nameLocation": "560:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1702,
									"src": "536:62:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1341,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "536:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d454d4245525f524f4c45",
												"id": 1343,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "584:13:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d4636",
													"typeString": "literal_string \"MEMBER_ROLE\""
												},
												"value": "MEMBER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d4636",
													"typeString": "literal_string \"MEMBER_ROLE\""
												}
											],
											"id": 1342,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "574:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1344,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "574:24:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a61b93cc",
									"id": 1350,
									"mutability": "constant",
									"name": "TRAINER_ROLE",
									"nameLocation": "628:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1702,
									"src": "604:64:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1346,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "604:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "545241494e45525f524f4c45",
												"id": 1348,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "653:14:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_123c69cc12368838cca6d46b7505bec842d9e85a26aff07e23aa57ad59dac6ba",
													"typeString": "literal_string \"TRAINER_ROLE\""
												},
												"value": "TRAINER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_123c69cc12368838cca6d46b7505bec842d9e85a26aff07e23aa57ad59dac6ba",
													"typeString": "literal_string \"TRAINER_ROLE\""
												}
											],
											"id": 1347,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "643:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1349,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "643:25:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "84a3a0f3",
									"id": 1358,
									"mutability": "constant",
									"name": "REFERRAL_REWARD",
									"nameLocation": "780:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1702,
									"src": "756:60:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1351,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "756:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1357,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1352,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "798:2:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "804:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"id": 1354,
														"name": "decimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "808:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "804:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1356,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "803:13:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "798:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "GymToken.MEMBERSHIP_TYPE",
									"id": 1362,
									"members": [
										{
											"id": 1359,
											"name": "Monthly",
											"nameLocation": "854:7:10",
											"nodeType": "EnumValue",
											"src": "854:7:10"
										},
										{
											"id": 1360,
											"name": "Quarterly",
											"nameLocation": "871:9:10",
											"nodeType": "EnumValue",
											"src": "871:9:10"
										},
										{
											"id": 1361,
											"name": "Annual",
											"nameLocation": "890:6:10",
											"nodeType": "EnumValue",
											"src": "890:6:10"
										}
									],
									"name": "MEMBERSHIP_TYPE",
									"nameLocation": "829:15:10",
									"nodeType": "EnumDefinition",
									"src": "824:78:10"
								},
								{
									"constant": false,
									"functionSelector": "4b6e2331",
									"id": 1367,
									"mutability": "mutable",
									"name": "membershipPrices",
									"nameLocation": "951:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1702,
									"src": "908:59:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_MEMBERSHIP_TYPE_$1362_$_t_uint256_$",
										"typeString": "mapping(enum GymToken.MEMBERSHIP_TYPE => uint256)"
									},
									"typeName": {
										"id": 1366,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1364,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1363,
												"name": "MEMBERSHIP_TYPE",
												"nameLocations": [
													"916:15:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1362,
												"src": "916:15:10"
											},
											"referencedDeclaration": 1362,
											"src": "916:15:10",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
												"typeString": "enum GymToken.MEMBERSHIP_TYPE"
											}
										},
										"nodeType": "Mapping",
										"src": "908:35:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_MEMBERSHIP_TYPE_$1362_$_t_uint256_$",
											"typeString": "mapping(enum GymToken.MEMBERSHIP_TYPE => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1365,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "935:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ea4bbaf4",
									"id": 1371,
									"mutability": "mutable",
									"name": "membershipExpiry",
									"nameLocation": "1037:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1702,
									"src": "1002:51:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1370,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1368,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1010:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1002:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1369,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1021:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b4694876",
									"id": 1375,
									"mutability": "mutable",
									"name": "referralBonuses",
									"nameLocation": "1140:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1702,
									"src": "1105:50:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1374,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1372,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1113:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1105:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1373,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1124:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e2c5b6420b508a46b55a5cb55c7340a67492866d4f51461ee443958079fe8357",
									"id": 1384,
									"name": "MembershipPurchased",
									"nameLocation": "1168:19:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"indexed": true,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "1204:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "1188:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"indexed": false,
												"mutability": "mutable",
												"name": "membershipType",
												"nameLocation": "1228:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "1212:30:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
													"typeString": "enum GymToken.MEMBERSHIP_TYPE"
												},
												"typeName": {
													"id": 1379,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1378,
														"name": "MEMBERSHIP_TYPE",
														"nameLocations": [
															"1212:15:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1362,
														"src": "1212:15:10"
													},
													"referencedDeclaration": 1362,
													"src": "1212:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
														"typeString": "enum GymToken.MEMBERSHIP_TYPE"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"indexed": false,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1252:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "1244:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:74:10"
									},
									"src": "1162:100:10"
								},
								{
									"anonymous": false,
									"eventSelector": "e02a129f98418d04669038a9874f706689ba7726c0c0e82c67319ec8ca9001ea",
									"id": 1390,
									"name": "ReferralRewarded",
									"nameLocation": "1273:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"indexed": true,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "1306:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1290:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1324:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1316:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1316:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1289:42:10"
									},
									"src": "1267:65:10"
								},
								{
									"anonymous": false,
									"eventSelector": "ae574b2c1f50dc34c0bb1db82044da6a9030b5a6a325839a909271e40f1bec47",
									"id": 1396,
									"name": "StaffPaid",
									"nameLocation": "1343:9:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"indexed": true,
												"mutability": "mutable",
												"name": "staff",
												"nameLocation": "1369:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1353:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1384:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1376:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:39:10"
									},
									"src": "1337:55:10"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "1452:588:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1406,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1532:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1407,
															"name": "manager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "1552:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1405,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1521:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1521:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "1521:39:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1411,
															"name": "MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "1581:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1412,
															"name": "manager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "1595:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1410,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1570:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1570:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "1570:33:10"
											},
											{
												"expression": {
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1415,
															"name": "membershipPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "1662:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_MEMBERSHIP_TYPE_$1362_$_t_uint256_$",
																"typeString": "mapping(enum GymToken.MEMBERSHIP_TYPE => uint256)"
															}
														},
														"id": 1418,
														"indexExpression": {
															"expression": {
																"id": 1416,
																"name": "MEMBERSHIP_TYPE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "1679:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_MEMBERSHIP_TYPE_$1362_$",
																	"typeString": "type(enum GymToken.MEMBERSHIP_TYPE)"
																}
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1695:7:10",
															"memberName": "Monthly",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1359,
															"src": "1679:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
																"typeString": "enum GymToken.MEMBERSHIP_TYPE"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1662:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3530",
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1706:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															},
															"value": "50"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1712:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 1421,
																		"name": "decimal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1322,
																		"src": "1716:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1712:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1423,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1711:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1706:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1662:62:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "1662:62:10"
											},
											{
												"expression": {
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1427,
															"name": "membershipPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "1757:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_MEMBERSHIP_TYPE_$1362_$_t_uint256_$",
																"typeString": "mapping(enum GymToken.MEMBERSHIP_TYPE => uint256)"
															}
														},
														"id": 1430,
														"indexExpression": {
															"expression": {
																"id": 1428,
																"name": "MEMBERSHIP_TYPE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "1774:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_MEMBERSHIP_TYPE_$1362_$",
																	"typeString": "type(enum GymToken.MEMBERSHIP_TYPE)"
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1790:9:10",
															"memberName": "Quarterly",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1360,
															"src": "1774:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
																"typeString": "enum GymToken.MEMBERSHIP_TYPE"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1757:43:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "313430",
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1803:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_140_by_1",
																"typeString": "int_const 140"
															},
															"value": "140"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1810:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 1433,
																		"name": "decimal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1322,
																		"src": "1814:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1810:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1435,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1809:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1803:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1757:65:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "1757:65:10"
											},
											{
												"expression": {
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1439,
															"name": "membershipPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "1853:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_MEMBERSHIP_TYPE_$1362_$_t_uint256_$",
																"typeString": "mapping(enum GymToken.MEMBERSHIP_TYPE => uint256)"
															}
														},
														"id": 1442,
														"indexExpression": {
															"expression": {
																"id": 1440,
																"name": "MEMBERSHIP_TYPE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "1870:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_MEMBERSHIP_TYPE_$1362_$",
																	"typeString": "type(enum GymToken.MEMBERSHIP_TYPE)"
																}
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1886:6:10",
															"memberName": "Annual",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1361,
															"src": "1870:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
																"typeString": "enum GymToken.MEMBERSHIP_TYPE"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1853:40:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "353030",
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1896:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															"value": "500"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1903:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 1445,
																		"name": "decimal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1322,
																		"src": "1907:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1903:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1447,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1902:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1896:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1853:62:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "1853:62:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1452,
															"name": "manager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "2008:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1453,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "2017:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1451,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "2002:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2002:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "2002:30:10"
											}
										]
									},
									"id": 1457,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "47796d546f6b656e",
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1433:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_20db562e089dea9ad84c8147b747b38fd5d6477e7ed2b076c99e6887aa34de9c",
														"typeString": "literal_string \"GymToken\""
													},
													"value": "GymToken"
												},
												{
													"hexValue": "47594d",
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1445:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ee2ad0f63c5436dd1b981a35481a0c950df656ae4d95c3630f8b68e6ff52ab30",
														"typeString": "literal_string \"GYM\""
													},
													"value": "GYM"
												}
											],
											"id": 1403,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1400,
												"name": "ERC20",
												"nameLocations": [
													"1427:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1138,
												"src": "1427:5:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1427:24:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "manager",
												"nameLocation": "1418:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "1410:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1410:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1409:17:10"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1452:0:10"
									},
									"scope": 1702,
									"src": "1398:642:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "2121:97:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1461,
																	"name": "MANAGER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "2147:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1462,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2161:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2165:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2161:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1460,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "2139:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2139:33:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742061206d616e61676572",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2174:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4d72f6490459afc38a5266821dee5c7dbd7b64ac1402ac2042f6c2e8eeaeae88",
																"typeString": "literal_string \"Caller is not a manager\""
															},
															"value": "Caller is not a manager"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4d72f6490459afc38a5266821dee5c7dbd7b64ac1402ac2042f6c2e8eeaeae88",
																"typeString": "literal_string \"Caller is not a manager\""
															}
														],
														"id": 1459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2131:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2131:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "2131:69:10"
											},
											{
												"id": 1468,
												"nodeType": "PlaceholderStatement",
												"src": "2210:1:10"
											}
										]
									},
									"id": 1470,
									"name": "onlyManager",
									"nameLocation": "2107:11:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2118:2:10"
									},
									"src": "2098:120:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1482,
										"nodeType": "Block",
										"src": "2297:95:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1474,
																	"name": "MEMBER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1345,
																	"src": "2323:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1475,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2336:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2340:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2336:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1473,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "2315:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2315:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742061206d656d626572",
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5cbd542351d7fdfb7f89b17d4ac17a7a16041856bb9eaf5833ca04c408480857",
																"typeString": "literal_string \"Caller is not a member\""
															},
															"value": "Caller is not a member"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5cbd542351d7fdfb7f89b17d4ac17a7a16041856bb9eaf5833ca04c408480857",
																"typeString": "literal_string \"Caller is not a member\""
															}
														],
														"id": 1472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2307:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2307:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "2307:67:10"
											},
											{
												"id": 1481,
												"nodeType": "PlaceholderStatement",
												"src": "2384:1:10"
											}
										]
									},
									"id": 1483,
									"name": "onlyMember",
									"nameLocation": "2284:10:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2294:2:10"
									},
									"src": "2275:117:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "2506:25:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1489,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "2516:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2516:8:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "2516:8:10"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1486,
													"name": "MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1335,
													"src": "2492:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1487,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1485,
												"name": "onlyRole",
												"nameLocations": [
													"2483:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2483:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2483:22:10"
										}
									],
									"name": "pause",
									"nameLocation": "2468:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2473:2:10"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2506:0:10"
									},
									"scope": 1702,
									"src": "2459:72:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "2637:27:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1499,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "2647:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2647:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "2647:10:10"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1496,
													"name": "MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1335,
													"src": "2623:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1497,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1495,
												"name": "onlyRole",
												"nameLocations": [
													"2614:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2614:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2614:22:10"
										}
									],
									"name": "unpause",
									"nameLocation": "2597:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2604:2:10"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2637:0:10"
									},
									"scope": 1702,
									"src": "2588:76:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "2813:127:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1517,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2841:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2845:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2841:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1516,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "2831:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2831:21:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1520,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "2856:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2831:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2864:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2823:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "2823:64:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1526,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2907:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2911:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2907:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1528,
															"name": "staff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "2919:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1529,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "2926:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1525,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "2897:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2897:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "2897:36:10"
											}
										]
									},
									"functionSelector": "0ca2a400",
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1510,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1509,
												"name": "whenNotPaused",
												"nameLocations": [
													"2776:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "2776:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2776:13:10"
										},
										{
											"arguments": [
												{
													"id": 1512,
													"name": "MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1335,
													"src": "2799:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1513,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1511,
												"name": "onlyRole",
												"nameLocations": [
													"2790:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2790:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2790:22:10"
										}
									],
									"name": "payStaff",
									"nameLocation": "2729:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "staff",
												"nameLocation": "2746:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "2738:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2761:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "2753:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2737:31:10"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2813:0:10"
									},
									"scope": 1702,
									"src": "2720:220:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "3071:375:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1544,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3150:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3156:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3150:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"baseExpression": {
																	"id": 1546,
																	"name": "membershipExpiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "3168:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1548,
																"indexExpression": {
																	"id": 1547,
																	"name": "referrer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "3185:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3168:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3150:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265666572726572206d656d626572736869702065787069726564",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3196:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_421668a66e5be01199ddd2da64023ed8dd947063fb73ad1701a973a1f9efebf2",
																"typeString": "literal_string \"Referrer membership expired\""
															},
															"value": "Referrer membership expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_421668a66e5be01199ddd2da64023ed8dd947063fb73ad1701a973a1f9efebf2",
																"typeString": "literal_string \"Referrer membership expired\""
															}
														],
														"id": 1543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3142:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3142:84:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "3142:84:10"
											},
											{
												"expression": {
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1553,
															"name": "referralBonuses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "3294:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1555,
														"indexExpression": {
															"id": 1554,
															"name": "referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "3310:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3294:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1556,
														"name": "REFERRAL_REWARD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "3323:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3294:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "3294:44:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1560,
															"name": "referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "3354:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1561,
															"name": "REFERRAL_REWARD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "3364:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1559,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "3348:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3348:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "3348:32:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1565,
															"name": "referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "3413:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1566,
															"name": "REFERRAL_REWARD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "3423:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1564,
														"name": "ReferralRewarded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "3396:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3396:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1568,
												"nodeType": "EmitStatement",
												"src": "3391:48:10"
											}
										]
									},
									"functionSelector": "a683dfab",
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1538,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1537,
												"name": "whenNotPaused",
												"nameLocations": [
													"3034:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "3034:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3034:13:10"
										},
										{
											"arguments": [
												{
													"id": 1540,
													"name": "MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1335,
													"src": "3057:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1541,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1539,
												"name": "onlyRole",
												"nameLocations": [
													"3048:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3048:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3048:22:10"
										}
									],
									"name": "rewardReferral",
									"nameLocation": "2994:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "3017:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "3009:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3009:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3008:18:10"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3071:0:10"
									},
									"scope": 1702,
									"src": "2985:461:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "3602:1000:10",
										"statements": [
											{
												"assignments": [
													1581
												],
												"declarations": [
													{
														"constant": false,
														"id": 1581,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "3620:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1674,
														"src": "3612:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3612:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1585,
												"initialValue": {
													"baseExpression": {
														"id": 1582,
														"name": "membershipPrices",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "3628:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_enum$_MEMBERSHIP_TYPE_$1362_$_t_uint256_$",
															"typeString": "mapping(enum GymToken.MEMBERSHIP_TYPE => uint256)"
														}
													},
													"id": 1584,
													"indexExpression": {
														"id": 1583,
														"name": "membershipType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1573,
														"src": "3645:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
															"typeString": "enum GymToken.MEMBERSHIP_TYPE"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3628:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3612:48:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1588,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3688:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3692:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3688:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1587,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "3678:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3678:21:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1591,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "3703:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3678:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3710:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3670:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3670:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "3670:63:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1597,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3750:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3754:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3750:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1599,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "3762:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1596,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "3744:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3744:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "3744:24:10"
											},
											{
												"assignments": [
													1603
												],
												"declarations": [
													{
														"constant": false,
														"id": 1603,
														"mutability": "mutable",
														"name": "duration",
														"nameLocation": "3787:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1674,
														"src": "3779:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3779:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1604,
												"nodeType": "VariableDeclarationStatement",
												"src": "3779:16:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
														"typeString": "enum GymToken.MEMBERSHIP_TYPE"
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1605,
														"name": "membershipType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1573,
														"src": "3863:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
															"typeString": "enum GymToken.MEMBERSHIP_TYPE"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1606,
															"name": "MEMBERSHIP_TYPE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "3881:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_MEMBERSHIP_TYPE_$1362_$",
																"typeString": "type(enum GymToken.MEMBERSHIP_TYPE)"
															}
														},
														"id": 1607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3897:7:10",
														"memberName": "Monthly",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1359,
														"src": "3881:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
															"typeString": "enum GymToken.MEMBERSHIP_TYPE"
														}
													},
													"src": "3863:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
															"typeString": "enum GymToken.MEMBERSHIP_TYPE"
														},
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1614,
															"name": "membershipType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "3959:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
																"typeString": "enum GymToken.MEMBERSHIP_TYPE"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1615,
																"name": "MEMBERSHIP_TYPE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "3977:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_MEMBERSHIP_TYPE_$1362_$",
																	"typeString": "type(enum GymToken.MEMBERSHIP_TYPE)"
																}
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3993:9:10",
															"memberName": "Quarterly",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1360,
															"src": "3977:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
																"typeString": "enum GymToken.MEMBERSHIP_TYPE"
															}
														},
														"src": "3959:43:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
																"typeString": "enum GymToken.MEMBERSHIP_TYPE"
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1623,
																"name": "membershipType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1573,
																"src": "4057:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
																	"typeString": "enum GymToken.MEMBERSHIP_TYPE"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1624,
																	"name": "MEMBERSHIP_TYPE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "4075:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_MEMBERSHIP_TYPE_$1362_$",
																		"typeString": "type(enum GymToken.MEMBERSHIP_TYPE)"
																	}
																},
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4091:6:10",
																"memberName": "Annual",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1361,
																"src": "4075:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
																	"typeString": "enum GymToken.MEMBERSHIP_TYPE"
																}
															},
															"src": "4057:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1636,
															"nodeType": "Block",
															"src": "4149:58:10",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "496e76616c6964206d656d626572736869702074797065",
																				"id": 1633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4170:25:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_b89e19d8ece4c02a72d5a02c02781c01f06d56f014875c79921678b2ba553b29",
																					"typeString": "literal_string \"Invalid membership type\""
																				},
																				"value": "Invalid membership type"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_b89e19d8ece4c02a72d5a02c02781c01f06d56f014875c79921678b2ba553b29",
																					"typeString": "literal_string \"Invalid membership type\""
																				}
																			],
																			"id": 1632,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "4163:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4163:33:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1635,
																	"nodeType": "ExpressionStatement",
																	"src": "4163:33:10"
																}
															]
														},
														"id": 1637,
														"nodeType": "IfStatement",
														"src": "4053:154:10",
														"trueBody": {
															"id": 1631,
															"nodeType": "Block",
															"src": "4099:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1627,
																			"name": "duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1603,
																			"src": "4113:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "333635",
																			"id": 1628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4124:8:10",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_31536000_by_1",
																				"typeString": "int_const 31536000"
																			},
																			"value": "365"
																		},
																		"src": "4113:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1630,
																	"nodeType": "ExpressionStatement",
																	"src": "4113:19:10"
																}
															]
														}
													},
													"id": 1638,
													"nodeType": "IfStatement",
													"src": "3955:252:10",
													"trueBody": {
														"id": 1622,
														"nodeType": "Block",
														"src": "4004:43:10",
														"statements": [
															{
																"expression": {
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1618,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1603,
																		"src": "4018:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "3930",
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4029:7:10",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_7776000_by_1",
																			"typeString": "int_const 7776000"
																		},
																		"value": "90"
																	},
																	"src": "4018:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1621,
																"nodeType": "ExpressionStatement",
																"src": "4018:18:10"
															}
														]
													}
												},
												"id": 1639,
												"nodeType": "IfStatement",
												"src": "3859:348:10",
												"trueBody": {
													"id": 1613,
													"nodeType": "Block",
													"src": "3906:43:10",
													"statements": [
														{
															"expression": {
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1609,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1603,
																	"src": "3920:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3330",
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3931:7:10",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2592000_by_1",
																		"typeString": "int_const 2592000"
																	},
																	"value": "30"
																},
																"src": "3920:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1612,
															"nodeType": "ExpressionStatement",
															"src": "3920:18:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1640,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4322:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4328:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4322:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"baseExpression": {
															"id": 1642,
															"name": "membershipExpiry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "4340:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1645,
														"indexExpression": {
															"expression": {
																"id": 1643,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4357:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4361:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4357:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4340:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4322:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1665,
													"nodeType": "Block",
													"src": "4441:82:10",
													"statements": [
														{
															"expression": {
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1655,
																		"name": "membershipExpiry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "4455:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1658,
																	"indexExpression": {
																		"expression": {
																			"id": 1656,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4472:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4476:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4472:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4455:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1659,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4486:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4492:9:10",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4486:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1661,
																		"name": "duration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1603,
																		"src": "4504:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4486:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4455:57:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1664,
															"nodeType": "ExpressionStatement",
															"src": "4455:57:10"
														}
													]
												},
												"id": 1666,
												"nodeType": "IfStatement",
												"src": "4318:205:10",
												"trueBody": {
													"id": 1654,
													"nodeType": "Block",
													"src": "4370:65:10",
													"statements": [
														{
															"expression": {
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1647,
																		"name": "membershipExpiry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "4384:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1650,
																	"indexExpression": {
																		"expression": {
																			"id": 1648,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4401:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4405:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4401:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4384:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1651,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1603,
																	"src": "4416:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4384:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1653,
															"nodeType": "ExpressionStatement",
															"src": "4384:40:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1668,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4558:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4558:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1670,
															"name": "membershipType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "4570:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
																"typeString": "enum GymToken.MEMBERSHIP_TYPE"
															}
														},
														{
															"id": 1671,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "4586:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
																"typeString": "enum GymToken.MEMBERSHIP_TYPE"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1667,
														"name": "MembershipPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "4538:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_MEMBERSHIP_TYPE_$1362_$_t_uint256_$returns$__$",
															"typeString": "function (address,enum GymToken.MEMBERSHIP_TYPE,uint256)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4538:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1673,
												"nodeType": "EmitStatement",
												"src": "4533:62:10"
											}
										]
									},
									"functionSelector": "265a5eea",
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1576,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1575,
												"name": "whenNotPaused",
												"nameLocations": [
													"3577:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 550,
												"src": "3577:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3577:13:10"
										},
										{
											"id": 1578,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1577,
												"name": "onlyMember",
												"nameLocations": [
													"3591:10:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1483,
												"src": "3591:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3591:10:10"
										}
									],
									"name": "purchaseMembership",
									"nameLocation": "3519:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "membershipType",
												"nameLocation": "3554:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "3538:30:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
													"typeString": "enum GymToken.MEMBERSHIP_TYPE"
												},
												"typeName": {
													"id": 1572,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1571,
														"name": "MEMBERSHIP_TYPE",
														"nameLocations": [
															"3538:15:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1362,
														"src": "3538:15:10"
													},
													"referencedDeclaration": 1362,
													"src": "3538:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_MEMBERSHIP_TYPE_$1362",
														"typeString": "enum GymToken.MEMBERSHIP_TYPE"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3537:32:10"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3602:0:10"
									},
									"scope": 1702,
									"src": "3510:1092:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "4730:178:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1682,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4744:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4750:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4744:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"baseExpression": {
															"id": 1684,
															"name": "membershipExpiry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "4763:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1686,
														"indexExpression": {
															"id": 1685,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "4780:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4763:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4744:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1698,
													"nodeType": "Block",
													"src": "4828:74:10",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1691,
																		"name": "membershipExpiry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "4849:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1693,
																	"indexExpression": {
																		"id": 1692,
																		"name": "member",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "4866:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4849:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1694,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4876:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4882:9:10",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4876:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4849:42:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1681,
															"id": 1697,
															"nodeType": "Return",
															"src": "4842:49:10"
														}
													]
												},
												"id": 1699,
												"nodeType": "IfStatement",
												"src": "4740:162:10",
												"trueBody": {
													"id": 1690,
													"nodeType": "Block",
													"src": "4789:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4810:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1681,
															"id": 1689,
															"nodeType": "Return",
															"src": "4803:8:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "8621026a",
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRemainingMembershipTime",
									"nameLocation": "4657:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "4692:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "4684:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4684:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4683:16:10"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "4721:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4721:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4720:9:10"
									},
									"scope": 1702,
									"src": "4648:260:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1703,
							"src": "230:4680:10",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								317,
								326,
								335,
								526,
								531,
								1150,
								1159,
								1384,
								1390,
								1396
							]
						}
					],
					"src": "32:5095:10"
				},
				"id": 10
			}
		}
	}
}